{"mappings":"6QAQA,IA2BAA,EA3BA,WACE,SAAAC,IAMEC,KAAKC,UAAW,EAkBpB,OAZEF,EAAAG,UAAAC,QAAA,WACOH,KAAKC,WACRD,KAAKC,UAAW,EAChBD,KAAKI,oBAQTL,EAAAG,UAAAE,gBAAA,aACFL,EAzBA,GCuCM,SAAUM,EAA0BC,EAAGC,GAC3C,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAI,EAAK,EAS5B,SAAUC,EAASC,EAAKC,GAC5B,OAAOD,EAAIE,QAAQD,IAAQ,EA0BvB,SAAUE,EAAkBH,EAAKI,EAAQC,GAC7C,IAAMC,EAAIN,EAAIO,OACd,GAAIP,EAAI,IAAMI,EACZ,OAAO,EACF,GAAIA,GAAUJ,EAAIM,EAAI,GAC3B,OAAOA,EAAI,EAEX,IAAIE,OAAC,EACL,GAAIH,EAAY,GACd,IAAKG,EAAI,EAAGA,EAAIF,IAAKE,EACnB,GAAIR,EAAIQ,GAAKJ,EACX,OAAOI,EAAI,OAGV,GAAIH,EAAY,GACrB,IAAKG,EAAI,EAAGA,EAAIF,IAAKE,EACnB,GAAIR,EAAIQ,IAAMJ,EACZ,OAAOI,OAIX,IAAKA,EAAI,EAAGA,EAAIF,IAAKE,EAAG,CACtB,GAAIR,EAAIQ,IAAMJ,EACZ,OAAOI,EACF,GAAIR,EAAIQ,GAAKJ,EAClB,MAAyB,mBAAdC,EACLA,EAAUD,EAAQJ,EAAIQ,EAAI,GAAIR,EAAIQ,IAAM,EACnCA,EAAI,EAEJA,EAEAR,EAAIQ,EAAI,GAAKJ,EAASA,EAASJ,EAAIQ,GACrCA,EAAI,EAEJA,EAKf,OAAOF,EAAI,EAST,SAAUG,EAAgBT,EAAKU,EAAOC,GAC1C,KAAOD,EAAQC,GAAK,CAClB,IAAMC,EAAMZ,EAAIU,GAChBV,EAAIU,GAASV,EAAIW,GACjBX,EAAIW,GAAOC,IACTF,IACAC,GASA,SAAUE,EAAOb,EAAKc,GAG1B,IAFA,IAAMC,EAAYC,MAAMC,QAAQH,GAAQA,EAAO,CAACA,GAC1CP,EAASQ,EAAUR,OAChBC,EAAI,EAAGA,EAAID,EAAQC,IAC1BR,EAAIA,EAAIO,QAAUQ,EAAUP,GA2C1B,SAAUU,EAAOC,EAAMC,GAC3B,IAAMC,EAAOF,EAAKZ,OAClB,GAAIc,IAASD,EAAKb,OAChB,OAAO,EAET,IAAK,IAAIC,EAAI,EAAGA,EAAIa,EAAMb,IACxB,GAAIW,EAAKX,KAAOY,EAAKZ,GACnB,OAAO,EAGX,OAAO,EClMH,SAAUc,IACd,OAAO,EAOH,SAAUC,IACd,OAAO,EAQH,SAAUC,KCpBV,SAAUC,IACd,OACG,WACC,MAAM,IAAIC,MAAM,kCADjB,GAWL,IAAIC,EAAc,EAWZ,SAAUC,EAAO3B,GACrB,OAAOA,EAAI4B,SAAW5B,EAAI4B,OAASC,SAASH,IAOvC,ICnCDI,EACiB,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAMOC,GAAoC,IAA1BJ,EAAG7B,QAAQ,WAuBrBkC,IAjBkC,IAAzBL,EAAG7B,QAAQ,YAA2C,GAAvB6B,EAAG7B,QAAQ,WAS5D6B,EAAG7B,QAAQ,iBAAmB,GAC9B6B,EAAGM,MAAK,2CAOmC,IAAzBN,EAAG7B,QAAQ,YAA0C,GAAtB6B,EAAG7B,QAAQ,SAMnDoC,GAAkC,IAA5BP,EAAG7B,QAAQ,aASjBqC,EACiB,oBAArBC,iBAAmCA,iBAAmB,EAOlDC,EACkB,oBAAtBC,mBACoB,oBAApBC,iBACPC,gBAAgBF,kBAMLG,EACM,oBAAVC,OAAyBA,MAAMrD,UAAUsD,OAKrCC,EAA2B,WACtC,IAAIC,GAAU,EACd,IACE,IAAMC,EAAUC,OAAOC,eAAe,GAAI,UAAW,CACnDC,IAAK,WACHJ,GAAU,KAIdK,OAAOC,iBAAiB,IAAK,KAAML,GACnCI,OAAOE,oBAAoB,IAAK,KAAMN,GACtC,MAAOO,IAGT,OAAOR,EAd+B,gfC7BxCS,EAnCA,SAAAC,GAIE,SAAAC,EAAYC,GAAZ,IAAAC,EAAAvE,KAEQwE,EACJ,oDAF4C,IFwB3B,SExByCC,MAAM,KAAK,IAIrE,gBACAH,EACA,uBAEFC,EAAAH,EAAAM,KAAA1E,KAAMwE,IAANxE,MAUKsE,KAAOA,EAKZC,EAAKI,KAAO,iBAGZJ,EAAKC,QAAUA,IAEnB,OAjC6BI,EAAAP,EAAAD,GAiC7BC,EAjCA,CAA6BlC,OCDvB,SAAU0C,EAAOC,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAIE,EAAAC,QAAeF,GCkB7B,IAkPIG,EAlPS,IAAIzD,MAAM,GA6DjB,SAAU0D,EAAIC,EAAW9E,EAAGC,EAAG8E,EAAGC,EAAGC,EAAGC,GAO5C,OANAJ,EAAU,GAAK9E,EACf8E,EAAU,GAAK7E,EACf6E,EAAU,GAAKC,EACfD,EAAU,GAAKE,EACfF,EAAU,GAAKG,EACfH,EAAU,GAAKI,EACRJ,EA4BH,SAAUK,EAAML,EAAWM,GAC/B,IAAMC,EAAID,EAAW,GACfE,EAAIF,EAAW,GAGrB,OAFAA,EAAW,GAAKN,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GAChEM,EAAW,GAAKN,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GACzDM,EA6DH,SAAUG,EAAQT,EAAWU,EAAKC,EAAKC,EAAIC,EAAIC,EAAOC,EAAKC,GAC/D,IAAMC,EAAMC,KAAKD,IAAIH,GACfK,EAAMD,KAAKC,IAAIL,GAOrB,OANAd,EAAU,GAAKY,EAAKO,EACpBnB,EAAU,GAAKa,EAAKI,EACpBjB,EAAU,IAAMY,EAAKK,EACrBjB,EAAU,GAAKa,EAAKM,EACpBnB,EAAU,GAAKe,EAAMH,EAAKO,EAAMH,EAAMJ,EAAKK,EAAMP,EACjDV,EAAU,GAAKe,EAAMF,EAAKI,EAAMD,EAAMH,EAAKM,EAAMR,EAC1CX,EAqCH,SAAUoB,EAAY3F,EAAQ4F,GAClC,IAyB0BC,EAzBpBC,GAyBoBD,EAzBFD,GA0Bb,GAAKC,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAzBtC7B,EAAe,IAAR8B,EAAW,IAElB,IAAMrG,EAAImG,EAAO,GACXlG,EAAIkG,EAAO,GACXpB,EAAIoB,EAAO,GACXnB,EAAImB,EAAO,GACXlB,EAAIkB,EAAO,GACXjB,EAAIiB,EAAO,GASjB,OAPA5F,EAAO,GAAKyE,EAAIqB,EAChB9F,EAAO,IAAMN,EAAIoG,EACjB9F,EAAO,IAAMwE,EAAIsB,EACjB9F,EAAO,GAAKP,EAAIqG,EAChB9F,EAAO,IAAMwE,EAAIG,EAAIF,EAAIC,GAAKoB,EAC9B9F,EAAO,KAAOP,EAAIkF,EAAIjF,EAAIgF,GAAKoB,EAExB9F,EAwBH,SAAU+F,EAASF,GACvB,IAAMG,EAAkB,UAAYH,EAAII,KAAK,MAAQ,IACrD,GAAI5D,EACF,OAAO2D,EAET,IAAME,EACJ7B,IAAuBA,EAAqB8B,SAASC,cAAc,QAErE,OADAF,EAAKG,MAAM9B,UAAYyB,EAChBE,EAAKG,MAAM9B,UCvRpB,IAAA+B,EACe,cADfA,EAEgB,eAFhBA,EAGY,WAHZA,EAIa,YCJbC,EACW,EADXA,EAEgB,EAFhBA,EAGS,EAHTA,EAIS,EAJTA,EAKS,EALTA,EAMQ,GCMF,SAAUC,EAAeC,GAE7B,IADA,IAAMC,EAASC,KACNvG,EAAI,EAAGwG,EAAKH,EAAYtG,OAAQC,EAAIwG,IAAMxG,EACjDyG,GAAiBH,EAAQD,EAAYrG,IAEvC,OAAOsG,EA0BH,SAAUI,EAAOJ,EAAQK,EAAOC,GACpC,OAAIA,GACFA,EAAW,GAAKN,EAAO,GAAKK,EAC5BC,EAAW,GAAKN,EAAO,GAAKK,EAC5BC,EAAW,GAAKN,EAAO,GAAKK,EAC5BC,EAAW,GAAKN,EAAO,GAAKK,EACrBC,GAEA,CACLN,EAAO,GAAKK,EACZL,EAAO,GAAKK,EACZL,EAAO,GAAKK,EACZL,EAAO,GAAKK,GAYZ,SAAUE,EAAMP,EAAQM,GAC5B,OAAIA,GACFA,EAAW,GAAKN,EAAO,GACvBM,EAAW,GAAKN,EAAO,GACvBM,EAAW,GAAKN,EAAO,GACvBM,EAAW,GAAKN,EAAO,GAChBM,GAEAN,EAAOQ,QAUZ,SAAUC,EAAyBT,EAAQ5B,EAAGC,GAClD,IAAIqC,EAAIC,EAeR,OAbED,EADEtC,EAAI4B,EAAO,GACRA,EAAO,GAAK5B,EACR4B,EAAO,GAAK5B,EAChBA,EAAI4B,EAAO,GAEX,GASKU,GANVC,EADEtC,EAAI2B,EAAO,GACRA,EAAO,GAAK3B,EACR2B,EAAO,GAAK3B,EAChBA,EAAI2B,EAAO,GAEX,GAEeW,EAWlB,SAAUC,EAAmBZ,EAAQ7B,GACzC,OAAO0C,EAAWb,EAAQ7B,EAAW,GAAIA,EAAW,IAehD,SAAU2C,EAAeC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,GAapB,SAAUF,EAAWb,EAAQ5B,EAAGC,GACpC,OAAO2B,EAAO,IAAM5B,GAAKA,GAAK4B,EAAO,IAAMA,EAAO,IAAM3B,GAAKA,GAAK2B,EAAO,GAUrE,SAAUiB,GAAuBjB,EAAQ7B,GAC7C,IAAM+C,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACdqB,EAAOrB,EAAO,GACd5B,EAAID,EAAW,GACfE,EAAIF,EAAW,GACjBmD,EAAezB,EAcnB,OAbIzB,EAAI8C,EACNI,GAA8BzB,EACrBzB,EAAIgD,IACbE,GAA8BzB,GAE5BxB,EAAI8C,EACNG,GAA8BzB,EACrBxB,EAAIgD,IACbC,GAA8BzB,GAE5ByB,IAAiBzB,IACnByB,EAAezB,GAEVyB,EAQH,SAAUrB,KACd,MAAO,CAACsB,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,GAYpC,SAAUC,GAAeN,EAAMC,EAAMC,EAAMC,EAAMf,GACrD,OAAIA,GACFA,EAAW,GAAKY,EAChBZ,EAAW,GAAKa,EAChBb,EAAW,GAAKc,EAChBd,EAAW,GAAKe,EACTf,GAEA,CAACY,EAAMC,EAAMC,EAAMC,GASxB,SAAUI,GAAoBnB,GAClC,OAAOkB,GAAeD,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,EAAUjB,GA4D5D,SAAUoB,GAAOX,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,GA+CpB,SAAUb,GAAiBH,EAAQ7B,GACnCA,EAAW,GAAK6B,EAAO,KACzBA,EAAO,GAAK7B,EAAW,IAErBA,EAAW,GAAK6B,EAAO,KACzBA,EAAO,GAAK7B,EAAW,IAErBA,EAAW,GAAK6B,EAAO,KACzBA,EAAO,GAAK7B,EAAW,IAErBA,EAAW,GAAK6B,EAAO,KACzBA,EAAO,GAAK7B,EAAW,IAwBrB,SAAUwD,GACd3B,EACA4B,EACAC,EACAhI,EACAiI,GAEA,KAAOD,EAAShI,EAAKgI,GAAUC,EAC7BC,GAAS/B,EAAQ4B,EAAgBC,GAASD,EAAgBC,EAAS,IAErE,OAAO7B,EAoBH,SAAU+B,GAAS/B,EAAQ5B,EAAGC,GAClC2B,EAAO,GAAKjB,KAAKiD,IAAIhC,EAAO,GAAI5B,GAChC4B,EAAO,GAAKjB,KAAKiD,IAAIhC,EAAO,GAAI3B,GAChC2B,EAAO,GAAKjB,KAAKkD,IAAIjC,EAAO,GAAI5B,GAChC4B,EAAO,GAAKjB,KAAKkD,IAAIjC,EAAO,GAAI3B,GAY5B,SAAU6D,GAAclC,EAAQmC,GACpC,IAAIC,EAEJ,OADAA,EAAMD,EAASE,GAAcrC,OAI7BoC,EAAMD,EAASG,GAAetC,OAI9BoC,EAAMD,EAASI,GAAYvC,KANlBoC,GAUTA,EAAMD,EAASK,GAAWxC,OAInB,EASH,SAAUyC,GAAQzC,GACtB,IAAI0C,EAAO,EAIX,OAHKC,GAAQ3C,KACX0C,EAAOE,GAAS5C,GAAU6C,GAAU7C,IAE/B0C,EASH,SAAUL,GAAcrC,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,IAStB,SAAUsC,GAAetC,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,IAStB,SAAU8C,GAAU9C,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GAS3D,SAAU+C,GAAU/C,EAAQgD,GAChC,IAAI7E,EAYJ,OAXI6E,IAAWpD,EACbzB,EAAakE,GAAcrC,GAClBgD,IAAWpD,EACpBzB,EAAamE,GAAetC,GACnBgD,IAAWpD,EACpBzB,EAAaqE,GAAWxC,GACfgD,IAAWpD,EACpBzB,EAAaoE,GAAYvC,GAEzB1C,GAAO,EAAO,IAETa,EAwBH,SAAU8E,GACdC,EACAC,EACAC,EACAC,EACA/C,GAEA,IAAMI,EAAMyC,EAAaE,EAAK,GAAM,EAC9B1C,EAAMwC,EAAaE,EAAK,GAAM,EAC9BC,EAAcvE,KAAKC,IAAIoE,GACvBG,EAAcxE,KAAKD,IAAIsE,GACvBI,EAAO9C,EAAK4C,EACZG,EAAO/C,EAAK6C,EACZG,EAAO/C,EAAK2C,EACZK,EAAOhD,EAAK4C,EACZnF,EAAI8E,EAAO,GACX7E,EAAI6E,EAAO,GACXU,EAAKxF,EAAIoF,EAAOG,EAChBE,EAAKzF,EAAIoF,EAAOG,EAChBG,EAAK1F,EAAIoF,EAAOG,EAChBI,EAAK3F,EAAIoF,EAAOG,EAChBK,EAAK3F,EAAIoF,EAAOC,EAChBO,EAAK5F,EAAIoF,EAAOC,EAChBQ,EAAK7F,EAAIoF,EAAOC,EAChBS,EAAK9F,EAAIoF,EAAOC,EACtB,OAAOlC,GACLzC,KAAKiD,IAAI4B,EAAIC,EAAIC,EAAIC,GACrBhF,KAAKiD,IAAIgC,EAAIC,EAAIC,EAAIC,GACrBpF,KAAKkD,IAAI2B,EAAIC,EAAIC,EAAIC,GACrBhF,KAAKkD,IAAI+B,EAAIC,EAAIC,EAAIC,GACrB7D,GAUE,SAAUuC,GAAU7C,GACxB,OAAOA,EAAO,GAAKA,EAAO,GAqBtB,SAAUoE,GAAgBrD,EAASC,EAASV,GAChD,IAAM+D,EAAe/D,GA1Yd,CAACiB,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,GAmavC,OAxBI+C,GAAWvD,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvBqD,EAAa,GAAKtD,EAAQ,GAE1BsD,EAAa,GAAKrD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqD,EAAa,GAAKtD,EAAQ,GAE1BsD,EAAa,GAAKrD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqD,EAAa,GAAKtD,EAAQ,GAE1BsD,EAAa,GAAKrD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqD,EAAa,GAAKtD,EAAQ,GAE1BsD,EAAa,GAAKrD,EAAQ,IAG5BS,GAAoB4C,GAEfA,EA2BH,SAAU7B,GAAWxC,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,IAStB,SAAUuC,GAAYvC,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,IAStB,SAAU4C,GAAS5C,GACvB,OAAOA,EAAO,GAAKA,EAAO,GAUtB,SAAUsE,GAAWvD,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,GAUpB,SAAU2B,GAAQ3C,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,GA4G/C,SAAUuE,GAAevE,EAAQwE,EAAalE,EAAYmE,GAC9D,IAAI1E,EAAc,GAClB,GAAI0E,EAAY,EAGd,IAFA,IAAMC,EAAQ1E,EAAO,GAAKA,EAAO,GAC3B2E,EAAS3E,EAAO,GAAKA,EAAO,GACzBtG,EAAI,EAAGA,EAAI+K,IAAa/K,EAC/BqG,EAAY6E,KACV5E,EAAO,GAAM0E,EAAQhL,EAAK+K,EAC1BzE,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM2E,EAASjL,EAAK+K,EAC3BzE,EAAO,GAAM0E,EAAQhL,EAAK+K,EAC1BzE,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM2E,EAASjL,EAAK+K,QAI/B1E,EAAc,CACZC,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXwE,EAAYzE,EAAaA,EAAa,GAGtC,IAFA,IAAM8E,EAAK,GACLC,EAAK,GACKC,GAAPrL,EAAI,EAAOqG,EAAYtG,QAAQC,EAAIqL,EAAGrL,GAAK,EAClDmL,EAAGD,KAAK7E,EAAYrG,IACpBoL,EAAGF,KAAK7E,EAAYrG,EAAI,IAE1B,OA7xBF,SAA4BmL,EAAIC,EAAIxE,GAKlC,OAAOkB,GAJMzC,KAAKiD,IAAIgD,MAAM,KAAMH,GACrB9F,KAAKiD,IAAIgD,MAAM,KAAMF,GACrB/F,KAAKkD,IAAI+C,MAAM,KAAMH,GACrB9F,KAAKkD,IAAI+C,MAAM,KAAMF,GACYxE,GAwxBvC2E,CAAmBJ,EAAIC,EAAIxE,GCpzB9B,SAAU4E,GAAM7E,EAAO2B,EAAKC,GAChC,OAAOlD,KAAKiD,IAAIjD,KAAKkD,IAAI5B,EAAO2B,GAAMC,GAYjC,IAAMkD,GAIP,SAAUpG,KAELA,KAAKqG,KAGL,SAAUhH,GACf,IAAMC,EAAyBU,KAAMsG,IAAIjH,GACzC,OAAQC,EAAI,EAAIA,GAAK,GAediH,GAIP,SAAUvG,KAELA,KAAKwG,KAGL,SAAUnH,GACf,OAAOW,KAAKyG,IAAIpH,GAAKW,KAAK0G,OAiB1B,SAAUC,GAAuBtH,EAAGC,EAAGwF,EAAII,EAAIH,EAAII,GACvD,IAAMxD,EAAKoD,EAAKD,EACVlD,EAAKuD,EAAKD,EAChB,GAAW,IAAPvD,GAAmB,IAAPC,EAAU,CACxB,IAAMgF,IAAMvH,EAAIyF,GAAMnD,GAAMrC,EAAI4F,GAAMtD,IAAOD,EAAKA,EAAKC,EAAKA,GACxDgF,EAAI,GACN9B,EAAKC,EACLG,EAAKC,GACIyB,EAAI,IACb9B,GAAMnD,EAAKiF,EACX1B,GAAMtD,EAAKgF,GAGf,OAAOC,GAAgBxH,EAAGC,EAAGwF,EAAII,GAW7B,SAAU2B,GAAgB/B,EAAII,EAAIH,EAAII,GAC1C,IAAMxD,EAAKoD,EAAKD,EACVlD,EAAKuD,EAAKD,EAChB,OAAOvD,EAAKA,EAAKC,EAAKA,EAgElB,SAAUkF,GAAUC,GACxB,OAAyB,IAAjBA,EAAwB/G,KAAKgH,GASjC,SAAUC,GAAUC,GACxB,OAAQA,EAAiBlH,KAAKgH,GAAM,IAUhC,SAAUG,GAAOnN,EAAGC,GACxB,IAAMmN,EAAIpN,EAAIC,EACd,OAAOmN,EAAInN,EAAI,EAAImN,EAAInN,EAAImN,EAWvB,SAAUC,GAAKrN,EAAGC,EAAGoF,GACzB,OAAOrF,EAAIqF,GAAKpF,EAAID,GAShB,SAAUsN,GAAQ7M,EAAG8M,GACzB,IAAMC,EAASxH,KAAKyH,IAAI,GAAIF,GAC5B,OAAOvH,KAAK0H,MAAMjN,EAAI+M,GAAUA,EAqB5B,SAAUG,GAAMlN,EAAG8M,GACvB,OAAOvH,KAAK4H,MAAMN,GAAQ7M,EAAG8M,IAUzB,SAAUM,GAAKpN,EAAG8M,GACtB,OAAOvH,KAAK8H,KAAKR,GAAQ7M,EAAG8M,ICnO9B,IAAMQ,GAAa,oDAQbC,GAAe,4BAQf,SAAUC,GAASC,GACvB,MAAqB,iBAAVA,EACFA,EAEAC,GAASD,GASpB,SAASE,GAAUF,GACjB,IAAMG,EAAK3H,SAASC,cAAc,OAElC,GADA0H,EAAGzH,MAAMsH,MAAQA,EACM,KAAnBG,EAAGzH,MAAMsH,MAAc,CACzBxH,SAAS4H,KAAKC,YAAYF,GAC1B,IAAMG,EAAMC,iBAAiBJ,GAAIH,MAEjC,OADAxH,SAAS4H,KAAKI,YAAYL,GACnBG,EAEP,MAAO,GAQJ,IAcCG,GAKFC,GAnBOC,IAcLF,GAAQ,GAKVC,GAAY,EAEhB,SAKYE,GACR,IAAIZ,EACJ,GAAIS,GAAMI,eAAeD,GACvBZ,EAAQS,GAAMG,OACT,CACL,GAAIF,IAtBa,KAsBgB,CAC/B,IAAIjO,EAAI,EACR,IAAK,IAAMqO,KAAOL,GACE,IAAP,EAANhO,cACIgO,GAAMK,KACXJ,IAIRV,EA6BR,SAA6BY,GAC3B,IAAI1B,EAAG6B,EAAGhP,EAAGD,EAAGkO,EAMhB,GAJIF,GAAgBkB,KAAKJ,KACvBA,EAAIV,GAAUU,IAGZf,GAAcmB,KAAKJ,GAAI,CAEzB,IAAMrO,EAAIqO,EAAEpO,OAAS,EACjBsE,OAAC,EAEHA,EADEvE,GAAK,EACH,EAEA,EAEN,IAAM0O,EAAiB,IAAN1O,GAAiB,IAANA,EAC5B2M,EAAIgC,SAASN,EAAEO,OAAO,EAAI,EAAIrK,EAAGA,GAAI,IACrCiK,EAAIG,SAASN,EAAEO,OAAO,EAAI,EAAIrK,EAAGA,GAAI,IACrC/E,EAAImP,SAASN,EAAEO,OAAO,EAAI,EAAIrK,EAAGA,GAAI,IAEnChF,EADEmP,EACEC,SAASN,EAAEO,OAAO,EAAI,EAAIrK,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACFoI,GAAKA,GAAK,GAAKA,EACf6B,GAAKA,GAAK,GAAKA,EACfhP,GAAKA,GAAK,GAAKA,EACXkP,IACFnP,GAAKA,GAAK,GAAKA,IAGnBkO,EAAQ,CAACd,EAAG6B,EAAGhP,EAAGD,EAAI,UACS,GAAtB8O,EAAEzO,QAAQ,SAGnBiP,GADApB,EAAQY,EAAErH,MAAM,GAAG,GAAItD,MAAM,KAAKoL,IAAIC,SAER,GAArBV,EAAEzO,QAAQ,UAEnB6N,EAAQY,EAAErH,MAAM,GAAG,GAAItD,MAAM,KAAKoL,IAAIC,SAChC3D,KAAK,GACXyD,GAAUpB,IAEV3J,GAAO,EAAO,IAEhB,OAAO2J,EA3EOuB,CAAoBX,GAC5BH,GAAMG,GAAKZ,IACTU,GAEJ,OAAOV,IAYP,SAAUwB,GAAQxB,GACtB,OAAI/M,MAAMC,QAAQ8M,GACTA,EAEAW,GAAWX,GA+DhB,SAAUoB,GAAUpB,GAKxB,OAJAA,EAAM,GAAK/B,GAAO+B,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK/B,GAAO+B,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK/B,GAAO+B,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK/B,GAAM+B,EAAM,GAAI,EAAG,GACvBA,EAOH,SAAUC,GAASD,GACvB,IAAId,EAAIc,EAAM,GACVd,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI6B,EAAIf,EAAM,GACVe,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIhP,EAAIiO,EAAM,GAKd,OAJIjO,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGX,QAAUmN,EAAI,IAAM6B,EAAI,IAAMhP,EAAI,UADlB0P,IAAbzB,EAAM,GAAmB,EAAIlI,KAAK0H,MAAiB,IAAXQ,EAAM,IAAY,KACjB,IC/MrD,IAAA0B,GAAA,WACE,SAAAC,IAKEnQ,KAAKoQ,OAAS,GAMdpQ,KAAKqQ,WAAa,EAMlBrQ,KAAKsQ,cAAgB,GAoEzB,OA9DEH,EAAAjQ,UAAAqQ,MAAA,WACEvQ,KAAKoQ,OAAS,GACdpQ,KAAKqQ,WAAa,GAMpBF,EAAAjQ,UAAAsQ,eAAA,WACE,OAAOxQ,KAAKqQ,WAAarQ,KAAKsQ,eAMhCH,EAAAjQ,UAAAuQ,OAAA,WACE,GAAIzQ,KAAKwQ,iBAAkB,CACzB,IAAIvP,EAAI,EACR,IAAK,IAAMqO,KAAOtP,KAAKoQ,OAAQ,CAC7B,IAAMM,EAAY1Q,KAAKoQ,OAAOd,GACZ,IAAP,EAANrO,MAAmByP,EAAUC,uBACzB3Q,KAAKoQ,OAAOd,KACjBtP,KAAKqQ,eAYfF,EAAAjQ,UAAA4D,IAAA,SAAI8M,EAAKC,EAAarC,GACpB,IAAMc,EAAMwB,GAAOF,EAAKC,EAAarC,GACrC,OAAOc,KAAOtP,KAAKoQ,OAASpQ,KAAKoQ,OAAOd,GAAO,MASjDa,EAAAjQ,UAAA6Q,IAAA,SAAIH,EAAKC,EAAarC,EAAOkC,GAC3B,IAAMpB,EAAMwB,GAAOF,EAAKC,EAAarC,GACrCxO,KAAKoQ,OAAOd,GAAOoB,IACjB1Q,KAAKqQ,YAUTF,EAAAjQ,UAAA8Q,QAAA,SAAQC,GACNjR,KAAKsQ,cAAgBW,EACrBjR,KAAKyQ,UAETN,EAtFA,GA8FA,SAASW,GAAOF,EAAKC,EAAarC,GAEhC,OAAOqC,EAAc,IAAMD,EAAM,KADbpC,EAAQD,GAASC,GAAS,YAWnC0C,GAAS,IAAIhB,mNCvC1BiB,GA9DA,WAIE,SAAAC,EAAYC,GAIVrR,KAAKsR,mBAKLtR,KAAKuR,iBAOLvR,KAAKqR,KAAOA,EAOZrR,KAAKa,OAAS,KAmBlB,OAXEuQ,EAAAlR,UAAAsR,eAAA,WACExR,KAAKuR,kBAAmB,GAO1BH,EAAAlR,UAAAuR,gBAAA,WACEzR,KAAKsR,oBAAqB,GAE9BF,EA9CA,GCPAM,GAMkB,0ICAX,IAAMC,GACc,mBAAlB/N,OAAOgO,OACVhO,OAAOgO,OACP,SAAU/Q,EAAQgR,GAChB,GAAIhR,MAAAA,EACF,MAAM,IAAIiR,UAAU,8CAItB,IADA,IAAMC,EAASnO,OAAO/C,GACbI,EAAI,EAAGwG,EAAKuK,UAAUhR,OAAQC,EAAIwG,IAAMxG,EAAG,CAClD,IAAMwF,EAASuL,UAAU/Q,GACzB,GAAIwF,MAAAA,EACF,IAAK,IAAM6I,KAAO7I,EACZA,EAAO4I,eAAeC,KACxByC,EAAOzC,GAAO7I,EAAO6I,IAK7B,OAAOyC,GAOT,SAAUE,GAAMC,GACpB,IAAK,IAAMC,KAAYD,SACdA,EAAOC,GAYX,IAAMC,GACc,mBAAlBxO,OAAOyO,OACVzO,OAAOyO,OACP,SAAUH,GACR,IAAMG,EAAS,GACf,IAAK,IAAMF,KAAYD,EACrBG,EAAOlG,KAAK+F,EAAOC,IAErB,OAAOE,GAQT,SAAUC,GAAQJ,GACtB,IAAIC,EACJ,IAAKA,KAAYD,EACf,OAAO,EAET,OAAQC,geCiHVI,GAhKA,SAAAnO,GAIE,SAAAoO,EAAYC,GAAZ,IAAAlO,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAKmO,aAAeD,EAMpBlO,EAAKoO,iBAAmB,KAMxBpO,EAAKqO,aAAe,KAMpBrO,EAAKsO,WAAa,OAiItB,OA9JqBC,GAAAN,EAAApO,GAoCnBoO,EAAAtS,UAAA8D,iBAAA,SAAiBqN,EAAM0B,GACrB,GAAK1B,GAAS0B,EAAd,CAGA,IAAMC,EAAYhT,KAAK6S,aAAe7S,KAAK6S,WAAa,IAClDI,EAAmBD,EAAU3B,KAAU2B,EAAU3B,GAAQ,KACpB,IAAvC4B,EAAiBtS,QAAQoS,IAC3BE,EAAiB9G,KAAK4G,KAc1BP,EAAAtS,UAAAgT,cAAA,SAAcC,GACZ,IAAMC,EAA4B,iBAAVD,EAClB9B,EAAO+B,EAAWD,EAAQA,EAAM9B,KAChC2B,EAAYhT,KAAK6S,YAAc7S,KAAK6S,WAAWxB,GACrD,GAAK2B,EAAL,CAIA,IAAMK,EAAMD,EAAW,IAAIjC,GAAMgC,GAA+BA,EAC3DE,EAAIxS,SACPwS,EAAIxS,OAASb,KAAK0S,cAAgB1S,MAEpC,IAQIsT,EAREC,EAAcvT,KAAK4S,eAAiB5S,KAAK4S,aAAe,IACxDY,EACJxT,KAAK2S,mBAAqB3S,KAAK2S,iBAAmB,IAC9CtB,KAAQkC,IACZA,EAAYlC,GAAQ,EACpBmC,EAAgBnC,GAAQ,KAExBkC,EAAYlC,GAEd,IAAK,IAAIpQ,EAAI,EAAGwG,EAAKuL,EAAUhS,OAAQC,EAAIwG,IAAMxG,EAU/C,IAAkB,KARhBqS,EADE,gBAAiBN,EAAU/R,GAE3B+R,EAAU/R,GACVwS,YAAYJ,GAGZL,EAAU/R,GACVyD,KAAK1E,KAAMqT,KAEYA,EAAI/B,mBAAoB,CACjDgC,GAAY,EACZ,MAGJ,GAA4B,KAAtBC,EAAYlC,GAAa,CAC7B,IAAIqC,EAAKF,EAAgBnC,GAEzB,WADOmC,EAAgBnC,GAChBqC,KACL1T,KAAKiE,oBAAoBoN,EAAMpP,UAE1BsR,EAAYlC,GAErB,OAAOiC,IAMTd,EAAAtS,UAAAE,gBAAA,WACEJ,KAAK6S,YAAcZ,GAAMjS,KAAK6S,aAUhCL,EAAAtS,UAAAyT,aAAA,SAAatC,GACX,OAAQrR,KAAK6S,YAAc7S,KAAK6S,WAAWxB,SAAUpB,GAQvDuC,EAAAtS,UAAAyQ,YAAA,SAAYiD,GACV,QAAK5T,KAAK6S,aAGHe,EACHA,KAAY5T,KAAK6S,WACjBjP,OAAOiQ,KAAK7T,KAAK6S,YAAY7R,OAAS,IAO5CwR,EAAAtS,UAAA+D,oBAAA,SAAoBoN,EAAM0B,GACxB,IAAMC,EAAYhT,KAAK6S,YAAc7S,KAAK6S,WAAWxB,GACrD,GAAI2B,EAAW,CACb,IAAMc,EAAQd,EAAUrS,QAAQoS,IAClB,IAAVe,IACE9T,KAAK2S,kBAAoBtB,KAAQrR,KAAK2S,kBAExCK,EAAUc,GAAS7R,IACjBjC,KAAK2S,iBAAiBtB,KAExB2B,EAAUe,OAAOD,EAAO,GACC,IAArBd,EAAUhS,eACLhB,KAAK6S,WAAWxB,OAMnCmB,EA9JA,CAAqB1S,GCnBrBkU,GAMU,SANVA,GAaS,QAbTA,GAiBe,cAjBfA,GAkBS,QAlBTA,GAmBY,WAnBZA,GAwBW,UAxBXA,GAyBY,WAzBZA,GA0BQ,OA1BRA,GA2BU,SA3BVA,GA4Ba,YA5BbA,GA6BS,QCSH,SAAUC,GAAOpT,EAAQwQ,EAAM0B,EAAUmB,EAAUC,GAIvD,GAHID,GAAYA,IAAarT,IAC3BkS,EAAWA,EAASqB,KAAKF,IAEvBC,EAAU,CACZ,IAAME,EAAmBtB,EACzBA,EAAW,WACTlS,EAAOoD,oBAAoBoN,EAAM0B,GACjCsB,EAAiB9H,MAAMvM,KAAMgS,YAGjC,IAAMsC,EAAY,CAChBzT,OAAQA,EACRwQ,KAAMA,EACN0B,SAAUA,GAGZ,OADAlS,EAAOmD,iBAAiBqN,EAAM0B,GACvBuB,EAuBH,SAAUC,GAAW1T,EAAQwQ,EAAM0B,EAAUmB,GACjD,OAAOD,GAAOpT,EAAQwQ,EAAM0B,EAAUmB,GAAU,GAY5C,SAAUM,GAAclF,GACxBA,GAAOA,EAAIzO,SACbyO,EAAIzO,OAAOoD,oBAAoBqL,EAAI+B,KAAM/B,EAAIyD,UAC7Cd,GAAM3C,keC9DVmF,GAAA,SAAArQ,GACE,SAAAsQ,IAAA,IAAAnQ,EACEH,EAAAM,KAAA1E,OAAOA,YAEPuE,EAAKoQ,GAEDpQ,EAAKqQ,WAGTrQ,EAAKsQ,KAEDtQ,EAAKuQ,aAGTvQ,EAAKwQ,GAAiDxQ,EAAKyQ,WAM3DzQ,EAAK0Q,UAAY,IAgFrB,OApGyBC,GAAAR,EAAAtQ,GA2BvBsQ,EAAAxU,UAAAiV,QAAA,aACInV,KAAKiV,UACPjV,KAAKkT,cAAcc,KASrBU,EAAAxU,UAAAkV,YAAA,WACE,OAAOpV,KAAKiV,WASdP,EAAAxU,UAAA0U,WAAA,SAAWvD,EAAM0B,GACf,GAAItR,MAAMC,QAAQ2P,GAAO,CAGvB,IAFA,IAAMgE,EAAMhE,EAAKrQ,OACX6S,EAAO,IAAIpS,MAAM4T,GACdpU,EAAI,EAAGA,EAAIoU,IAAOpU,EACzB4S,EAAK5S,GAAKgT,GAAOjU,KAAMqR,EAAKpQ,GAAI8R,GAElC,OAAOc,EAEP,OAAOI,GAAOjU,KAA6BqR,EAAO0B,IAUtD2B,EAAAxU,UAAA4U,aAAA,SAAazD,EAAM0B,GACjB,IAAIzD,EACJ,GAAI7N,MAAMC,QAAQ2P,GAAO,CACvB,IAAMgE,EAAMhE,EAAKrQ,OACjBsO,EAAM,IAAI7N,MAAM4T,GAChB,IAAK,IAAIpU,EAAI,EAAGA,EAAIoU,IAAOpU,EACzBqO,EAAIrO,GAAKsT,GAAWvU,KAAMqR,EAAKpQ,GAAI8R,QAGrCzD,EAAMiF,GAAWvU,KAA6BqR,EAAO0B,GAGvD,OADuBA,EAAUuC,OAAShG,EACnCA,GASToF,EAAAxU,UAAA8U,WAAA,SAAW3D,EAAM0B,GACf,IAAMzD,EAA6ByD,EAAUuC,OAC7C,GAAIhG,EACFiG,GAAQjG,QACH,GAAI7N,MAAMC,QAAQ2P,GACvB,IAAK,IAAIpQ,EAAI,EAAGwG,EAAK4J,EAAKrQ,OAAQC,EAAIwG,IAAMxG,EAC1CjB,KAAKiE,oBAAoBoN,EAAKpQ,GAAI8R,QAGpC/S,KAAKiE,oBAAoBoN,EAAM0B,IAGrC2B,EApGA,CAAyBc,GAAAvQ,SA6InB,SAAUsQ,GAAQjG,GACtB,GAAI7N,MAAMC,QAAQ4N,GAChB,IAAK,IAAIrO,EAAI,EAAGwG,EAAK6H,EAAItO,OAAQC,EAAIwG,IAAMxG,EACzCuT,GAAclF,EAAIrO,SAGpBuT,GAA8DlF,GAnClEmF,GAAWvU,UAAUyU,GAYrBF,GAAWvU,UAAU2U,KASrBJ,GAAWvU,UAAU6U,OAkBrBU,GAAehB,6dClLfiB,GAAA,SAAAtR,GAME,SAAAsR,EAAYrE,EAAM/B,EAAKqG,GAAvB,IAAApR,EACEH,EAAAM,KAAA1E,KAAMqR,IAAKrR,YAOXuE,EAAK+K,IAAMA,EAQX/K,EAAKoR,SAAWA,IAEpB,OAxBiCC,GAAAF,EAAAtR,GAwBjCsR,EAxBA,CAAiCvE,IA2PjC0E,GA/KA,SAAAzR,GAIE,SAAA0R,EAAYC,GAAZ,IAAAxR,EACEH,EAAAM,KAAA1E,OAAOA,YAKPuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAML1S,EAAOkC,GAMPA,EAAKyR,QAAU,UAEI/F,IAAf8F,GACFxR,EAAK0R,cAAcF,KA0IzB,OA7KyBH,GAAAE,EAAA1R,GA6CvB0R,EAAA5V,UAAA4D,IAAA,SAAIwL,GACF,IAAI1H,EAIJ,OAHI5H,KAAKgW,SAAWhW,KAAKgW,QAAQ3G,eAAeC,KAC9C1H,EAAQ5H,KAAKgW,QAAQ1G,IAEhB1H,GAQTkO,EAAA5V,UAAAgW,QAAA,WACE,OAAQlW,KAAKgW,SAAWpS,OAAOiQ,KAAK7T,KAAKgW,UAAa,IAQxDF,EAAA5V,UAAAiW,cAAA,WACE,OAAQnW,KAAKgW,SAAWrE,GAAO,GAAI3R,KAAKgW,UAAa,IAMvDF,EAAA5V,UAAAkW,cAAA,WACE,QAASpW,KAAKgW,SAOhBF,EAAA5V,UAAAmW,OAAA,SAAO/G,EAAKqG,GACV,IAAIW,EACJA,EAAY,UAAAC,OAAUjH,GAClBtP,KAAK2Q,YAAY2F,IACnBtW,KAAKkT,cAAc,IAAIwC,GAAYY,EAAWhH,EAAKqG,IAErDW,EAAY5E,GACR1R,KAAK2Q,YAAY2F,IACnBtW,KAAKkT,cAAc,IAAIwC,GAAYY,EAAWhH,EAAKqG,KAQvDG,EAAA5V,UAAAsW,kBAAA,SAAkBlH,EAAKyD,GACrB/S,KAAKgE,iBAAiB,UAAAuS,OAAUjH,GAAOyD,IAOzC+C,EAAA5V,UAAAuW,qBAAA,SAAqBnH,EAAKyD,GACxB/S,KAAKiE,oBAAoB,UAAAsS,OAAUjH,GAAOyD,IAU5C+C,EAAA5V,UAAA6Q,IAAA,SAAIzB,EAAK1H,EAAO8O,GACd,IAAMrE,EAASrS,KAAKgW,UAAYhW,KAAKgW,QAAU,IAC/C,GAAIU,EACFrE,EAAO/C,GAAO1H,MACT,CACL,IAAM+N,EAAWtD,EAAO/C,GACxB+C,EAAO/C,GAAO1H,EACV+N,IAAa/N,GACf5H,KAAKqW,OAAO/G,EAAKqG,KAYvBG,EAAA5V,UAAA+V,cAAA,SAAc5D,EAAQqE,GACpB,IAAK,IAAMpH,KAAO+C,EAChBrS,KAAK+Q,IAAIzB,EAAK+C,EAAO/C,GAAMoH,IAS/BZ,EAAA5V,UAAAyW,gBAAA,SAAgBlQ,GACTA,EAAOuP,SAGZrE,GAAO3R,KAAKgW,UAAYhW,KAAKgW,QAAU,IAAKvP,EAAOuP,UASrDF,EAAA5V,UAAA0W,MAAA,SAAMtH,EAAKoH,GACT,GAAI1W,KAAKgW,SAAW1G,KAAOtP,KAAKgW,QAAS,CACvC,IAAML,EAAW3V,KAAKgW,QAAQ1G,UACvBtP,KAAKgW,QAAQ1G,GAChBgD,GAAQtS,KAAKgW,WACfhW,KAAKgW,QAAU,MAEZU,GACH1W,KAAKqW,OAAO/G,EAAKqG,KAIzBG,EA7KA,CAAyBe,GAAA5R,SClFzB6R,GACW,UADXA,GAEW,UAFXA,GAGU,SAHVA,GAIW,SAJXA,GAKkB,gBALlBA,GAMkB,gBANlBA,GAOY,UAPZA,GAQY,UARZA,GASU,SATVA,GAUO,geC4XPC,GA9UA,SAAA3S,GAIE,SAAA4S,EAAYrT,GAAZ,IAAAY,EACEH,EAAAM,KAAA1E,OAAOA,KAKPuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAMLxQ,EAAK0S,YAActT,EAAQuT,WAK3B,IAAMC,EAAaxF,GAAO,GAAIhO,SACI,iBAAvBA,EAAQwT,oBACVA,EAAWA,WAClBxF,GAAOwF,EAAYxT,EAAQwT,aAG7BA,EAAWL,SACW7G,IAApBtM,EAAQyT,QAAwBzT,EAAQyT,QAAU,EACpDvS,EAAoD,iBAAtCsS,EAAWL,IAAqC,IAE9DK,EAAWL,SACW7G,IAApBtM,EAAQ0T,SAAwB1T,EAAQ0T,QAC1CF,EAAWL,IAAyBnT,EAAQ2T,OAC5CH,EAAWL,SACiB7G,IAA1BtM,EAAQ4T,cAA8B5T,EAAQ4T,cAAgBzO,EAAAA,EAChEqO,EAAWL,SACiB7G,IAA1BtM,EAAQ6T,cAA8B7T,EAAQ6T,cAAgB,EAChEL,EAAWL,SACW7G,IAApBtM,EAAQ8T,QAAwB9T,EAAQ8T,SAAW3O,EAAAA,EACrDqO,EAAWL,SACW7G,IAApBtM,EAAQ+T,QAAwB/T,EAAQ+T,QAAU5O,EAAAA,EAMpDvE,EAAKoT,gBACsB1H,IAAzBkH,EAAWS,UAA0BT,EAAWS,UAAY,kBACvDT,EAAWS,UAElBrT,EAAK0R,cAAckB,GAMnB5S,EAAKsT,OAAS,OAyQlB,OA5UwBC,GAAAd,EAAA5S,GA0EtB4S,EAAA9W,UAAA6X,cAAA,WACE,OAAO/X,KAAKiX,aAMdD,EAAA9W,UAAA8X,aAAA,WACE,OAAOhY,KAAK2X,YAUdX,EAAA9W,UAAA+X,cAAA,SAAcC,GAEZ,IAAMC,EACJnY,KAAK6X,QACa,CAChBO,MAAOpY,KACPqY,aAAyBpI,IAAhBiI,GAAmCA,GAE1CZ,EAAStX,KAAKsY,YAWpB,OAVAH,EAAMf,QAAU3K,GAAMnG,KAAK0H,MAA0B,IAApBhO,KAAKuY,cAAsB,IAAK,EAAG,GACpEJ,EAAMd,QAAUrX,KAAKwY,aACrBL,EAAM5Q,OAASvH,KAAKyY,YACpBN,EAAMb,YAAoBrH,IAAXqH,GAAyBa,EAAME,QAAqBf,EAAXxO,EAAAA,EACxDqP,EAAMZ,cAAgBvX,KAAK0Y,mBAC3BP,EAAMX,cAAgBlR,KAAKkD,IAAIxJ,KAAK2Y,mBAAoB,GACxDR,EAAMV,QAAUzX,KAAK4Y,aACrBT,EAAMT,QAAU1X,KAAK6Y,aACrB7Y,KAAK6X,OAASM,EAEPA,GASTnB,EAAA9W,UAAA4Y,eAAA,SAAeC,GACb,OAAO7W,KAST8U,EAAA9W,UAAA8Y,oBAAA,SAAoBC,GAClB,OAAO/W,KAUT8U,EAAA9W,UAAAuY,UAAA,WACE,OACEzY,KAAK8D,IAAIgT,KAUbE,EAAA9W,UAAAwY,iBAAA,WACE,OAA8B1Y,KAAK8D,IAAIgT,KASzCE,EAAA9W,UAAAyY,iBAAA,WACE,OAA8B3Y,KAAK8D,IAAIgT,KASzCE,EAAA9W,UAAA0Y,WAAA,WACE,OAA8B5Y,KAAK8D,IAAIgT,KASzCE,EAAA9W,UAAA2Y,WAAA,WACE,OAA8B7Y,KAAK8D,IAAIgT,KASzCE,EAAA9W,UAAAqY,WAAA,WACE,OAA8BvY,KAAK8D,IAAIgT,KAOzCE,EAAA9W,UAAAgZ,eAAA,WACE,OAAOhX,KAST8U,EAAA9W,UAAAsY,WAAA,WACE,OAA+BxY,KAAK8D,IAAIgT,KAU1CE,EAAA9W,UAAAoY,UAAA,WACE,OAA8BtY,KAAK8D,IAAIgT,KAOzCE,EAAA9W,UAAAiZ,cAAA,SAAcC,GACZpZ,KAAKiX,YAAcmC,EACnBpZ,KAAKmV,WAUP6B,EAAA9W,UAAAmZ,UAAA,SAAU9R,GACRvH,KAAK+Q,IAAI+F,GAAsBvP,IASjCyP,EAAA9W,UAAAoZ,iBAAA,SAAiB/B,GACfvX,KAAK+Q,IAAI+F,GAA8BS,IASzCP,EAAA9W,UAAAqZ,iBAAA,SAAiB/B,GACfxX,KAAK+Q,IAAI+F,GAA8BU,IAWzCR,EAAA9W,UAAAsZ,WAAA,SAAW9B,GACT1X,KAAK+Q,IAAI+F,GAAwBY,IAWnCV,EAAA9W,UAAAuZ,WAAA,SAAWhC,GACTzX,KAAK+Q,IAAI+F,GAAwBW,IASnCT,EAAA9W,UAAAwZ,WAAA,SAAWtC,GACTvS,EAA0B,iBAAZuS,EAAsB,IACpCpX,KAAK+Q,IAAI+F,GAAuBM,IASlCJ,EAAA9W,UAAAyZ,WAAA,SAAWtC,GACTrX,KAAK+Q,IAAI+F,GAAuBO,IAUlCL,EAAA9W,UAAA0Z,UAAA,SAAUC,GACR7Z,KAAK+Q,IAAI+F,GAAuB+C,IAMlC7C,EAAA9W,UAAAE,gBAAA,WACMJ,KAAK6X,SACP7X,KAAK6X,OAAOO,MAAQ,KACpBpY,KAAK6X,OAAS,MAEhBzT,EAAAlE,UAAME,gBAAesE,KAAA1E,OAEzBgX,EA5UA,CAAwB8C,GAAA7U,SCxDxB8U,GAMa,YANbA,GAac,aAbdA,GAsBc,aAtBdA,GA+Be,cA/BfA,GAwCkB,iBCvClBC,GACa,YADbA,GAGS,keCuZH,SAAUC,GAAOC,EAAYC,GACjC,IAAKD,EAAW7C,QACd,OAAO,EAET,IAAM3M,EAAayP,EAAUzP,WAC7B,GACEA,EAAawP,EAAW1C,eACxB9M,GAAcwP,EAAW3C,cAEzB,OAAO,EAET,IAAM6C,EAAOD,EAAUC,KACvB,OAAOA,EAAOF,EAAWzC,SAAW2C,GAAQF,EAAWxC,YAGzD2C,GA/UA,SAAAjW,GAIE,SAAAkW,EAAY3W,GAAZ,IAAAY,EAAAvE,KACQua,EAAc5I,GAAO,GAAIhO,UACxB4W,EAAY9T,QAEnBlC,EAAAH,EAAAM,KAAA1E,KAAMua,IAANva,MAKK2U,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAMLxQ,EAAKiW,kBAAoB,KAMzBjW,EAAKkW,cAAgB,KAMrBlW,EAAKmW,iBAAmB,KAMxBnW,EAAKoW,UAAY,KAMjBpW,EAAKqW,UAAW,EAGZjX,EAAQkX,SACVtW,EAAKsW,OAASlX,EAAQkX,QAGpBlX,EAAQkM,KACVtL,EAAKuW,OAAOnX,EAAQkM,KAGtBtL,EAAKiS,kBACHM,GACAvS,EAAKwW,6BAGP,IAAMtU,EAAS9C,EAAQ8C,OACQ9C,EAAQ8C,OACnC,YACJlC,EAAKyW,UAAUvU,KA+OnB,OAvToBwU,GAAAX,EAAAlW,GA+ElBkW,EAAApa,UAAA4Y,eAAA,SAAeC,GACb,IAAMmC,EAAQnC,GAAwB,GAEtC,OADAmC,EAAM/O,KAAKnM,MACJkb,GAOTZ,EAAApa,UAAA8Y,oBAAA,SAAoBC,GAClB,IAAMkC,EAASlC,GAA0B,GAEzC,OADAkC,EAAOhP,KAAKnM,KAAKiY,iBACVkD,GASTb,EAAApa,UAAAkb,UAAA,WACE,OAAkCpb,KAAK8D,IAAIgT,KAA0B,MAMvEwD,EAAApa,UAAAmb,gBAAA,WACE,OAAOrb,KAAKob,aAMdd,EAAApa,UAAAgZ,eAAA,WACE,IAAMzS,EAASzG,KAAKob,YACpB,OAAQ3U,EAAiCA,EAAO6U,WAA/BtB,IAMnBM,EAAApa,UAAAqb,oBAAA,WACEvb,KAAKmV,WAMPmF,EAAApa,UAAA6a,4BAAA,WACM/a,KAAK0a,mBACPlG,GAAcxU,KAAK0a,kBACnB1a,KAAK0a,iBAAmB,MAE1B,IAAMjU,EAASzG,KAAKob,YAChB3U,IACFzG,KAAK0a,iBAAmBzG,GACtBxN,EACAuN,GACAhU,KAAKub,oBACLvb,OAGJA,KAAKmV,WAQPmF,EAAApa,UAAAsb,YAAA,SAAYC,GACV,OAAKzb,KAAK2a,UAGH3a,KAAK2a,UAAUa,YAAYC,GAFzB,IAAIC,SAAQ,SAACC,GAAY,OAAAA,EAAQ,QAS5CrB,EAAApa,UAAA0b,QAAA,SAAQH,GACN,OAAKzb,KAAK2a,WAAc3a,KAAK4a,SAGtB5a,KAAK2a,UAAUiB,QAAQH,GAFrB,MAaXnB,EAAApa,UAAA2a,OAAA,SAAOgB,EAAYhb,GACjB,IAAMib,EAAgB9b,KAAK+b,cAE3B,GAAID,EAAcE,aAAaH,GAE7B,OADA7b,KAAK4a,UAAW,EACTkB,EAAcG,YAAYJ,EAAYhb,IAOjDyZ,EAAApa,UAAAgc,SAAA,WACElc,KAAK4a,UAAW,GAOlBN,EAAApa,UAAAic,eAAA,SAAetM,GACRA,GACH7P,KAAKkc,WAEPlc,KAAK+Q,IAAI+F,GAAmBjH,IAO9ByK,EAAApa,UAAAkc,eAAA,WACE,OAAOpc,KAAK8D,IAAIgT,KAelBwD,EAAApa,UAAA4a,OAAA,SAAOjL,GACD7P,KAAKwa,oBACPhG,GAAcxU,KAAKwa,mBACnBxa,KAAKwa,kBAAoB,MAEtB3K,GACH7P,KAAKmV,UAEHnV,KAAKya,gBACPjG,GAAcxU,KAAKya,eACnBza,KAAKya,cAAgB,MAEnB5K,IACF7P,KAAKwa,kBAAoBvG,GACvBpE,EACAkK,IACA,SAAU1G,GACR,IAEMgJ,EADiDhJ,EAClBwI,WAAWQ,iBAC1CnC,EAAala,KAAKiY,eAAc,GAEtCpT,GACGwX,EAAiBC,MAAK,SAAUC,GAC/B,OAAOA,EAAgBnE,QAAU8B,EAAW9B,SAE9C,IAEFiE,EAAiBlQ,KAAK+N,KAExBla,MAEFA,KAAKya,cAAgBxG,GAAOjU,KAAMgU,GAAkBnE,EAAIgL,OAAQhL,GAChE7P,KAAKmV,YAUTmF,EAAApa,UAAA8a,UAAA,SAAUvU,GACRzG,KAAK+Q,IAAI+F,GAAsBrQ,IAOjC6T,EAAApa,UAAA6b,YAAA,WAIE,OAHK/b,KAAK2a,YACR3a,KAAK2a,UAAY3a,KAAKwc,kBAEjBxc,KAAK2a,WAMdL,EAAApa,UAAAuc,YAAA,WACE,QAASzc,KAAK2a,WAQhBL,EAAApa,UAAAsc,eAAA,WACE,OAAO,MAMTlC,EAAApa,UAAAE,gBAAA,WACMJ,KAAK2a,YACP3a,KAAK2a,UAAUxa,iBACRH,KAAK2a,WAGd3a,KAAKgb,UAAU,MACf5W,EAAAlE,UAAME,gBAAesE,KAAA1E,OAEzBsa,EAvTA,CAAoBoC,GAAAzX,SCxFd,SAAU0X,GAAUC,EAAQ3Q,EAAO4Q,GACvC,IAAMC,OACc7M,IAAlB4M,EAA8BD,EAAOG,QAAQF,GAAiB,GAAKD,EACjEI,EAAUF,EAAanc,QAAQ,KAEnC,OADAqc,GAAsB,IAAZA,EAAiBF,EAAa9b,OAASgc,GAChC/Q,EACb6Q,EACA,IAAIrb,MAAM,EAAIwK,EAAQ+Q,GAASlW,KAAK,KAAOgW,ECgO3C,SAAUG,GAAOC,EAAaC,GAElC,IADA,IAAIF,GAAS,EACJhc,EAAIic,EAAYlc,OAAS,EAAGC,GAAK,IAAKA,EAC7C,GAAIic,EAAYjc,IAAMkc,EAAYlc,GAAI,CACpCgc,GAAS,EACT,MAGJ,OAAOA,EAqBH,SAAUG,GAAO1X,EAAYQ,GACjC,IAAMmX,EAAW/W,KAAKC,IAAIL,GACpBoX,EAAWhX,KAAKD,IAAIH,GACpBP,EAAID,EAAW,GAAK2X,EAAW3X,EAAW,GAAK4X,EAC/C1X,EAAIF,EAAW,GAAK2X,EAAW3X,EAAW,GAAK4X,EAGrD,OAFA5X,EAAW,GAAKC,EAChBD,EAAW,GAAKE,EACTF,EAsIH,SAAU6X,GAAM7X,EAAY8X,GAChC,GAAIA,EAAWC,WAAY,CACzB,IAAMC,EAAavT,GAASqT,EAAW/E,aACjCkF,EAAaC,GAAclY,EAAY8X,EAAYE,GACrDC,IACFjY,EAAW,IAAMiY,EAAaD,GAGlC,OAAOhY,EAQH,SAAUkY,GAAclY,EAAY8X,EAAYK,GACpD,IAAMC,EAAmBN,EAAW/E,YAChCkF,EAAa,EACjB,GACEH,EAAWC,aACV/X,EAAW,GAAKoY,EAAiB,IAAMpY,EAAW,GAAKoY,EAAiB,IACzE,CACA,IAAMC,EACJF,GAAyB1T,GAAS2T,GACpCH,EAAarX,KAAK4H,OACfxI,EAAW,GAAKoY,EAAiB,IAAMC,GAG5C,OAAOJ,geC/ZTK,GAAA,SAAA5Z,GAIE,SAAA6Z,EAAYpO,GAAZ,IAAAtL,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAK2Z,KAAOrO,IAsNhB,OAjO0BsO,GAAAF,EAAA7Z,GAmBxB6Z,EAAA/d,UAAAke,oBAAA,SAAoB/M,EAAMwK,GACxB3Z,KAOF+b,EAAA/d,UAAAme,oBAAA,SAAoBxC,GAClB,IAAM1B,EAAY0B,EAAW1B,UACvBmE,EAA6BzC,EAAWyC,2BACxCC,EAA6B1C,EAAW0C,2BAE9C1Y,EACEyY,EACAzC,EAAWjR,KAAK,GAAK,EACrBiR,EAAWjR,KAAK,GAAK,EACrB,EAAIuP,EAAUzP,YACd,EAAKyP,EAAUzP,YACdyP,EAAUxP,UACVwP,EAAU1P,OAAO,IACjB0P,EAAU1P,OAAO,IAGpBjE,EAAY+X,EAA4BD,IAkB1CL,EAAA/d,UAAAse,2BAAA,SACE9Y,EACAmW,EACA4C,EACAC,EACAhV,EACAiV,EACAC,EACAC,GAEA,IAAIC,EACE3E,EAAY0B,EAAW1B,UAS7B,SAASqE,EAA2BnG,EAAS0G,EAAS3G,EAAO4G,GAC3D,OAAOtV,EAAShF,KAAKia,EAASI,EAAS1G,EAAUD,EAAQ,KAAM4G,GAGjE,IAAMxB,EAAarD,EAAUqD,WAEvByB,EAAuB1B,GAAM7X,EAAWqC,QAASyV,GACjD0B,EAAU,CAAC,CAAC,EAAG,IACrB,GAAI1B,EAAWC,YAAciB,EAAc,CACzC,IACMhB,EAAavT,GADMqT,EAAW/E,aAEpCyG,EAAQ/S,KAAK,EAAEuR,EAAY,GAAI,CAACA,EAAY,IAQ9C,IALA,IAAMyB,EAActD,EAAWQ,iBACzB+C,EAAYD,EAAYne,OAExBqe,EAA6C,GAC7CC,EAAW,GACRC,EAAI,EAAGA,EAAIL,EAAQle,OAAQue,IAClC,IAAK,IAAIC,EAAIJ,EAAY,EAAGI,GAAK,IAAKA,EAAG,CACvC,IAAMtF,EAAaiF,EAAYK,GACzBC,EAAQvF,EAAW9B,MACzB,GACEqH,EAAMhD,eACNiD,GAAAC,OAAOzF,EAAYC,IACnByE,EAAYla,KAAKma,EAAUY,GAC3B,CACA,IAAM3D,EAAgB2D,EAAM1D,cACtBtV,EAASgZ,EAAMrE,YACrB,GAAIU,GAAiBrV,EAAQ,CAC3B,IAAMa,EAAcb,EAAOmZ,WACvBX,EACAvZ,EACEma,EAAWrB,EAA2BpK,KAC1C,KACA8F,EAAW7B,SAEbiH,EAAS,GAAKhY,EAAY,GAAK4X,EAAQK,GAAG,GAC1CD,EAAS,GAAKhY,EAAY,GAAK4X,EAAQK,GAAG,GAC1CT,EAAShD,EAAc0C,2BACrBc,EACAzD,EACA4C,EACAoB,EACAR,GAGJ,GAAIP,EACF,OAAOA,GAKf,GAAuB,IAAnBO,EAAQre,OAAZ,CAGA,IAAM8e,EAAQ,EAAIT,EAAQre,OAM1B,OALAqe,EAAQU,SAAQ,SAACC,EAAG/e,GAAM,OAAC+e,EAAEC,YAAchf,EAAI6e,KAC/CT,EAAQa,MAAK,SAAC5f,EAAGC,GAAM,OAAAD,EAAE2f,WAAa1f,EAAE0f,cACxCZ,EAAQ/C,MAAK,SAAC0D,GACZ,OAAQlB,EAASkB,EAAEtW,SAASsW,EAAEjB,QAASiB,EAAE5H,MAAO4H,EAAEhB,aAE7CF,IAiBTb,EAAA/d,UAAAigB,oBAAA,SAAoB1E,EAAOI,EAAY4C,EAAc/U,EAAUkV,GAC7D,OAAO1c,KAgBT+b,EAAA/d,UAAAkgB,uBAAA,SACE1a,EACAmW,EACA4C,EACAC,EACAE,EACAD,GAaA,YAAsB1O,IAXHjQ,KAAKwe,2BACtB9Y,EACAmW,EACA4C,EACAC,EACA3c,EACA/B,KACA4e,EACAD,IASJV,EAAA/d,UAAAmgB,OAAA,WACE,OAAOrgB,KAAKke,MAQdD,EAAA/d,UAAA+b,YAAA,SAAYJ,GACV3Z,KAOF+b,EAAA/d,UAAAogB,wBAAA,SAAwBzE,GAClB3K,GAAeV,kBACjBqL,EAAW0E,oBAAoBpU,KAAKqU,KAG1CvC,EAjOA,CAA0Bne,GAuO1B,SAAS0gB,GAAgB3Q,EAAKgM,GAC5B3K,GAAeT,aAGjBgQ,GAAezC,0gBCzNf0C,GArCA,SAAAtc,GAQE,SAAAuc,EAAYtP,EAAMuP,EAA2BC,EAAgBC,GAA7D,IAAAvc,EACEH,EAAAM,KAAA1E,KAAMqR,IAAKrR,YAQXuE,EAAKwc,sBAAwBH,EAO7Brc,EAAKsX,WAAagF,EASlBtc,EAAKyc,QAAUF,IAEnB,OAnC0BG,GAAAN,EAAAvc,GAmC1Buc,EAnCA,CAA0BxP,IC8DpB+P,GAAY,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,mCACAra,KAAK,IACP,KAEIsa,GAAsB,CAC1B,QACA,UACA,SACA,OACA,aACA,UASWC,GAAoB,SAAUC,GACzC,IAAMxe,EAAQwe,EAASxe,MAAMoe,IAC7B,IAAKpe,EACH,OAAO,KAST,IAPA,IAAMoE,EAAuC,CAC3Cqa,WAAY,SACZ3W,KAAM,QACN1D,MAAO,SACPsa,OAAQ,SACRC,QAAS,UAEFxgB,EAAI,EAAGwG,EAAK2Z,GAAoBpgB,OAAQC,EAAIwG,IAAMxG,EAAG,CAC5D,IAAM2G,EAAQ9E,EAAM7B,EAAI,QACVgP,IAAVrI,IACFV,EAAMka,GAAoBngB,IAAM2G,GAIpC,OADAV,EAAMwa,SAAWxa,EAAMya,OAAOld,MAAK,QAC5ByC,GAOH,SAAU0a,GAAWxK,GACzB,OAAmB,IAAZA,EAAgB,GAAK7U,OAAO+D,KAAK0H,MAAgB,IAAVoJ,GAAiB,KC3G3D,SAAUyK,GACdC,EACAC,EACAC,EACAC,GAGA,IAAIC,EAeJ,OAbEA,EADEF,GAAkBA,EAAehhB,OAC1BghB,EAAeG,QACfjf,EACA,IAAIE,gBAAgB0e,GAAa,IAAKC,GAAc,KAEpD/a,SAASC,cAAc,UAE9B6a,IACFI,EAAOjW,MAAQ6V,GAEbC,IACFG,EAAOhW,OAAS6V,GAIhBG,EAAOE,WAAW,KAAMH,GAsCtB,SAAUI,GAAYC,EAASC,GACnC,IAAMC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,GAQ3B,SAAUI,GAAW5b,GACzB,OAAOA,GAAQA,EAAK0b,WAAa1b,EAAK0b,WAAWzT,YAAYjI,GAAQ,KCFhE,IAkBM6b,GAAkB,GA0ClBC,GAAiB,CAAC,EAAG,EAAG,EAAG,GAW3BC,GAAe,IAAIhJ,GAAA7U,SAUN,IAAIuQ,GAAAvQ,SACnB+L,QAAU,WACnB+R,QAAQC,KAAK,8BAMf,IAKIC,GA8GEC,GAnHFC,GAAiB,KAURC,GAAc,GAMdC,GAAgB,WAC3B,IAKIC,EAAUC,EAJR3Y,EAAO,QACP4Y,EAAiB,CAAC,YAAa,SAC/BnO,EAAMmO,EAAexiB,OACrByiB,EAAO,2BASb,SAASC,EAAYC,EAAWC,EAAYC,GAE1C,IADA,IAAIC,GAAY,EACP7iB,EAAI,EAAGA,EAAIoU,IAAOpU,EAAG,CAC5B,IAAM8iB,EAAgBP,EAAeviB,GAKrC,GAJAsiB,EAAiBS,GACfL,EAAY,IAAMC,EAAa,IAAMhZ,EAAOmZ,EAC5CN,GAEEI,GAAcE,EAAe,CAC/B,IAAM9X,EAAQ+X,GACZL,EACE,IACAC,EACA,IACAhZ,EACAiZ,EACA,IACAE,EACFN,GAIFK,EAAYA,GAAa7X,GAASsX,GAGtC,QAAIO,EAMN,SAASG,IAGP,IAFA,IAAIC,GAAO,EACLC,EAAQrB,GAAa5M,UAClBjV,EAAI,EAAGwG,EAAK0c,EAAMnjB,OAAQC,EAAIwG,IAAMxG,EAAG,CAC9C,IAAMmjB,EAAOD,EAAMljB,GACf6hB,GAAahf,IAAIsgB,GAjDT,MAkDNV,EAAYnX,MAAMvM,KAAMokB,EAAK3f,MAAM,QACrCwN,GAAMmR,IAEND,GAAiB,KACjBF,QAAchT,EACd6S,GAAa/R,IAAIqT,EAvDT,OAyDRtB,GAAa/R,IAAIqT,EAAMtB,GAAahf,IAAIsgB,GAAQ,GAAG,GACnDF,GAAO,IAITA,IACFG,cAAcf,GACdA,OAAWrT,GAIf,OAAO,SAAUqR,GACf,IAAM8C,EAAO/C,GAAkBC,GAC/B,GAAK8C,EAIL,IADA,IAAM1C,EAAW0C,EAAK1C,SACbzgB,EAAI,EAAGwG,EAAKia,EAAS1gB,OAAQC,EAAIwG,IAAMxG,EAAG,CACjD,IAAM0gB,EAASD,EAASzgB,GAClBqO,EAAM8U,EAAKld,MAAQ,KAAOkd,EAAK5C,OAAS,KAAOG,OACvB1R,IAA1B6S,GAAahf,IAAIwL,KACnBwT,GAAa/R,IAAIzB,EA9EP,KA8EqB,GAC1BoU,EAAYU,EAAKld,MAAOkd,EAAK5C,OAAQG,KACxCmB,GAAa/R,IAAIzB,EAAK,GAAG,QACRW,IAAbqT,IACFA,EAAWgB,YAAYL,EAAO,SAnFb,GA+FhBM,GAKJ,SAAUjD,GACf,IAAIpV,EAASkX,GAAY9B,GACzB,GAAcrR,MAAV/D,EAAqB,CACvB,GAAIhJ,EAAyB,CAC3B,IAAMkhB,EAAO/C,GAAkBC,GACzBkD,EAAUC,GAAYnD,EAAU,MAItCpV,GAHmBwY,MAAM5U,OAAOsU,EAAK7C,aACjC,IACAzR,OAAOsU,EAAK7C,cAGbiD,EAAQG,wBAA0BH,EAAQI,+BAExC1B,MACHA,GAAiBlc,SAASC,cAAc,QACzB4d,UAAY,IAC3B3B,GAAehc,MAAM4d,UAAY,IACjC5B,GAAehc,MAAM6d,UAAY,OACjC7B,GAAehc,MAAMgF,OAAS,OAC9BgX,GAAehc,MAAM8d,QAAU,IAC/B9B,GAAehc,MAAM+d,OAAS,OAC9B/B,GAAehc,MAAMge,SAAW,WAChChC,GAAehc,MAAMie,QAAU,QAC/BjC,GAAehc,MAAMke,KAAO,YAE9BlC,GAAehc,MAAMkd,KAAO9C,EAC5Bta,SAAS4H,KAAKC,YAAYqU,IAC1BhX,EAASgX,GAAemC,aACxBre,SAAS4H,KAAKI,YAAYkU,IAE5BE,GAAY9B,GAAYpV,EAE1B,OAAOA,GASX,SAASuY,GAAYL,EAAMX,GAQzB,OAPKN,KACHA,GAAiBtB,GAAsB,EAAG,IAExCuC,GAAQnB,KACVE,GAAeiB,KAAOA,EACtBnB,GAAcE,GAAeiB,MAExBjB,GAAemC,YAAY7B,GAQ9B,SAAUO,GAAiBI,EAAMX,GACrC,OAAOgB,GAAYL,EAAMX,GAAMxX,MAU3B,SAAUsZ,GAAyBnB,EAAMX,EAAMxU,GACnD,GAAIwU,KAAQxU,EACV,OAAOA,EAAMwU,GAEf,IAAMxX,EAAQ+X,GAAiBI,EAAMX,GAErC,OADAxU,EAAMwU,GAAQxX,EACPA,EA+DH,SAAUuZ,GACdxE,EACA5b,EACAgS,EACAqO,EACAC,EACAC,EACAC,EACAC,EACAlgB,EACAC,EACAkgB,GAEA9E,EAAQ+E,OAEQ,IAAZ3O,IACF4J,EAAQgF,aAAe5O,GAErBhS,GACF4b,EAAQiF,aAAa1Z,MAAMyU,EAAS5b,GAGhBqgB,EAAcS,qBAElClF,EAAQmF,UAAUxgB,EAAGC,GACrBob,EAAQ8E,MAAMA,EAAM,GAAIA,EAAM,IA2ClC,SAAkCM,EAAOpF,GAEvC,IADA,IAAMkF,EAAsBE,EAAMF,oBACzBjlB,EAAI,EAAGwG,EAAKye,EAAoBllB,OAAQC,EAAIwG,EAAIxG,GAAK,EACxDQ,MAAMC,QAAQwkB,EAAoBjlB,EAAI,IACxC+f,EAAQkF,EAAoBjlB,IAAIsL,MAC9ByU,EACAkF,EAAoBjlB,EAAI,IAG1B+f,EAAQkF,EAAoBjlB,IAAMilB,EAAoBjlB,EAAI,GAnD5DolB,CAA+CZ,EAAezE,IACrD8E,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpC9E,EAAQmF,UAAUxgB,EAAGC,GACrBob,EAAQ8E,MAAMA,EAAM,GAAIA,EAAM,IAC9B9E,EAAQsF,UAEJb,EAEFC,EACAC,EACAC,EACAC,EACA,EACA,EACAD,EACAC,IAIF7E,EAAQsF,UAEJb,EAEFC,EACAC,EACAC,EACAC,EACAlgB,EACAC,EACAggB,EAAIE,EAAM,GACVD,EAAIC,EAAM,IAId9E,EAAQuF,weClSVC,GApLA,SAAApiB,GAIE,SAAAqiB,EAAY5W,GAAZ,IAAAtL,EACEH,EAAAM,KAAA1E,KAAM6P,IAAI7P,KAKVuE,EAAKmiB,uBAAyBzS,GAC5B6O,GACApR,GACA7B,EAAI8W,WAAWvS,KAAKvE,IAOtBtL,EAAKqiB,SAAW5f,SAASC,cAAc,OACvC,IAAMC,EAAQ3C,EAAKqiB,SAAS1f,MAC5BA,EAAMge,SAAW,WACjBhe,EAAM+E,MAAQ,OACd/E,EAAMgF,OAAS,OACfhF,EAAMoQ,OAAS,IAEf/S,EAAKqiB,SAAShP,UAAYiP,4BAE1B,IAAMC,EAAYjX,EAAIkX,qBACtBD,EAAUE,aAAaziB,EAAKqiB,SAAUE,EAAUG,YAAc,MAM9D1iB,EAAK2iB,UAAY,GAMjB3iB,EAAK4iB,kBAAmB,IAwI5B,OAlLmCC,GAAAX,EAAAriB,GAiDjCqiB,EAAAvmB,UAAAke,oBAAA,SAAoB/M,EAAMwK,GACxB,IAAMhM,EAAM7P,KAAKqgB,SACjB,GAAIxQ,EAAIc,YAAYU,GAAO,CACzB,IAAMgW,EAAQ,IAAIC,GAAAriB,QAAYoM,OAAMpB,EAAW4L,GAC/ChM,EAAIqD,cAAcmU,KAItBZ,EAAAvmB,UAAAE,gBAAA,WACEoU,GAAcxU,KAAK0mB,wBACnB1mB,KAAK4mB,SAASnE,WAAWzT,YAAYhP,KAAK4mB,UAC1CxiB,EAAAlE,UAAME,gBAAesE,KAAA1E,OAOvBymB,EAAAvmB,UAAA+b,YAAA,SAAYJ,GACV,GAAKA,EAAL,CAQA7b,KAAKqe,oBAAoBxC,GACzB7b,KAAKoe,oBAAoBrE,GAA4B8B,GAErD,IAAMQ,EAAmBR,EAAWQ,iBAAiB6D,MAAK,SAAU5f,EAAGC,GACrE,OAAOD,EAAEgX,OAAS/W,EAAE+W,UAEhB6C,EAAY0B,EAAW1B,UAE7Bna,KAAKknB,UAAUlmB,OAAS,EAMxB,IAFA,IAAMumB,EAAkB,GACpBC,EAAkB,KACbvmB,EAAI,EAAGwG,EAAK4U,EAAiBrb,OAAQC,EAAIwG,IAAMxG,EAAG,CACzD,IAAMiZ,EAAamC,EAAiBpb,GACpC4a,EAAW4L,WAAaxmB,EAExB,IAAMmX,EAAQ8B,EAAW9B,MACnBsP,EAActP,EAAMc,iBAC1B,IACGwG,GAAAC,OAAOzF,EAAYC,IACnBuN,GAAe1N,IACd0N,GAAe1N,GAEjB5B,EAAM8D,eALR,CASA,IAAMyL,EAAUvP,EAAMyC,OAAOgB,EAAY2L,GACpCG,IAGDA,IAAYH,IACdxnB,KAAKknB,UAAU/a,KAAKwb,GACpBH,EAAkBG,GAEhB,iBAAkBvP,GACpBmP,EAAgBpb,KAC2CiM,KAI/D,IAASnX,EAAIsmB,EAAgBvmB,OAAS,EAAGC,GAAK,IAAKA,EACjDsmB,EAAgBtmB,GAAG2mB,gBAAgB/L,IF/BnC,SAA0B9U,EAAM8gB,GAGpC,IAFA,IAAMC,EAAc/gB,EAAKghB,WAEhB9mB,EAAI,KAAWA,EAAG,CACzB,IAAM+mB,EAAWF,EAAY7mB,GACvBgnB,EAAWJ,EAAS5mB,GAG1B,IAAK+mB,IAAaC,EAChB,MAIED,IAAaC,IAKZD,EAMAC,EAOLlhB,EAAKigB,aAAaiB,EAAUD,IAN1BjhB,EAAKiI,YAAYgZ,KACf/mB,GAPF8F,EAAK8H,YAAYoZ,KEenBC,CAAgBloB,KAAK4mB,SAAU5mB,KAAKknB,WAEpClnB,KAAKoe,oBAAoBrE,GAA6B8B,GAEjD7b,KAAKmnB,mBACRnnB,KAAK4mB,SAAS1f,MAAMie,QAAU,GAC9BnlB,KAAKmnB,kBAAmB,GAG1BnnB,KAAKsgB,wBAAwBzE,QA/DvB7b,KAAKmnB,mBACPnnB,KAAK4mB,SAAS1f,MAAMie,QAAU,OAC9BnlB,KAAKmnB,kBAAmB,IA6E9BV,EAAAvmB,UAAAigB,oBAAA,SAAoB1E,EAAOI,EAAY4C,EAAc/U,EAAUkV,GAM7D,IALA,IAAMzE,EAAY0B,EAAW1B,UAEvBgF,EAActD,EAAWQ,iBAGtBpb,EAFSke,EAAYne,OAEL,EAAGC,GAAK,IAAKA,EAAG,CACvC,IAAMiZ,EAAaiF,EAAYle,GACzBmX,EAAQ8B,EAAW9B,MACzB,GACEA,EAAMqE,eACNiD,GAAAC,OAAOzF,EAAYC,IACnByE,EAAYxG,GACZ,CACA,IACM7W,EADgB6W,EAAM2D,cACDoM,eACzB1M,EACAI,EACA4C,GAEF,GAAIld,EAAM,CACR,IAAMud,EAASpV,EAAS0O,EAAO7W,GAC/B,GAAIud,EACF,OAAOA,MAOnB2H,EAlLA,CAAmC2B,EAAAnjB,0ICZnC,IAAAojB,GAMO,MANPA,GAYU,meCPJC,GACI,SAQVC,GAAA,SAAAnkB,GAME,SAAAmkB,EAAYlX,EAAMmX,EAAaC,GAA/B,IAAAlkB,EACEH,EAAAM,KAAA1E,KAAMqR,IAAKrR,YAOXuE,EAAKojB,QAAUa,EAOfjkB,EAAKuP,MAAQ2U,IAEjB,OAvBqCC,GAAAH,EAAAnkB,GAuBrCmkB,EAvBA,CAAqCpX,IAqSrCwX,GAhPA,SAAAvkB,GAKE,SAAAwkB,EAAY7P,EAAW8P,GAAvB,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,KAKPuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAEL,IAAMpR,EAAUklB,GAAe,GAc/B,GARAtkB,EAAKukB,UAAYnlB,EAAQolB,OAMzBxkB,EAAKykB,OAASjQ,GAAwB,GAElCxU,EAAKukB,QACP,IAAK,IAAI7nB,EAAI,EAAGwG,EAAKlD,EAAKykB,OAAOhoB,OAAQC,EAAIwG,IAAMxG,EACjDsD,EAAK0kB,cAAc1kB,EAAKykB,OAAO/nB,GAAIA,UAIvCsD,EAAK2kB,kBAmMT,OA9OyBR,GAAAE,EAAAxkB,GAkDvBwkB,EAAA1oB,UAAAqQ,MAAA,WACE,KAAOvQ,KAAKmpB,YAAc,GACxBnpB,KAAKopB,OAWTR,EAAA1oB,UAAAmpB,OAAA,SAAO5oB,GACL,IAAK,IAAIQ,EAAI,EAAGwG,EAAKhH,EAAIO,OAAQC,EAAIwG,IAAMxG,EACzCjB,KAAKmM,KAAK1L,EAAIQ,IAEhB,OAAOjB,MAUT4oB,EAAA1oB,UAAA6f,QAAA,SAAQva,GAEN,IADA,IAAM0V,EAAQlb,KAAKgpB,OACV/nB,EAAI,EAAGwG,EAAKyT,EAAMla,OAAQC,EAAIwG,IAAMxG,EAC3CuE,EAAE0V,EAAMja,GAAIA,EAAGia,IAYnB0N,EAAA1oB,UAAAopB,SAAA,WACE,OAAOtpB,KAAKgpB,QASdJ,EAAA1oB,UAAAqpB,KAAA,SAAKzV,GACH,OAAO9T,KAAKgpB,OAAOlV,IASrB8U,EAAA1oB,UAAAipB,UAAA,WACE,OAAOnpB,KAAK8D,IAAIwkB,KASlBM,EAAA1oB,UAAAspB,SAAA,SAAS1V,EAAO2V,GACVzpB,KAAK8oB,SACP9oB,KAAKipB,cAAcQ,GAErBzpB,KAAKgpB,OAAOjV,OAAOD,EAAO,EAAG2V,GAC7BzpB,KAAKkpB,gBACLlpB,KAAKkT,cACH,IAAIqV,GAAgBF,GAAyBoB,EAAM3V,KAUvD8U,EAAA1oB,UAAAkpB,IAAA,WACE,OAAOppB,KAAK0pB,SAAS1pB,KAAKmpB,YAAc,IAS1CP,EAAA1oB,UAAAiM,KAAA,SAAKsd,GACCzpB,KAAK8oB,SACP9oB,KAAKipB,cAAcQ,GAErB,IAAM1oB,EAAIf,KAAKmpB,YAEf,OADAnpB,KAAKwpB,SAASzoB,EAAG0oB,GACVzpB,KAAKmpB,aASdP,EAAA1oB,UAAAypB,OAAA,SAAOF,GAEL,IADA,IAAMhpB,EAAMT,KAAKgpB,OACR/nB,EAAI,EAAGwG,EAAKhH,EAAIO,OAAQC,EAAIwG,IAAMxG,EACzC,GAAIR,EAAIQ,KAAOwoB,EACb,OAAOzpB,KAAK0pB,SAASzoB,IAa3B2nB,EAAA1oB,UAAAwpB,SAAA,SAAS5V,GACP,IAAM8V,EAAO5pB,KAAKgpB,OAAOlV,GAMzB,OALA9T,KAAKgpB,OAAOjV,OAAOD,EAAO,GAC1B9T,KAAKkpB,gBACLlpB,KAAKkT,cACH,IAAIqV,GAAgBF,GAA4BuB,EAAM9V,IAEjD8V,GASThB,EAAA1oB,UAAA2pB,MAAA,SAAM/V,EAAO2V,GACX,IAAM1oB,EAAIf,KAAKmpB,YACf,GAAIrV,EAAQ/S,EAAG,CACTf,KAAK8oB,SACP9oB,KAAKipB,cAAcQ,EAAM3V,GAE3B,IAAM8V,EAAO5pB,KAAKgpB,OAAOlV,GACzB9T,KAAKgpB,OAAOlV,GAAS2V,EACrBzpB,KAAKkT,cACH,IAAIqV,GAAgBF,GAA4BuB,EAAM9V,IAExD9T,KAAKkT,cACH,IAAIqV,GAAgBF,GAAyBoB,EAAM3V,QAEhD,CACL,IAAK,IAAI0L,EAAIze,EAAGye,EAAI1L,IAAS0L,EAC3Bxf,KAAKwpB,SAAShK,OAAGvP,GAEnBjQ,KAAKwpB,SAAS1V,EAAO2V,KAOzBb,EAAA1oB,UAAAgpB,cAAA,WACElpB,KAAK+Q,IAAIuX,GAAiBtoB,KAAKgpB,OAAOhoB,SAQxC4nB,EAAA1oB,UAAA+oB,cAAA,SAAcQ,EAAMK,GAClB,IAAK,IAAI7oB,EAAI,EAAGwG,EAAKzH,KAAKgpB,OAAOhoB,OAAQC,EAAIwG,IAAMxG,EACjD,GAAIjB,KAAKgpB,OAAO/nB,KAAOwoB,GAAQxoB,IAAM6oB,EACnC,MAAM,IAAI9kB,EAAAC,QAAe,KAIjC2jB,EA9OA,CAAyB9O,GAAA7U,sjBChDzB8kB,GAAA,SAAA3lB,GAKE,SAAA2lB,EAAY1Y,EAAM+G,GAAlB,IAAA7T,EACEH,EAAAM,KAAA1E,KAAMqR,IAAKrR,YAOXuE,EAAK6T,MAAQA,IAEjB,OAfgC4R,GAAAD,EAAA3lB,GAehC2lB,EAfA,CAAgC5Y,IAmD1B8Y,GACI,SAkRVC,GAvQA,SAAA9lB,GAIE,SAAA+lB,EAAYtB,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAAe,GACzBtO,EAAsC5I,GAAO,GAAIhO,UAChD4W,EAAY6P,OAEnB,IAAIA,EAASzmB,EAAQymB,cAErB7lB,EAAAH,EAAAM,KAAA1E,KAAMua,IAANva,MAKK2U,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAMLxQ,EAAK8lB,oBAAsB,GAM3B9lB,EAAK+lB,cAAgB,GAErB/lB,EAAKiS,kBAAkByT,GAAiB1lB,EAAKgmB,sBAEzCH,EACE3oB,MAAMC,QAAQ0oB,GAChBA,EAAS,IAAII,GAAAvlB,QAAWmlB,EAAOriB,QAAS,CAACghB,QAAQ,IAEjDlkB,EAAuD,mBAAtBulB,EAAQd,SAA0B,IAGrEc,EAAS,IAAII,GAAAvlB,aAAWgL,EAAW,CAAC8Y,QAAQ,IAG9CxkB,EAAKkmB,UAAUL,KAiNnB,OArQyBJ,GAAAG,EAAA/lB,GA0DvB+lB,EAAAjqB,UAAAwqB,mBAAA,WACE1qB,KAAKmV,WAMPgV,EAAAjqB,UAAAqqB,qBAAA,WACEvqB,KAAKqqB,oBAAoBtK,QAAQvL,IACjCxU,KAAKqqB,oBAAoBrpB,OAAS,EAElC,IAAMopB,EAASpqB,KAAK2qB,YAMpB,IAAK,IAAMC,KALX5qB,KAAKqqB,oBAAoBle,KACvB8H,GAAOmW,EAAQ/B,GAAyBroB,KAAK6qB,iBAAkB7qB,MAC/DiU,GAAOmW,EAAQ/B,GAA4BroB,KAAK8qB,oBAAqB9qB,OAGtDA,KAAKsqB,cACpBtqB,KAAKsqB,cAAcM,GAAI7K,QAAQvL,IAEjCvC,GAAMjS,KAAKsqB,eAGX,IADA,IAAMS,EAAcX,EAAOd,WAClBroB,EAAI,EAAGwG,EAAKsjB,EAAY/pB,OAAQC,EAAIwG,EAAIxG,IAAK,CACpD,IAAMmX,EAAQ2S,EAAY9pB,GAC1BjB,KAAKgrB,wBAAwB5S,GAC7BpY,KAAKkT,cAAc,IAAI6W,GAAW,WAAY3R,IAEhDpY,KAAKmV,WAMPgV,EAAAjqB,UAAA8qB,wBAAA,SAAwB5S,GACtB,IAAM6S,EAAe,CACnBhX,GACEmE,EACA1G,GACA1R,KAAK0qB,mBACL1qB,MAEFiU,GAAOmE,EAAOpE,GAAkBhU,KAAK0qB,mBAAoB1qB,OAGvDoY,aAAiB+R,GACnBc,EAAa9e,KACX8H,GAAOmE,EAAO,WAAYpY,KAAKkrB,qBAAsBlrB,MACrDiU,GAAOmE,EAAO,cAAepY,KAAKmrB,wBAAyBnrB,OAI/DA,KAAKsqB,cAAcjoB,EAAO+V,IAAU6S,GAMtCd,EAAAjqB,UAAAgrB,qBAAA,SAAqB/X,GACnBnT,KAAKkT,cAAc,IAAI6W,GAAW,WAAY5W,EAAMiF,SAMtD+R,EAAAjqB,UAAAirB,wBAAA,SAAwBhY,GACtBnT,KAAKkT,cAAc,IAAI6W,GAAW,cAAe5W,EAAMiF,SAOzD+R,EAAAjqB,UAAA2qB,iBAAA,SAAiBO,GACf,IAAMhT,EACJgT,EAAgBzD,QAElB3nB,KAAKgrB,wBAAwB5S,GAC7BpY,KAAKkT,cAAc,IAAI6W,GAAW,WAAY3R,IAC9CpY,KAAKmV,WAOPgV,EAAAjqB,UAAA4qB,oBAAA,SAAoBM,GAClB,IAAMhT,EACJgT,EAAgBzD,QAEZrY,EAAMjN,EAAO+V,GACnBpY,KAAKsqB,cAAchb,GAAKyQ,QAAQvL,WACzBxU,KAAKsqB,cAAchb,GAC1BtP,KAAKkT,cAAc,IAAI6W,GAAW,cAAe3R,IACjDpY,KAAKmV,WAWPgV,EAAAjqB,UAAAyqB,UAAA,WACE,OACE3qB,KAAK8D,IAAImmB,KAYbE,EAAAjqB,UAAAuqB,UAAA,SAAUL,GACR,IAAMiB,EAAarrB,KAAK2qB,YACxB,GAAIU,EAEF,IADA,IAAMC,EAAgBD,EAAW/B,WACxBroB,EAAI,EAAGwG,EAAK6jB,EAActqB,OAAQC,EAAIwG,IAAMxG,EACnDjB,KAAKkT,cAAc,IAAI6W,GAAW,cAAeuB,EAAcrqB,KAInEjB,KAAK+Q,IAAIkZ,GAAiBG,IAO5BD,EAAAjqB,UAAA4Y,eAAA,SAAeC,GACb,IAAMmC,OAAsBjL,IAAd8I,EAA0BA,EAAY,GAIpD,OAHA/Y,KAAK2qB,YAAY5K,SAAQ,SAAU3H,GACjCA,EAAMU,eAAeoC,MAEhBA,GAYTiP,EAAAjqB,UAAA8Y,oBAAA,SAAoBC,GAClB,IAAMkC,OAAwBlL,IAAfgJ,EAA2BA,EAAa,GACjDsS,EAAMpQ,EAAOna,OAEnBhB,KAAK2qB,YAAY5K,SAAQ,SAAU3H,GACjCA,EAAMY,oBAAoBmC,MAG5B,IAAMqQ,EAAgBxrB,KAAKiY,gBACvBwT,EAAgBD,EAAclU,OAC7B2B,QAAuChJ,IAAzBub,EAAclU,SAC/BmU,EAAgB,GAElB,IAAK,IAAIxqB,EAAIsqB,EAAK9jB,EAAK0T,EAAOna,OAAQC,EAAIwG,EAAIxG,IAAK,CACjD,IAAMiZ,EAAaiB,EAAOla,GAC1BiZ,EAAW9C,SAAWoU,EAAcpU,QACpC8C,EAAW7C,QAAU6C,EAAW7C,SAAWmU,EAAcnU,QACzD6C,EAAW3C,cAAgBjR,KAAKiD,IAC9B2Q,EAAW3C,cACXiU,EAAcjU,eAEhB2C,EAAW1C,cAAgBlR,KAAKkD,IAC9B0Q,EAAW1C,cACXgU,EAAchU,eAEhB0C,EAAWzC,QAAUnR,KAAKkD,IAAI0Q,EAAWzC,QAAS+T,EAAc/T,SAChEyC,EAAWxC,QAAUpR,KAAKiD,IAAI2Q,EAAWxC,QAAS8T,EAAc9T,cACnCzH,IAAzBub,EAAcjkB,cACU0I,IAAtBiK,EAAW3S,OACb2S,EAAW3S,OAASoE,GAClBuO,EAAW3S,OACXikB,EAAcjkB,QAGhB2S,EAAW3S,OAASikB,EAAcjkB,aAGZ0I,IAAtBiK,EAAW5C,SACb4C,EAAW5C,OAASmU,GAIxB,OAAOtQ,GAMTgP,EAAAjqB,UAAAgZ,eAAA,WACE,OAAOc,IAEXmQ,EArQA,CAAyBzN,GAAAzX,6jBCtDzBymB,GAzBA,SAAAtnB,GAME,SAAAunB,EAAYta,EAAMxB,EAAKgR,GAAvB,IAAAtc,EACEH,EAAAM,KAAA1E,KAAMqR,IAAKrR,YAOXuE,EAAKsL,IAAMA,EAOXtL,EAAKsX,gBAAgC5L,IAAnB4Q,EAA+BA,EAAiB,OAEtE,OAvBuB+K,GAAAD,EAAAvnB,GAuBvBunB,EAvBA,CAAuBxa,8dCCvB0a,GAAA,SAAAznB,GAQE,SAAA0nB,EAAYza,EAAMxB,EAAKkc,EAAeC,EAAcnL,GAApD,IAAAtc,EACEH,EAAAM,KAAA1E,KAAMqR,EAAMxB,EAAKgR,IAAe7gB,YAQhCuE,EAAKwnB,cAAgBA,EAMrBxnB,EAAK0nB,OAAS,KAMd1nB,EAAK2nB,YAAc,KASnB3nB,EAAK4nB,cAA4Blc,IAAjB+b,GAA6BA,IAyDjD,OA/F8BI,GAAAN,EAAA1nB,GA8C5BR,OAAAC,eAAIioB,EAAA5rB,UAAA,QAAJ,CAAA4D,IAAA,WAIE,OAHK9D,KAAKisB,SACRjsB,KAAKisB,OAASjsB,KAAK6P,IAAIwc,cAAcrsB,KAAK+rB,gBAErC/rB,KAAKisB,QAEdlb,IAAA,SAAU0K,GACRzb,KAAKisB,OAASxQ,mCAShB7X,OAAAC,eAAIioB,EAAA5rB,UAAA,aAAJ,CAAA4D,IAAA,WAIE,OAHK9D,KAAKksB,cACRlsB,KAAKksB,YAAclsB,KAAK6P,IAAIyc,uBAAuBtsB,KAAKyb,QAEnDzb,KAAKksB,aAEdnb,IAAA,SAAerL,GACb1F,KAAKksB,YAAcxmB,mCAQrBomB,EAAA5rB,UAAAsR,eAAA,WACEpN,EAAAlE,UAAMsR,eAAc9M,KAAA1E,MAChB,mBAAoBA,KAAK+rB,eACH/rB,KAAK+rB,cAAeva,kBAShDsa,EAAA5rB,UAAAuR,gBAAA,WACErN,EAAAlE,UAAMuR,gBAAe/M,KAAA1E,MACjB,oBAAqBA,KAAK+rB,eACJ/rB,KAAK+rB,cAAeta,mBAGlDqa,EA/FA,CAA8BS,GAAAtnB,SAiG9BunB,GAAeX,gDCnGfY,GAAe,CAObC,YAAa,cAObC,MAAO3Y,GAOP4Y,SAAU5Y,GAOV6Y,YAAa,cAQbC,YAAa,cAEbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,iBC7CjBC,GACe,cADfA,GAEe,weC8XfC,GA3XA,SAAAnpB,GAKE,SAAAopB,EAAY3d,EAAK4d,GAAjB,IAAAlpB,EACEH,EAAAM,KAAA1E,KAAM6P,IAAI7P,KAOVuE,EAAK2Z,KAAOrO,EAMZtL,EAAKmpB,gBAMLnpB,EAAKopB,gBAAiB,EAMtBppB,EAAKqpB,WAAY,EAMjBrpB,EAAKspB,kBAAoB,GAMzBtpB,EAAKupB,oBAAmC7d,IAAlBwd,EAA8B,EAAIA,EAQxDlpB,EAAKwpB,MAAQ,KAEb,IAAMpG,EAAUpjB,EAAK2Z,KAAK6I,qBAM1BxiB,EAAKypB,gBAAkB,EAMvBzpB,EAAK0pB,gBAAkB,GAEvB1pB,EAAKqiB,SAAWe,EAMhBpjB,EAAK2pB,wBAA0Bja,GAC7B0T,EACA2F,GACA/oB,EAAK4pB,mBACL5pB,GAOFA,EAAK6pB,0BAML7pB,EAAK8pB,oBAAsBpa,GACzB0T,EACA2F,GACA/oB,EAAK+pB,YACL/pB,GAMFA,EAAKgqB,sBAAwBhqB,EAAKiqB,iBAAiBpa,KAAK7P,GAExDA,EAAKqiB,SAAS5iB,iBACZgQ,GACAzP,EAAKgqB,wBACL9qB,GAA0B,CAACC,SAAS,MAgR1C,OAzXqC+qB,GAAAjB,EAAAppB,GAkHnCopB,EAAAttB,UAAAwuB,cAAA,SAAcC,GACZ,IAAIC,EAAW,IAAIC,GAAA5pB,QACjBwnB,GAAoBE,MACpB3sB,KAAKke,KACLyQ,GAEF3uB,KAAKkT,cAAc0b,QACU3e,IAAzBjQ,KAAK0tB,iBAEPoB,aAAa9uB,KAAK0tB,iBAClB1tB,KAAK0tB,qBAAkBzd,EACvB2e,EAAW,IAAIC,GAAA5pB,QACbwnB,GAAoBG,SACpB5sB,KAAKke,KACLyQ,GAEF3uB,KAAKkT,cAAc0b,IAGnB5uB,KAAK0tB,gBAAkBqB,WAErB,WACE/uB,KAAK0tB,qBAAkBzd,EACvB,IAAM+e,EAAW,IAAIH,GAAA5pB,QACnBwnB,GAAoBC,YACpB1sB,KAAKke,KACLyQ,GAEF3uB,KAAKkT,cAAc8b,IACnB5a,KAAKpU,MACP,MAYNwtB,EAAAttB,UAAA+uB,sBAAA,SAAsBN,GACpB,IAAMxb,EAAQwb,EAGZxb,EAAM9B,MAAQob,GAAoBO,WAClC7Z,EAAM9B,MAAQob,GAAoBY,qBAE3BrtB,KAAKiuB,gBAAgB9a,EAAM+b,WACzB/b,EAAM9B,MAAQob,GAAoBM,cAC3C/sB,KAAKiuB,gBAAgB9a,EAAM+b,YAAa,GAE1ClvB,KAAKguB,gBAAkBpqB,OAAOiQ,KAAK7T,KAAKiuB,iBAAiBjtB,QAQ3DwsB,EAAAttB,UAAAivB,iBAAA,SAAiBR,GACf3uB,KAAKivB,sBAAsBN,GAC3B,IAAMK,EAAW,IAAIH,GAAA5pB,QACnBwnB,GAAoBO,UACpBhtB,KAAKke,KACLyQ,GAEF3uB,KAAKkT,cAAc8b,GASjBhvB,KAAK2tB,iBACJqB,EAASzd,mBACTvR,KAAK4tB,WACN5tB,KAAKovB,qBAAqBT,IAE1B3uB,KAAK0uB,cAAc1uB,KAAK+tB,OAGG,IAAzB/tB,KAAKguB,kBACPhuB,KAAK6tB,kBAAkB9N,QAAQvL,IAC/BxU,KAAK6tB,kBAAkB7sB,OAAS,EAChChB,KAAK4tB,WAAY,EACjB5tB,KAAK+tB,MAAQ,OAUjBP,EAAAttB,UAAAkvB,qBAAA,SAAqBT,GACnB,OAA+B,IAAxBA,EAAaU,QAQtB7B,EAAAttB,UAAAiuB,mBAAA,SAAmBQ,GACjB3uB,KAAK2tB,eAA0C,IAAzB3tB,KAAKguB,gBAC3BhuB,KAAKivB,sBAAsBN,GAC3B,IAAMK,EAAW,IAAIH,GAAA5pB,QACnBwnB,GAAoBM,YACpB/sB,KAAKke,KACLyQ,GAMF,IAAK,IAAMxc,KAJXnS,KAAKkT,cAAc8b,GAGnBhvB,KAAK+tB,MAAqC,GACnBY,EAAc,CACnC,IAAM/mB,EAAQ+mB,EAAaxc,GAC3BnS,KAAK+tB,MAAM5b,GAA6B,mBAAVvK,EAAuB3F,EAAO2F,EAG9D,GAAsC,IAAlC5H,KAAK6tB,kBAAkB7sB,OAAc,CACvC,IAAMsuB,EAAMtvB,KAAKke,KAAKqR,mBACtBvvB,KAAK6tB,kBAAkB1hB,KACrB8H,GACEqb,EACA7C,GAAoBK,YACpB9sB,KAAKwvB,mBACLxvB,MAEFiU,GAAOqb,EAAK7C,GAAoBO,UAAWhtB,KAAKmvB,iBAAkBnvB,MAclEiU,GACEjU,KAAK4mB,SACL6F,GAAoBY,cACpBrtB,KAAKmvB,iBACLnvB,OAGAA,KAAK4mB,SAAS6I,aAAezvB,KAAK4mB,SAAS6I,gBAAkBH,GAC/DtvB,KAAK6tB,kBAAkB1hB,KACrB8H,GACEjU,KAAK4mB,SAAS6I,cACdhD,GAAoBO,UACpBhtB,KAAKmvB,iBACLnvB,SAYVwtB,EAAAttB,UAAAsvB,mBAAA,SAAmBb,GAIjB,GAAI3uB,KAAK0vB,UAAUf,GAAe,CAChC3uB,KAAK4tB,WAAY,EACjB,IAAMoB,EAAW,IAAIH,GAAA5pB,QACnBwnB,GAAoBI,YACpB7sB,KAAKke,KACLyQ,EACA3uB,KAAK4tB,WAEP5tB,KAAKkT,cAAc8b,KAWvBxB,EAAAttB,UAAAouB,YAAA,SAAYK,GACV3uB,KAAKouB,0BAA4BO,EACjC,IAAMxC,KAAcnsB,KAAK+tB,QAAS/tB,KAAK0vB,UAAUf,IACjD3uB,KAAKkT,cACH,IAAI2b,GAAA5pB,QAAgB0pB,EAAatd,KAAMrR,KAAKke,KAAMyQ,EAAcxC,KAYpEqB,EAAAttB,UAAAsuB,iBAAA,SAAiBrb,GAGf,IAAM4Y,EAAgB/rB,KAAKouB,0BAEvBrC,IAAiBA,EAAcxa,kBACJ,kBAArB4B,EAAMwc,aAAiD,IAArBxc,EAAMwc,YAEhDxc,EAAM3B,kBAUVgc,EAAAttB,UAAAwvB,UAAA,SAAUf,GACR,OACE3uB,KAAK4tB,WACLtnB,KAAKspB,IAAIjB,EAAakB,QAAU7vB,KAAK+tB,MAAM8B,SACzC7vB,KAAK8tB,gBACPxnB,KAAKspB,IAAIjB,EAAamB,QAAU9vB,KAAK+tB,MAAM+B,SAAW9vB,KAAK8tB,gBAO/DN,EAAAttB,UAAAE,gBAAA,WACMJ,KAAKquB,sBACP7Z,GAAcxU,KAAKquB,qBACnBruB,KAAKquB,oBAAsB,MAE7BruB,KAAK4mB,SAAS3iB,oBACZ+P,GACAhU,KAAKuuB,uBAGHvuB,KAAKkuB,0BACP1Z,GAAcxU,KAAKkuB,yBACnBluB,KAAKkuB,wBAA0B,MAGjCluB,KAAK6tB,kBAAkB9N,QAAQvL,IAC/BxU,KAAK6tB,kBAAkB7sB,OAAS,EAEhChB,KAAK4mB,SAAW,KAChBxiB,EAAAlE,UAAME,gBAAesE,KAAA1E,OAEzBwtB,EAzXA,CAAqChY,GAAAvQ,SCNrC8qB,GAMc,aANdA,GAaa,YAbbA,GAoBW,UApBXA,GA2Ba,YA3BbA,GAkCW,UClCXC,GACc,aADdA,GAEQ,OAFRA,GAGU,SAHVA,GAIQ,2FCFD,IA4PPC,GA9OA,WAKE,SAAAC,EAAYC,EAAkBC,GAK5BpwB,KAAKqwB,kBAAoBF,EAMzBnwB,KAAKswB,aAAeF,EAMpBpwB,KAAKuwB,UAAY,GAMjBvwB,KAAKwwB,YAAc,GAMnBxwB,KAAKywB,gBAAkB,GA0M3B,OApMEP,EAAAhwB,UAAAqQ,MAAA,WACEvQ,KAAKuwB,UAAUvvB,OAAS,EACxBhB,KAAKwwB,YAAYxvB,OAAS,EAC1BiR,GAAMjS,KAAKywB,kBAObP,EAAAhwB,UAAAwwB,QAAA,WACE,IAAMC,EAAW3wB,KAAKuwB,UAChBK,EAAa5wB,KAAKwwB,YAClB7I,EAAUgJ,EAAS,GACF,GAAnBA,EAAS3vB,QACX2vB,EAAS3vB,OAAS,EAClB4vB,EAAW5vB,OAAS,IAEpB2vB,EAAS,GAAKA,EAASvH,MACvBwH,EAAW,GAAKA,EAAWxH,MAC3BppB,KAAK6wB,QAAQ,IAEf,IAAMC,EAAa9wB,KAAKswB,aAAa3I,GAErC,cADO3nB,KAAKywB,gBAAgBK,GACrBnJ,GAQTuI,EAAAhwB,UAAA6wB,QAAA,SAAQpJ,GACN9iB,IAAS7E,KAAKswB,aAAa3I,KAAY3nB,KAAKywB,iBAAkB,IAC9D,IAAMO,EAAWhxB,KAAKqwB,kBAAkB1I,GACxC,OAzFgB7e,UAyFZkoB,IACFhxB,KAAKuwB,UAAUpkB,KAAKwb,GACpB3nB,KAAKwwB,YAAYrkB,KAAK6kB,GACtBhxB,KAAKywB,gBAAgBzwB,KAAKswB,aAAa3I,KAAY,EACnD3nB,KAAKixB,UAAU,EAAGjxB,KAAKuwB,UAAUvvB,OAAS,IACnC,IAQXkvB,EAAAhwB,UAAAgxB,SAAA,WACE,OAAOlxB,KAAKuwB,UAAUvvB,QASxBkvB,EAAAhwB,UAAAixB,mBAAA,SAAmBrd,GACjB,OAAe,EAARA,EAAY,GASrBoc,EAAAhwB,UAAAkxB,oBAAA,SAAoBtd,GAClB,OAAe,EAARA,EAAY,GASrBoc,EAAAhwB,UAAAmxB,gBAAA,SAAgBvd,GACd,OAAQA,EAAQ,GAAM,GAOxBoc,EAAAhwB,UAAAoxB,SAAA,WACE,IAAIrwB,EACJ,IAAKA,GAAKjB,KAAKuwB,UAAUvvB,QAAU,GAAK,EAAGC,GAAK,EAAGA,IACjDjB,KAAK6wB,QAAQ5vB,IAOjBivB,EAAAhwB,UAAAqxB,QAAA,WACE,OAAiC,IAA1BvxB,KAAKuwB,UAAUvvB,QAOxBkvB,EAAAhwB,UAAAsxB,YAAA,SAAYliB,GACV,OAAOA,KAAOtP,KAAKywB,iBAOrBP,EAAAhwB,UAAAuxB,SAAA,SAAS9J,GACP,OAAO3nB,KAAKwxB,YAAYxxB,KAAKswB,aAAa3I,KAO5CuI,EAAAhwB,UAAA2wB,QAAA,SAAQ/c,GAQN,IAPA,IAAM6c,EAAW3wB,KAAKuwB,UAChBK,EAAa5wB,KAAKwwB,YAClBkB,EAAQf,EAAS3vB,OACjB2mB,EAAUgJ,EAAS7c,GACnBkd,EAAWJ,EAAW9c,GACtB6d,EAAa7d,EAEZA,EAAQ4d,GAAS,GAAG,CACzB,IAAME,EAAS5xB,KAAKmxB,mBAAmBrd,GACjC+d,EAAS7xB,KAAKoxB,oBAAoBtd,GAElCge,EACJD,EAASH,GAASd,EAAWiB,GAAUjB,EAAWgB,GAC9CC,EACAD,EAENjB,EAAS7c,GAAS6c,EAASmB,GAC3BlB,EAAW9c,GAAS8c,EAAWkB,GAC/Bhe,EAAQge,EAGVnB,EAAS7c,GAAS6T,EAClBiJ,EAAW9c,GAASkd,EACpBhxB,KAAKixB,UAAUU,EAAY7d,IAQ7Boc,EAAAhwB,UAAA+wB,UAAA,SAAUU,EAAY7d,GAMpB,IALA,IAAM6c,EAAW3wB,KAAKuwB,UAChBK,EAAa5wB,KAAKwwB,YAClB7I,EAAUgJ,EAAS7c,GACnBkd,EAAWJ,EAAW9c,GAErBA,EAAQ6d,GAAY,CACzB,IAAMI,EAAc/xB,KAAKqxB,gBAAgBvd,GACzC,KAAI8c,EAAWmB,GAAef,GAK5B,MAJAL,EAAS7c,GAAS6c,EAASoB,GAC3BnB,EAAW9c,GAAS8c,EAAWmB,GAC/Bje,EAAQie,EAKZpB,EAAS7c,GAAS6T,EAClBiJ,EAAW9c,GAASkd,GAMtBd,EAAAhwB,UAAA8xB,aAAA,WACE,IAKIrK,EAAS1mB,EAAG+vB,EALVb,EAAmBnwB,KAAKqwB,kBACxBM,EAAW3wB,KAAKuwB,UAChBK,EAAa5wB,KAAKwwB,YACpB1c,EAAQ,EACN/S,EAAI4vB,EAAS3vB,OAEnB,IAAKC,EAAI,EAAGA,EAAIF,IAAKE,EA5OL6H,WA8OdkoB,EAAWb,EADXxI,EAAUgJ,EAAS1vB,YAGVjB,KAAKywB,gBAAgBzwB,KAAKswB,aAAa3I,KAE9CiJ,EAAW9c,GAASkd,EACpBL,EAAS7c,KAAW6T,GAGxBgJ,EAAS3vB,OAAS8S,EAClB8c,EAAW5vB,OAAS8S,EACpB9T,KAAKsxB,YAETpB,EA5OA,GChBA+B,GACQ,EADRA,GAEW,EAFXA,GAGU,EAHVA,GAQS,EARTA,GASS,4dC2GTC,GAhHA,SAAA9tB,GAKE,SAAA+tB,EAAYC,EAAsBC,GAAlC,IAAA9tB,EACEH,EADFM,KAAA1E,MAMI,SAAU2nB,GACR,OAAOyK,EAAqB7lB,MAAM,KAAMob,MAM1C,SAAUA,GACR,OAAmDA,EAAQ,GAAI2K,aAElEtyB,YAGDuE,EAAKguB,uBAAyBhuB,EAAKiuB,iBAAiBpe,KAAK7P,GAMzDA,EAAKkuB,oBAAsBJ,EAM3B9tB,EAAKmuB,cAAgB,EAMrBnuB,EAAKouB,kBAAoB,KAoE7B,OA9GwBC,GAAAT,EAAA/tB,GAiDtB+tB,EAAAjyB,UAAA6wB,QAAA,SAAQpJ,GACN,IAAMkL,EAAQzuB,EAAAlE,UAAM6wB,QAAOrsB,KAAA1E,KAAC2nB,GACxBkL,GACWlL,EAAQ,GAChB3jB,iBAAiBgQ,GAAkBhU,KAAKuyB,wBAE/C,OAAOM,GAMTV,EAAAjyB,UAAA4yB,gBAAA,WACE,OAAO9yB,KAAK0yB,eAOdP,EAAAjyB,UAAAsyB,iBAAA,SAAiBrf,GACf,IAAM4f,EAAmD5f,EAAMtS,OACzDsX,EAAQ4a,EAAKzX,WACnB,GACEnD,IAAU8Z,IACV9Z,IAAU8Z,IACV9Z,IAAU8Z,GACV,CACAc,EAAK9uB,oBAAoB+P,GAAkBhU,KAAKuyB,wBAChD,IAAMS,EAAUD,EAAKT,SACjBU,KAAWhzB,KAAK2yB,2BACX3yB,KAAK2yB,kBAAkBK,KAC5BhzB,KAAK0yB,eAET1yB,KAAKyyB,wBAQTN,EAAAjyB,UAAA+yB,cAAA,SAAcC,EAAiBC,GAG7B,IAFA,IACWJ,EAAMC,EADbI,EAAW,EAGbpzB,KAAK0yB,cAAgBQ,GACrBE,EAAWD,GACXnzB,KAAKkxB,WAAa,GAGlB8B,GADAD,EAAmD/yB,KAAK0wB,UAAU,IACnD4B,SACPS,EAAKzX,aACC2W,IAAoBe,KAAWhzB,KAAK2yB,oBAChD3yB,KAAK2yB,kBAAkBK,IAAW,IAChChzB,KAAK0yB,gBACLU,EACFL,EAAKM,SAIblB,EA9GA,CAAwBlC,IA0HlB,SAAUqD,GACdzX,EACAkX,EACAQ,EACAC,EACAC,GAIA,IAAK5X,KAAgB0X,KAAiB1X,EAAW6X,aAC/C,OFtIgB5qB,SEwIlB,IAAK+S,EAAW6X,YAAYH,GAAeR,EAAKT,UAC9C,OFzIgBxpB,SEiJlB,IAAM2B,EAASoR,EAAW1B,UAAU1P,OAC9BkpB,EAASH,EAAW,GAAK/oB,EAAO,GAChCmpB,EAASJ,EAAW,GAAK/oB,EAAO,GACtC,OACE,MAAQnE,KAAKyG,IAAI0mB,GACjBntB,KAAKutB,KAAKF,EAASA,EAASC,EAASA,GAAUH,sPCrJnD,IAAAK,GACS,QADTA,GAEe,aAFfA,GAGe,aAHfA,GAIW,UAJXA,GAKe,aALfA,GAMqB,kBANrBA,GAOiB,eAPjBA,GAQuB,qBARvBA,GASU,SCVJC,GAAQ,CAKZC,QAAS,UAKTC,QAAS,UAKTC,KAAM,KAKNC,OAAQ,IAKRC,OAAQ,SAKRC,YAAa,cAKbC,OAAQ,SA6BH,IAAMC,GAAkB,GAE/BA,GAAgBR,GAAMC,SAAW,SAAW,EAAI1tB,KAAKgH,IACrDinB,GAAgBR,GAAME,SAAY,EAAI3tB,KAAKgH,GAAK,QAAW,IAC3DinB,GAAgBR,GAAMG,MAAQ,MAC9BK,GAAgBR,GAAMI,QAAU,EAChCI,GAAgBR,GAAMO,QAAU,KAAO,SAEvCE,GAAeT,GC1EfU,GACa,EADbA,GAEe,ECFfC,GAAe,CACbC,OAAQ,SACRC,WAAY,aACZC,SAAU,uICyCZ,IA2NAC,GA3NA,WAIE,SAAAC,EAAYpxB,GAKV3D,KAAKg1B,MAAQrxB,EAAQW,KASrBtE,KAAKi1B,OAAsDtxB,EAAQuxB,MASnEl1B,KAAKm1B,aAA6BllB,IAAnBtM,EAAQ4D,OAAuB5D,EAAQ4D,OAAS,KAS/DvH,KAAKo1B,kBACqBnlB,IAAxBtM,EAAQ0xB,YAA4B1xB,EAAQ0xB,YAAc,KAM5Dr1B,KAAKs1B,sBACyBrlB,IAA5BtM,EAAQ4xB,gBAAgC5xB,EAAQ4xB,gBAAkB,MAMpEv1B,KAAKw1B,aAA6BvlB,IAAnBtM,EAAQ8xB,QAAuB9xB,EAAQ8xB,OAMtDz1B,KAAK01B,aAAe11B,KAAKw1B,UAAWx1B,KAAKm1B,SAMzCn1B,KAAK21B,wBAA0BhyB,EAAQiyB,mBAMvC51B,KAAK61B,iBAAmB,KAMxB71B,KAAK81B,eAAiBnyB,EAAQoyB,cA+IlC,OAzIEhB,EAAA70B,UAAAud,SAAA,WACE,OAAOzd,KAAK01B,WAQdX,EAAA70B,UAAA81B,QAAA,WACE,OAAOh2B,KAAKg1B,OAQdD,EAAA70B,UAAAuY,UAAA,WACE,OAAOzY,KAAKm1B,SAQdJ,EAAA70B,UAAA+1B,SAAA,WACE,OAAOj2B,KAAKi1B,QAUdF,EAAA70B,UAAAg2B,iBAAA,WACE,OAAOl2B,KAAK81B,gBAAkBvB,GAAgBv0B,KAAKi1B,SAQrDF,EAAA70B,UAAAi2B,eAAA,WACE,OAAOn2B,KAAKo1B,cAcdL,EAAA70B,UAAAk2B,mBAAA,WACE,OAAOp2B,KAAKs1B,kBAQdP,EAAA70B,UAAAm2B,SAAA,WACE,OAAOr2B,KAAKw1B,SAQdT,EAAA70B,UAAAo2B,UAAA,SAAUb,GACRz1B,KAAKw1B,QAAUC,EACfz1B,KAAK01B,aAAeD,IAAUz1B,KAAKm1B,UAMrCJ,EAAA70B,UAAAq2B,mBAAA,WACE,OAAOv2B,KAAK61B,kBAMdd,EAAA70B,UAAAs2B,mBAAA,SAAmBC,GACjBz2B,KAAK61B,iBAAmBY,GAQ1B1B,EAAA70B,UAAAmZ,UAAA,SAAU9R,GACRvH,KAAKm1B,QAAU5tB,EACfvH,KAAK01B,aAAe11B,KAAKw1B,UAAWjuB,IAStCwtB,EAAA70B,UAAAw2B,eAAA,SAAerB,GACbr1B,KAAKo1B,aAAeC,GAStBN,EAAA70B,UAAAy2B,sBAAA,SAAsBC,GACpB52B,KAAK21B,wBAA0BiB,GAQjC7B,EAAA70B,UAAA22B,uBAAA,WACE,OAAO72B,KAAK21B,yBAEhBZ,EAzNA,6dChCa+B,GANS,QAMGxwB,KAAKgH,GAMjBypB,GAAS,EAAED,IAAYA,GAAWA,GAAWA,IAM7CE,GAAe,EAAC,KAAM,GAAK,IAAK,IAOhCC,GAzBS,QAyBa3wB,KAAKyG,IAAIzG,KAAK4wB,IAAI5wB,KAAKgH,GAAK,IAM/D6pB,GAAA,SAAA/yB,GAIE,SAAAgzB,EAAY9yB,GACV,OAAAF,EAAAM,KAAA1E,KAAM,CACJsE,KAAMA,EACN4wB,MAAOV,GAAML,OACb5sB,OAAQwvB,GACRtB,QAAQ,EACRJ,YAAa2B,GACbpB,mBAAoB,SAAUlrB,EAAY2sB,GACxC,OAAO3sB,EAAagC,GAAK2qB,EAAM,GA3CjB,aA6CjBr3B,KAEL,OAhBiCs3B,GAAAF,EAAAhzB,GAgBjCgzB,EAhBA,CAAiCtC,IAwBpByC,GAAc,CACzB,IAAIJ,GAAmB,aACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,8CACvB,IAAIA,GAAmB,iDAWnB,SAAUK,GAAaC,EAAOC,EAAYC,GAC9C,IAAM32B,EAASy2B,EAAMz2B,OACf42B,EAAYD,EAAgB,EAAIA,EAAgB,EAClD5lB,EAAS2lB,OACEznB,IAAX8B,IAGAA,EAFE6lB,EAAY,EAELH,EAAM1vB,QAEN,IAAItG,MAAMT,IAGvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK22B,EAAW,CAC1C7lB,EAAO9Q,GAAM61B,GAAYW,EAAMx2B,GAAM,IACrC,IAAI2E,EAtFc,QAsFDU,KAAKyG,IAAIzG,KAAK4wB,IAAK5wB,KAAKgH,KAAOmqB,EAAMx2B,EAAI,GAAK,IAAO,MAClE2E,EAAIqxB,GACNrxB,EAAIqxB,GACKrxB,GAAKqxB,KACdrxB,GAAKqxB,IAEPllB,EAAO9Q,EAAI,GAAK2E,EAElB,OAAOmM,EAWH,SAAU8lB,GAAWJ,EAAOC,EAAYC,GAC5C,IAAM32B,EAASy2B,EAAMz2B,OACf42B,EAAYD,EAAgB,EAAIA,EAAgB,EAClD5lB,EAAS2lB,OACEznB,IAAX8B,IAGAA,EAFE6lB,EAAY,EAELH,EAAM1vB,QAEN,IAAItG,MAAMT,IAGvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK22B,EAC/B7lB,EAAO9Q,GAAM,IAAMw2B,EAAMx2B,GAAM61B,GAC/B/kB,EAAO9Q,EAAI,GACR,IAAMqF,KAAKwxB,KAAKxxB,KAAKsG,IAAI6qB,EAAMx2B,EAAI,GAxHpB,UAwHqCqF,KAAKgH,GAAK,GAEnE,OAAOyE,ihBCnHIgmB,GAAS,EAAC,KAAM,GAAK,IAAK,IAM1BC,GAdS,QAcU1xB,KAAKgH,GAAe,IAUpD2qB,GAAA,SAAA7zB,GAKE,SAAA8zB,EAAY5zB,EAAM6zB,GAChB,OAAA/zB,EAAAM,KAAA1E,KAAM,CACJsE,KAAMA,EACN4wB,MAAOV,GAAMP,QACb1sB,OAAQwwB,GACRxC,gBAAiB4C,EACjB1C,QAAQ,EACRM,cAAeiC,GACf3C,YAAa0C,MACd/3B,KAEL,OAhBiCo4B,GAAAF,EAAA9zB,GAgBjC8zB,EAhBA,CAAiCpD,IAwBpBuD,GAAc,CACzB,IAAIJ,GAAmB,UACvB,IAAIA,GAAmB,YAAa,OACpC,IAAIA,GAAmB,iCACvB,IAAIA,GAAmB,4BACvB,IAAIA,GAAmB,gDACvB,IAAIA,GAAmB,+CAAgD,OACvE,IAAIA,GAAmB,6CAA8C,QC5DnEK,GAAQ,GCEZ,IAAIC,GAAa,GAiBX,SAAUC,GAAI/xB,EAAQgyB,EAAa1sB,GACvC,IAAM2sB,EAAajyB,EAAOuvB,UACpB2C,EAAkBF,EAAYzC,UAC9B0C,KAAcH,KAClBA,GAAWG,GAAc,IAE3BH,GAAWG,GAAYC,GAAmB5sB,ECEtC,SAAU6sB,GAAYC,EAAIC,EAAIC,GAClC,IAAMC,EAASD,GAZa,UAatBE,EAAO1rB,GAAUsrB,EAAG,IACpBK,EAAO3rB,GAAUurB,EAAG,IACpBK,GAAeD,EAAOD,GAAQ,EAC9BG,EAAc7rB,GAAUurB,EAAG,GAAKD,EAAG,IAAM,EACzCv4B,EACJgG,KAAKD,IAAI8yB,GAAe7yB,KAAKD,IAAI8yB,GACjC7yB,KAAKD,IAAI+yB,GACP9yB,KAAKD,IAAI+yB,GACT9yB,KAAKC,IAAI0yB,GACT3yB,KAAKC,IAAI2yB,GACb,OAAO,EAAIF,EAAS1yB,KAAK+yB,MAAM/yB,KAAKutB,KAAKvzB,GAAIgG,KAAKutB,KAAK,EAAIvzB,IAyMvD,SAAUg5B,GAAOT,EAAIU,EAAUC,EAAST,GAC5C,IAAMC,EAASD,GAjOa,UAkOtBE,EAAO1rB,GAAUsrB,EAAG,IACpBY,EAAOlsB,GAAUsrB,EAAG,IACpBa,EAAOH,EAAWP,EAClBW,EAAMrzB,KAAKszB,KACftzB,KAAKD,IAAI4yB,GAAQ3yB,KAAKC,IAAImzB,GACxBpzB,KAAKC,IAAI0yB,GAAQ3yB,KAAKD,IAAIqzB,GAAQpzB,KAAKC,IAAIizB,IAQ/C,MAAO,CAACpsB,GALNqsB,EACAnzB,KAAK+yB,MACH/yB,KAAKD,IAAImzB,GAAWlzB,KAAKD,IAAIqzB,GAAQpzB,KAAKC,IAAI0yB,GAC9C3yB,KAAKC,IAAImzB,GAAQpzB,KAAKD,IAAI4yB,GAAQ3yB,KAAKD,IAAIszB,KAEvBvsB,GAAUusB,ICnKpC,IAAIE,IAAwB,EAKtB,SAAUC,GAAyBC,GAEvCF,UAD6B5pB,IAAhB8pB,GAAmCA,GAW5C,SAAUC,GAAevC,EAAOC,EAAYC,GAChD,IAAI5lB,EACJ,QAAmB9B,IAAfynB,EAA0B,CAC5B,IAAK,IAAIz2B,EAAI,EAAGwG,EAAKgwB,EAAMz2B,OAAQC,EAAIwG,IAAMxG,EAC3Cy2B,EAAWz2B,GAAKw2B,EAAMx2B,GAExB8Q,EAAS2lB,OAET3lB,EAAS0lB,EAAM1vB,QAEjB,OAAOgK,EASH,SAAUkoB,GAAkBxC,EAAOC,EAAYC,GACnD,QAAmB1nB,IAAfynB,GAA4BD,IAAUC,EAAY,CACpD,IAAK,IAAIz2B,EAAI,EAAGwG,EAAKgwB,EAAMz2B,OAAQC,EAAIwG,IAAMxG,EAC3Cy2B,EAAWz2B,GAAKw2B,EAAMx2B,GAExBw2B,EAAQC,EAEV,OAAOD,EAUH,SAAUyC,GAAc1c,IHtHxB,SAAclZ,EAAMkZ,GACxB8a,GAAMh0B,GAAQkZ,EGsHd2c,CAAQ3c,EAAWwY,UAAWxY,GAC9Bgb,GAAiBhb,EAAYA,EAAYwc,IAmBrC,SAAUI,GAAIC,GAClB,MAAiC,iBAAnBA,EHvJZ/B,GAFgBh0B,EG0JiB+1B,IHvJjC/B,GAAMh0B,EAAKg2B,QAAO,yCAA2C,aAC7D,KGuJ6BD,GAAmB,KH3J9C,IAAc/1B,EGkLd,SAAUi2B,GAAmB/c,EAAY9S,EAAY2sB,EAAOmD,GAEhE,IAAIC,EACEC,GAFNld,EAAa4c,GAAI5c,IAESqZ,yBAC1B,GAAI6D,EAAQ,CAEV,GADAD,EAAkBC,EAAOhwB,EAAY2sB,GACjCmD,GAAaA,IAAchd,EAAWyY,YAClCF,EAAgBvY,EAAW0Y,sBAE/BuE,EACGA,EAAkB1E,EAAiBxB,GAAgBiG,QAGrD,CACL,IAAMtF,EAAQ1X,EAAWyY,WACzB,GAAKf,GAASV,GAAMP,UAAYuG,GAAcA,GAAahG,GAAMP,QAC/DwG,EAAkB/vB,MACb,CAIL,IAuBMqrB,EAvBA4E,EAAaC,GACjBpd,EACA4c,GAAI,cAEN,GAAIO,IAAeV,IAAqB/E,IAAUV,GAAMP,QAEtDwG,EAAkB/vB,EAAa8S,EAAW0Y,uBACrC,CACL,IAAI2E,EAAW,CACbxD,EAAM,GAAK3sB,EAAa,EACxB2sB,EAAM,GACNA,EAAM,GAAK3sB,EAAa,EACxB2sB,EAAM,GACNA,EAAM,GACNA,EAAM,GAAK3sB,EAAa,EACxB2sB,EAAM,GACNA,EAAM,GAAK3sB,EAAa,GAK1B+vB,GAFc7B,IADdiC,EAAWF,EAAWE,EAAUA,EAAU,IACP9yB,MAAM,EAAG,GAAI8yB,EAAS9yB,MAAM,EAAG,IACnD6wB,GAAYiC,EAAS9yB,MAAM,EAAG,GAAI8yB,EAAS9yB,MAAM,EAAG,KAC9B,OAKjBkI,KAHhB8lB,EAAgByE,EAClBjG,GAAgBiG,GAChBhd,EAAW0Y,sBAEbuE,GAAmB1E,IAIzB,OAAO0E,EAUH,SAAUK,GAAyBC,IArGnC,SAAyBA,GAC7BA,EAAYhb,QAAQma,IAqGpBc,CAAeD,GACfA,EAAYhb,SAAQ,SAAUtZ,GAC5Bs0B,EAAYhb,SAAQ,SAAU0Y,GACxBhyB,IAAWgyB,GACbD,GAAiB/xB,EAAQgyB,EAAauB,UA8CxC,SAAUiB,GAAiBzd,EAAY0d,GAC3C,OAAK1d,EAE4B,iBAAfA,EACT4c,GAAI5c,GAEuBA,EAJ3B4c,GAAIc,GA4HT,SAAUC,GAAWC,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,IAAMC,EAAaF,EAAYnF,aAAeoF,EAAYpF,WAC1D,OAAImF,EAAYpF,YAAcqF,EAAYrF,WAGlB4E,GAA4BQ,EAAaC,KACtCrB,KAHlBsB,EAgBL,SAAUV,GACdW,EACAC,GAEA,IAEIC,EFrZA,SAAc/C,EAAYC,GAC9B,IAAIvzB,EAIJ,OAHIszB,KAAcH,IAAcI,KAAmBJ,GAAWG,KAC5DtzB,EAAYmzB,GAAWG,GAAYC,IAE9BvzB,EEgZas2B,CAFDH,EAAiBvF,UACZwF,EAAsBxF,WAK9C,OAHKyF,IACHA,EAAgBxB,IAEXwB,EAaH,SAAUE,GAAal1B,EAAQgyB,GAGnC,OAAOmC,GAFkBR,GAAI3zB,GACC2zB,GAAI3B,IAkB9B,SAAUmD,GAAUl2B,EAAYe,EAAQgyB,GAE5C,OADsBkD,GAAal1B,EAAQgyB,EACpCgD,CAAc/1B,OAAYuK,EAAWvK,EAAW1E,QAenD,SAAU66B,GAAgBt0B,EAAQd,EAAQgyB,EAAazsB,GAE3D,OAAOF,GAAevE,EADAo0B,GAAal1B,EAAQgyB,QACExoB,EAAWjE,GA0B1D,IArQE8vB,GACAC,GACAC,GAmQEC,GAAiB,KA2Bf,SAAUC,KACd,OAAOD,GAmBH,SAAUE,GAAiBz2B,EAAY61B,GAC3C,OAAKU,GAGEL,GAAUl2B,EAAY61B,EAAkBU,IAFtCv2B,EAYL,SAAU02B,GAAmB12B,EAAY22B,GAC7C,OAAKJ,GAiBEL,GAAUl2B,EAAYu2B,GAAgBI,IAfzCxC,KACC5c,GAAOvX,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAM,KACjBA,EAAW,IAAM,KACjBA,EAAW,KAAM,IACjBA,EAAW,IAAM,KAEjBm0B,IAAwB,EAExB9W,QAAQC,KACN,2FAGGtd,GAYL,SAAU42B,GAAa/0B,EAAQg0B,GACnC,OAAKU,GAGEJ,GAAgBt0B,EAAQg0B,EAAkBU,IAFxC10B,EAYL,SAAUg1B,GAAeh1B,EAAQ80B,GACrC,OAAKJ,GAGEJ,GAAgBt0B,EAAQ00B,GAAgBI,GAFtC90B,EAaL,SAAUi1B,GAAiB9xB,EAAY6wB,GAC3C,IAAKU,GACH,OAAOvxB,EAET,IAAM+xB,EAAcrC,GAAImB,GAAkBtF,WACpCyG,EAAYT,GAAehG,WACjC,OAAOwG,GAAeC,EACjBhyB,EAAa6pB,GAAgBkI,GAAgBlI,GAAgBmI,GAC9DhyB,EClpBA,SAAUiyB,GAAap1B,EAAQq1B,EAAYC,GAC/C,OAAA,SASYpyB,EAAQC,EAAYE,EAAMkyB,EAAcC,GAChD,GAAKtyB,EAAL,CAGA,IAAKC,IAAekyB,EAClB,OAAOnyB,EAET,IAAMuyB,EAAYJ,EAAa,EAAIhyB,EAAK,GAAKF,EACvCuyB,EAAaL,EAAa,EAAIhyB,EAAK,GAAKF,EACxCwyB,EAASH,EAAkBA,EAAgB,GAAK,EAChDI,EAASJ,EAAkBA,EAAgB,GAAK,EAClDt0B,EAAOlB,EAAO,GAAKy1B,EAAY,EAAIE,EACnCv0B,EAAOpB,EAAO,GAAKy1B,EAAY,EAAIE,EACnCx0B,EAAOnB,EAAO,GAAK01B,EAAa,EAAIE,EACpCv0B,EAAOrB,EAAO,GAAK01B,EAAa,EAAIE,EAIpC10B,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,GAGrBC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,GAIzB,IAAI/C,EAAI8G,GAAMhC,EAAO,GAAIhC,EAAME,GAC3B/C,EAAI6G,GAAMhC,EAAO,GAAI/B,EAAME,GAG/B,GAAIk0B,GAAgBD,GAAUnyB,EAAY,CACxC,IAAM0yB,EAAQ,GAAK1yB,EACnB/E,IACGy3B,EAAQ92B,KAAKyG,IAAI,EAAIzG,KAAKkD,IAAI,EAAGf,EAAOgC,EAAO,IAAM2yB,GACtDA,EAAQ92B,KAAKyG,IAAI,EAAIzG,KAAKkD,IAAI,EAAGiB,EAAO,GAAK9B,GAAQy0B,GACvDx3B,IACGw3B,EAAQ92B,KAAKyG,IAAI,EAAIzG,KAAKkD,IAAI,EAAGd,EAAO+B,EAAO,IAAM2yB,GACtDA,EAAQ92B,KAAKyG,IAAI,EAAIzG,KAAKkD,IAAI,EAAGiB,EAAO,GAAK7B,GAAQw0B,GAGzD,MAAO,CAACz3B,EAAGC,KASX,SAAUy3B,GAAK5yB,GACnB,OAAOA,ECzDT,SAAS6yB,GACP5yB,EACA6yB,EACAC,EACAC,GAEA,IAAMC,EAAcvzB,GAASozB,GAAaC,EAAa,GACjDG,EAAcvzB,GAAUmzB,GAAaC,EAAa,GAExD,OAAIC,EACKn3B,KAAKiD,IAAImB,EAAYpE,KAAKkD,IAAIk0B,EAAaC,IAE7Cr3B,KAAKiD,IAAImB,EAAYpE,KAAKiD,IAAIm0B,EAAaC,IAepD,SAASC,GAA2BlzB,EAAY6M,EAAeC,GAC7D,IAAIsH,EAASxY,KAAKiD,IAAImB,EAAY6M,GAalC,OAVAuH,GACExY,KAAKyG,IAAI,EAHG,GAGSzG,KAAKkD,IAAI,EAAGkB,EAAa6M,EAAgB,IAHlD,GAIZ,EACEC,IACFsH,EAASxY,KAAKkD,IAAIsV,EAAQtH,GAC1BsH,GACExY,KAAKyG,IAAI,EARC,GAQWzG,KAAKkD,IAAI,EAAGgO,EAAgB9M,EAAa,IARpD,GAUV,GAEG+B,GAAMqS,EAAQtH,EAAgB,EAAmB,EAAhBD,GA6IpC,SAAUsmB,GACdtmB,EACAC,EACAsmB,EACAC,EACAC,GAEA,OAAA,SAQYtzB,EAAY5J,EAAW8J,EAAMkyB,GACrC,QAAmB7sB,IAAfvF,EAA0B,CAC5B,IAAMuzB,EAAeF,EACjBT,GACE/lB,EACAwmB,EACAnzB,EACAozB,GAEFzmB,EAGJ,YAF8BtH,IAAf6tB,GAA2BA,IAE1BhB,EAGTc,GACLlzB,EACAuzB,EACAzmB,GALO/K,GAAM/B,EAAY8M,EAAeymB,KCzN5C,SAAUC,GAAQvzB,GACtB,YAAiBsF,IAAbtF,EACK,OAEP,EAQE,SAAUwzB,GAAKxzB,GACnB,YAAiBsF,IAAbtF,EACKA,OAEP,ECnBE,SAAUyzB,GAAOlxB,GACrB,OAAO5G,KAAKyH,IAAIb,EAAG,GASf,SAAUmxB,GAAQnxB,GACtB,OAAO,EAAIkxB,GAAO,EAAIlxB,GASlB,SAAUoxB,GAASpxB,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,EAS3B,SAAUqxB,GAAOrxB,GACrB,OAAOA,EJ4rBP4tB,GAAyB0D,GAAAC,aACzB3D,GAAyB4D,GAAAD,aAvczB3C,GA4cE0C,GAAAC,YA3cF1C,GA4cEyC,GAAAG,aA3cF3C,GA4cEwC,GAAAI,WAHAF,GAAAD,YAvcW1e,SAAQ,SAAUqb,GAC7BU,GAAa/b,SAAQ,SAAUsb,GAC7B7C,GAAiB4C,EAAaC,EAAaU,IAC3CvD,GAAiB6C,EAAaD,EAAaY,8MK5RjD,IAAA6C,GACM,KADNA,GAEO,MAFPA,GAGO,MAHPA,GAIQ,gMCDF,SAAUC,GACd31B,EACAC,EACAhI,EACAiI,EACAjE,EACA25B,GAIA,IAFA,IAAMC,EAAOD,GAAsB,GAC/B99B,EAAI,EACCue,EAAIpW,EAAQoW,EAAIpe,EAAKoe,GAAKnW,EAAQ,CACzC,IAAM1D,EAAIwD,EAAgBqW,GACpB5Z,EAAIuD,EAAgBqW,EAAI,GAC9Bwf,EAAK/9B,KAAOmE,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GAC5D45B,EAAK/9B,KAAOmE,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GAK9D,OAHI25B,GAAYC,EAAKh+B,QAAUC,IAC7B+9B,EAAKh+B,OAASC,GAET+9B,EAaH,SAAUC,GACd91B,EACAC,EACAhI,EACAiI,EACAnD,EACAg5B,EACAH,GAQA,IANA,IAAMC,EAAOD,GAAsB,GAC7Bx4B,EAAMD,KAAKC,IAAIL,GACfG,EAAMC,KAAKD,IAAIH,GACfi5B,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACnBj+B,EAAI,EACCue,EAAIpW,EAAQoW,EAAIpe,EAAKoe,GAAKnW,EAAQ,CACzC,IAAMsqB,EAASxqB,EAAgBqW,GAAK2f,EAC9BvL,EAASzqB,EAAgBqW,EAAI,GAAK4f,EACxCJ,EAAK/9B,KAAOk+B,EAAUxL,EAASptB,EAAMqtB,EAASvtB,EAC9C24B,EAAK/9B,KAAOm+B,EAAUzL,EAASttB,EAAMutB,EAASrtB,EAC9C,IAAK,IAAI84B,EAAI7f,EAAI,EAAG6f,EAAI7f,EAAInW,IAAUg2B,EACpCL,EAAK/9B,KAAOkI,EAAgBk2B,GAMhC,OAHIN,GAAYC,EAAKh+B,QAAUC,IAC7B+9B,EAAKh+B,OAASC,GAET+9B,mgBCjDHM,G1DaG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G0DCzBC,GAAA,SAAAn7B,GACE,SAAAo7B,IAAA,I/DAyBC,EAIrBC,EAGAC,EAEAC,EARAC,E+DDJt7B,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAK4wB,QvDsJA,CAACrsB,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,GuDhJrCvE,EAAKu7B,iBAAkB,EAMvBv7B,EAAKw7B,yCAA2C,EAMhDx7B,EAAKy7B,2BAA6B,EAUlCz7B,EAAK07B,6B/DnCkBR,E+DmCuB,SAC5CS,EACAC,EACAC,GAEA,IAAKA,EACH,OAAOpgC,KAAKqgC,sBAAsBF,GAEpC,IAAMG,EAAQtgC,KAAKsgC,QAEnB,OADAA,EAAMC,eAAeH,GACdE,EAAMD,sBAAsBF,I/D5CnCN,GAAS,EAUN,WACL,IAAMW,EAAW/+B,MAAMvB,UAAU6H,MAAMrD,KAAKsN,WAO5C,OANK6tB,GAAU7/B,OAAS4/B,GAAaj+B,EAAY6+B,EAAUb,KACzDE,GAAS,EACTD,EAAW5/B,KACX2/B,EAAWa,EACXd,EAAaD,EAAGlzB,MAAMvM,KAAMgS,YAEvB0tB,M+DmRX,OAvSuBe,GAAAjB,EAAAp7B,GAyDrBo7B,EAAAt/B,UAAAwgC,oBAAA,SAAoBP,EAAkBC,GACpC,OAAOpgC,KAAKigC,4BACVjgC,KAAKoV,cACL+qB,EACAC,IASJZ,EAAAt/B,UAAAogC,MAAA,WACE,OAAOp+B,KAWTs9B,EAAAt/B,UAAAygC,eAAA,SAAeh7B,EAAGC,EAAGg7B,EAAcC,GACjC,OAAO3+B,KAQTs9B,EAAAt/B,UAAA4gC,WAAA,SAAWn7B,EAAGC,GACZ,IAAMm7B,EAAQ/gC,KAAKghC,gBAAgB,CAACr7B,EAAGC,IACvC,OAAOm7B,EAAM,KAAOp7B,GAAKo7B,EAAM,KAAOn7B,GAWxC45B,EAAAt/B,UAAA8gC,gBAAA,SAAgB3J,EAAO4J,GACrB,IAAML,EAAeK,GAAsC,CAACC,IAAKA,KAEjE,OADAlhC,KAAK2gC,eAAetJ,EAAM,GAAIA,EAAM,GAAIuJ,EAAc93B,EAAAA,GAC/C83B,GAUTpB,EAAAt/B,UAAAihC,qBAAA,SAAqBz7B,GACnB,OAAO1F,KAAK8gC,WAAWp7B,EAAW,GAAIA,EAAW,KASnD85B,EAAAt/B,UAAAkhC,cAAA,SAAc75B,GACZ,OAAOrF,KASTs9B,EAAAt/B,UAAAuY,UAAA,SAAU5Q,GACR,GAAI7H,KAAK8/B,iBAAmB9/B,KAAKoV,cAAe,CAC9C,IAAM7N,EAASvH,KAAKohC,cAAcphC,KAAKm1B,UACnCzQ,MAAMnd,EAAO,KAAOmd,MAAMnd,EAAO,MACnCyB,GAAoBzB,GAEtBvH,KAAK8/B,gBAAkB9/B,KAAKoV,cAE9B,OvDkgBE,SAAyB7N,EAAQM,GACrC,OAAIA,GACFA,EAAW,GAAKN,EAAO,GACvBM,EAAW,GAAKN,EAAO,GACvBM,EAAW,GAAKN,EAAO,GACvBM,EAAW,GAAKN,EAAO,GAChBM,GAEAN,EuD1gBA85B,CAAerhC,KAAKm1B,QAASttB,IAWtC23B,EAAAt/B,UAAAohC,OAAA,SAAOp7B,EAAOg5B,GACZh9B,KAaFs9B,EAAAt/B,UAAA4lB,MAAA,SAAM9f,EAAIu7B,EAAQC,GAChBt/B,KAYFs9B,EAAAt/B,UAAAuhC,SAAA,SAASC,GACP,OAAO1hC,KAAKqgC,sBAAsBqB,EAAYA,IAWhDlC,EAAAt/B,UAAAmgC,sBAAA,SAAsBF,GACpB,OAAOj+B,KAQTs9B,EAAAt/B,UAAAyhC,QAAA,WACE,OAAOz/B,KAYTs9B,EAAAt/B,UAAAqgC,eAAA,SAAex0B,GACb7J,KASFs9B,EAAAt/B,UAAA0hC,iBAAA,SAAiBr6B,GACf,OAAOrF,KAWTs9B,EAAAt/B,UAAAimB,UAAA,SAAUwN,EAAQC,GAChB1xB,KAkBFs9B,EAAAt/B,UAAAkF,UAAA,SAAUqB,EAAQgyB,GAEhB,IAAMoJ,EAAazH,GAAc3zB,GAC3BsF,EACJ81B,EAAW5L,YAAczB,GAAMH,YAC3B,SAAUyN,EAAeC,EAAgB14B,GACvC,IAAM24B,EAAcH,EAAWppB,YACzBwpB,EAAkBJ,EAAW1L,iBAC7BrQ,EAAQ1b,GAAU63B,GAAmB73B,GAAU43B,GAmBrD,OAlBAn8B,EACEy5B,GACA2C,EAAgB,GAChBA,EAAgB,GAChBnc,GACCA,EACD,EACA,EACA,GAEFgZ,GACEgD,EACA,EACAA,EAAc9gC,OACdqI,EACAi2B,GACAyC,GAEKpG,GAAakG,EAAYpJ,EAAzBkD,CACLmG,EACAC,EACA14B,IAGJsyB,GAAakG,EAAYpJ,GAE/B,OADAz4B,KAAKugC,eAAex0B,GACb/L,MAEXw/B,EAvSA,CAAuB1lB,GAAA7U,SAySvBi9B,GAAe3C,6dCfT,SAAU4C,GAAmBC,GACjC,IAAI/4B,EAQJ,OAPI+4B,GAAUvD,GACZx1B,EAAS,EACA+4B,GAAUvD,IAAsBuD,GAAUvD,GACnDx1B,EAAS,EACA+4B,GAAUvD,KACnBx1B,EAAS,GAEmBA,EAS1B,SAAUg5B,GAAgBC,EAAgBl9B,EAAW25B,GACzD,IAAM51B,EAAkBm5B,EAAeC,qBACvC,GAAKp5B,EAEE,CACL,IAAME,EAASi5B,EAAeE,YAC9B,OAAO1D,GACL31B,EACA,EACAA,EAAgBnI,OAChBqI,EACAjE,EACA25B,GATF,OAAO,SAcX0D,GAjVA,SAAAr+B,GACE,SAAAs+B,IAAA,IAAAn+B,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAK69B,OAASvD,GAMdt6B,EAAK8E,OAAS,EAMd9E,EAAK4E,gBAAkB,OAoQ3B,OAxR6Bw5B,GAAAD,EAAAt+B,GA4B3Bs+B,EAAAxiC,UAAAkhC,cAAA,SAAc75B,GACZ,OxDoNF4B,EwDnNInJ,KAAKmJ,gBxDoNTC,EwDnNI,ExDoNJhI,EwDnNIpB,KAAKmJ,gBAAgBnI,OxDoNzBqI,EwDnNIrJ,KAAKqJ,OxDuNFH,GADQF,GwDrNXzB,GxDsNiC4B,EAAiBC,EAAQhI,EAAKiI,GAR/D,IACJF,EACAC,EACAhI,EACAiI,GwD1MAq5B,EAAAxiC,UAAA0iC,eAAA,WACE,OAAO1gC,KAQTwgC,EAAAxiC,UAAA2iC,mBAAA,WACE,OAAO7iC,KAAKmJ,gBAAgBpB,MAAM,EAAG/H,KAAKqJ,SAM5Cq5B,EAAAxiC,UAAAqiC,mBAAA,WACE,OAAOviC,KAAKmJ,iBAQdu5B,EAAAxiC,UAAA4iC,kBAAA,WACE,OAAO9iC,KAAKmJ,gBAAgBpB,MAC1B/H,KAAKmJ,gBAAgBnI,OAAShB,KAAKqJ,SASvCq5B,EAAAxiC,UAAA6iC,UAAA,WACE,OAAO/iC,KAAKoiC,QAQdM,EAAAxiC,UAAAmgC,sBAAA,SAAsBF,GAOpB,GANIngC,KAAKggC,6BAA+BhgC,KAAKoV,gBAC3CpV,KAAK+/B,yCAA2C,EAChD//B,KAAKggC,2BAA6BhgC,KAAKoV,eAKvC+qB,EAAmB,GACgC,IAAlDngC,KAAK+/B,0CACJI,GAAoBngC,KAAK+/B,yCAE3B,OAAO//B,KAGT,IAAMgjC,EACJhjC,KAAKijC,8BAA8B9C,GAErC,OADkC6C,EAAmBT,qBACvBvhC,OAAShB,KAAKmJ,gBAAgBnI,OACnDgiC,GAQPhjC,KAAK+/B,yCAA2CI,EACzCngC,OASX0iC,EAAAxiC,UAAA+iC,8BAAA,SAA8B9C,GAC5B,OAAOngC,MAMT0iC,EAAAxiC,UAAAsiC,UAAA,WACE,OAAOxiC,KAAKqJ,QAOdq5B,EAAAxiC,UAAAgjC,mBAAA,SAAmBd,EAAQj5B,GACzBnJ,KAAKqJ,OAAS84B,GAAmBC,GACjCpiC,KAAKoiC,OAASA,EACdpiC,KAAKmJ,gBAAkBA,GAQzBu5B,EAAAxiC,UAAAijC,eAAA,SAAe77B,EAAa87B,GAC1BlhC,KASFwgC,EAAAxiC,UAAAmjC,UAAA,SAAUjB,EAAQ96B,EAAag8B,GAE7B,IAAIj6B,EACJ,GAAI+4B,EACF/4B,EAAS84B,GAAmBC,OACvB,CACL,IAAK,IAAInhC,EAAI,EAAGA,EAAIqiC,IAAWriC,EAC7B,CAAA,GAA2B,IAAvBqG,EAAYtG,OAGd,OAFAhB,KAAKoiC,OAASvD,QACd7+B,KAAKqJ,OAAS,GAGd/B,EAAoCA,EAAY,GAIpD86B,EA8GN,SAA4B/4B,GAC1B,IAAI+4B,EACU,GAAV/4B,EACF+4B,EAASvD,GACU,GAAVx1B,EACT+4B,EAASvD,GACU,GAAVx1B,IACT+4B,EAASvD,IAEX,OAA6DuD,EAvHhDmB,CADTl6B,EAAS/B,EAAYtG,QAGvBhB,KAAKoiC,OAASA,EACdpiC,KAAKqJ,OAASA,GAYhBq5B,EAAAxiC,UAAAqgC,eAAA,SAAex0B,GACT/L,KAAKmJ,kBACP4C,EAAY/L,KAAKmJ,gBAAiBnJ,KAAKmJ,gBAAiBnJ,KAAKqJ,QAC7DrJ,KAAKmV,YAWTutB,EAAAxiC,UAAAohC,OAAA,SAAOp7B,EAAOg5B,GACZ,IAAM/1B,EAAkBnJ,KAAKuiC,qBAC7B,GAAIp5B,EAAiB,CACnB,IAAME,EAASrJ,KAAKwiC,YACpBvD,GACE91B,EACA,EACAA,EAAgBnI,OAChBqI,EACAnD,EACAg5B,EACA/1B,GAEFnJ,KAAKmV,YAaTutB,EAAAxiC,UAAA4lB,MAAA,SAAM9f,EAAIu7B,EAAQC,GAChB,IAAIv7B,EAAKs7B,OACEtxB,IAAPhK,IACFA,EAAKD,GAEP,IAAIk5B,EAASsC,EACRtC,IACHA,EAAS70B,GAAUrK,KAAKyY,cAE1B,IAAMtP,EAAkBnJ,KAAKuiC,qBAC7B,GAAIp5B,EAAiB,CACnB,IAAME,EAASrJ,KAAKwiC,aF5KpB,SACJr5B,EACAC,EACAhI,EACAiI,EACArD,EACAC,EACAi5B,EACAH,GAMA,IAJA,IAAMC,EAAOD,GAAsB,GAC7BI,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACnBj+B,EAAI,EACCue,EAAIpW,EAAQoW,EAAIpe,EAAKoe,GAAKnW,EAAQ,CACzC,IAAMsqB,EAASxqB,EAAgBqW,GAAK2f,EAC9BvL,EAASzqB,EAAgBqW,EAAI,GAAK4f,EACxCJ,EAAK/9B,KAAOk+B,EAAUn5B,EAAK2tB,EAC3BqL,EAAK/9B,KAAOm+B,EAAUn5B,EAAK2tB,EAC3B,IAAK,IAAIyL,EAAI7f,EAAI,EAAG6f,EAAI7f,EAAInW,IAAUg2B,EACpCL,EAAK/9B,KAAOkI,EAAgBk2B,GAG5BN,GAAYC,EAAKh+B,QAAUC,IAC7B+9B,EAAKh+B,OAASC,GEqJZuiC,CACEr6B,EACA,EACAA,EAAgBnI,OAChBqI,EACArD,EACAC,EACAi5B,EACA/1B,GAEFnJ,KAAKmV,YAWTutB,EAAAxiC,UAAAimB,UAAA,SAAUwN,EAAQC,GAChB,IAAMzqB,EAAkBnJ,KAAKuiC,qBAC7B,GAAIp5B,EAAiB,CACnB,IAAME,EAASrJ,KAAKwiC,aF9JpB,SACJr5B,EACAC,EACAhI,EACAiI,EACAsqB,EACAC,EACAmL,GAIA,IAFA,IAAMC,EAAOD,GAAsB,GAC/B99B,EAAI,EACCue,EAAIpW,EAAQoW,EAAIpe,EAAKoe,GAAKnW,EAAQ,CACzC21B,EAAK/9B,KAAOkI,EAAgBqW,GAAKmU,EACjCqL,EAAK/9B,KAAOkI,EAAgBqW,EAAI,GAAKoU,EACrC,IAAK,IAAIyL,EAAI7f,EAAI,EAAG6f,EAAI7f,EAAInW,IAAUg2B,EACpCL,EAAK/9B,KAAOkI,EAAgBk2B,GAG5BN,GAAYC,EAAKh+B,QAAUC,IAC7B+9B,EAAKh+B,OAASC,GE4IZwiC,CACEt6B,EACA,EACAA,EAAgBnI,OAChBqI,EACAsqB,EACAC,EACAzqB,GAEFnJ,KAAKmV,YAGXutB,EAxRA,CAA6BgB,GAAAz+B,SCA7B,SAAS0+B,GACPx6B,EACAy6B,EACAC,EACAx6B,EACA1D,EACAC,EACAg7B,GAEA,IAIIx3B,EAJEgC,EAAKjC,EAAgBy6B,GACrBp4B,EAAKrC,EAAgBy6B,EAAU,GAC/B37B,EAAKkB,EAAgB06B,GAAWz4B,EAChClD,EAAKiB,EAAgB06B,EAAU,GAAKr4B,EAE1C,GAAW,IAAPvD,GAAmB,IAAPC,EACdkB,EAASw6B,MACJ,CACL,IAAM12B,IAAMvH,EAAIyF,GAAMnD,GAAMrC,EAAI4F,GAAMtD,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAIgF,EAAI,EACN9D,EAASy6B,MACJ,CAAA,GAAI32B,EAAI,EAAG,CAChB,IAAK,IAAIjM,EAAI,EAAGA,EAAIoI,IAAUpI,EAC5B2/B,EAAa3/B,GAAK0M,GAChBxE,EAAgBy6B,EAAU3iC,GAC1BkI,EAAgB06B,EAAU5iC,GAC1BiM,GAIJ,YADA0zB,EAAa5/B,OAASqI,GAGtBD,EAASw6B,GAGb,IAAS3iC,EAAI,EAAGA,EAAIoI,IAAUpI,EAC5B2/B,EAAa3/B,GAAKkI,EAAgBC,EAASnI,GAE7C2/B,EAAa5/B,OAASqI,EAalB,SAAUy6B,GAAgB36B,EAAiBC,EAAQhI,EAAKiI,EAAQG,GACpE,IAAI4B,EAAKjC,EAAgBC,GACrBoC,EAAKrC,EAAgBC,EAAS,GAClC,IAAKA,GAAUC,EAAQD,EAAShI,EAAKgI,GAAUC,EAAQ,CACrD,IAAMgC,EAAKlC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GAC9B26B,EAAe52B,GAAU/B,EAAII,EAAIH,EAAII,GACvCs4B,EAAev6B,IACjBA,EAAMu6B,GAER34B,EAAKC,EACLG,EAAKC,EAEP,OAAOjC,EAWH,SAAUw6B,GACd76B,EACAC,EACA66B,EACA56B,EACAG,GAEA,IAAK,IAAIvI,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACjBuI,EAAMs6B,GAAgB36B,EAAiBC,EAAQhI,EAAKiI,EAAQG,GAC5DJ,EAAShI,EAEX,OAAOoI,EAwCH,SAAU06B,GACd/6B,EACAC,EACAhI,EACAiI,EACA86B,EACAC,EACAz+B,EACAC,EACAg7B,EACAC,EACAwD,GAEA,GAAIj7B,GAAUhI,EACZ,OAAOy/B,EAET,IAAI5/B,EAAGqjC,EACP,GAAiB,IAAbH,EAAgB,CAQlB,IANAG,EAAkBn3B,GAChBxH,EACAC,EACAuD,EAAgBC,GAChBD,EAAgBC,EAAS,KAELy3B,EAAoB,CACxC,IAAK5/B,EAAI,EAAGA,EAAIoI,IAAUpI,EACxB2/B,EAAa3/B,GAAKkI,EAAgBC,EAASnI,GAG7C,OADA2/B,EAAa5/B,OAASqI,EACfi7B,EAEP,OAAOzD,EAKX,IAFA,IAAM0D,EAAWF,GAA8B,CAACnD,IAAKA,KACjDptB,EAAQ1K,EAASC,EACdyK,EAAQ1S,GAWb,GAVAuiC,GACEx6B,EACA2K,EAAQzK,EACRyK,EACAzK,EACA1D,EACAC,EACA2+B,IAEFD,EAAkBn3B,GAAUxH,EAAGC,EAAG2+B,EAAS,GAAIA,EAAS,KAClC1D,EAAoB,CAExC,IADAA,EAAqByD,EAChBrjC,EAAI,EAAGA,EAAIoI,IAAUpI,EACxB2/B,EAAa3/B,GAAKsjC,EAAStjC,GAE7B2/B,EAAa5/B,OAASqI,EACtByK,GAASzK,OAYTyK,GACEzK,EACA/C,KAAKkD,KACDlD,KAAKutB,KAAKyQ,GAAmBh+B,KAAKutB,KAAKgN,IACvCsD,EACA,EACF,GAIR,GAAIC,IAEFT,GACEx6B,EACA/H,EAAMiI,EACND,EACAC,EACA1D,EACAC,EACA2+B,IAEFD,EAAkBn3B,GAAUxH,EAAGC,EAAG2+B,EAAS,GAAIA,EAAS,KAClC1D,GAAoB,CAExC,IADAA,EAAqByD,EAChBrjC,EAAI,EAAGA,EAAIoI,IAAUpI,EACxB2/B,EAAa3/B,GAAKsjC,EAAStjC,GAE7B2/B,EAAa5/B,OAASqI,EAG1B,OAAOw3B,EAiBH,SAAU2D,GACdr7B,EACAC,EACA66B,EACA56B,EACA86B,EACAC,EACAz+B,EACAC,EACAg7B,EACAC,EACAwD,GAGA,IADA,IAAME,EAAWF,GAA8B,CAACnD,IAAKA,KAC5CjgC,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACjB4/B,EAAqBqD,GACnB/6B,EACAC,EACAhI,EACAiI,EACA86B,EACAC,EACAz+B,EACAC,EACAg7B,EACAC,EACA0D,GAEFn7B,EAAShI,EAEX,OAAOy/B,ECtQH,SAAU4D,GACdt7B,EACAC,EACA9B,EACA+B,GAEA,IAAK,IAAIpI,EAAI,EAAGwG,EAAKH,EAAYtG,OAAQC,EAAIwG,IAAMxG,EAEjD,IADA,IAAMyE,EAAa4B,EAAYrG,GACtBue,EAAI,EAAGA,EAAInW,IAAUmW,EAC5BrW,EAAgBC,KAAY1D,EAAW8Z,GAG3C,OAAOpW,EAWH,SAAUs7B,GACdv7B,EACAC,EACAu7B,EACAt7B,EACAu7B,GAIA,IAFA,IAAMX,EAAOW,GAAsB,GAC/B3jC,EAAI,EACCue,EAAI,EAAGqlB,EAAKF,EAAa3jC,OAAQwe,EAAIqlB,IAAMrlB,EAAG,CACrD,IAAMpe,EAAMqjC,GACVt7B,EACAC,EACAu7B,EAAanlB,GACbnW,GAEF46B,EAAKhjC,KAAOG,EACZgI,EAAShI,EAGX,OADA6iC,EAAKjjC,OAASC,EACPgjC,ECwBH,SAAUa,GACd37B,EACAC,EACAhI,EACAiI,EACA82B,EACA4E,EACAC,GAEA,IAAMjkC,GAAKK,EAAMgI,GAAUC,EAC3B,GAAItI,EAAI,EAAG,CACT,KAAOqI,EAAShI,EAAKgI,GAAUC,EAC7B07B,EAA0BC,KAAsB77B,EAAgBC,GAChE27B,EAA0BC,KACxB77B,EAAgBC,EAAS,GAE7B,OAAO47B,EAGT,IAAMC,EAAU,IAAIxjC,MAAMV,GAC1BkkC,EAAQ,GAAK,EACbA,EAAQlkC,EAAI,GAAK,EAIjB,IAFA,IAAMmkC,EAAQ,CAAC97B,EAAQhI,EAAMiI,GACzByK,EAAQ,EACLoxB,EAAMlkC,OAAS,GAAG,CAQvB,IAPA,IAAMmkC,EAAOD,EAAM9b,MACbgc,EAAQF,EAAM9b,MAChBic,EAAqB,EACnBj6B,EAAKjC,EAAgBi8B,GACrB55B,EAAKrC,EAAgBi8B,EAAQ,GAC7B/5B,EAAKlC,EAAgBg8B,GACrB15B,EAAKtC,EAAgBg8B,EAAO,GACzBlkC,EAAImkC,EAAQ/7B,EAAQpI,EAAIkkC,EAAMlkC,GAAKoI,EAAQ,CAClD,IAEMi8B,EAAkBr4B,GAFd9D,EAAgBlI,GAChBkI,EAAgBlI,EAAI,GACuBmK,EAAII,EAAIH,EAAII,GAC7D65B,EAAkBD,IACpBvxB,EAAQ7S,EACRokC,EAAqBC,GAGrBD,EAAqBlF,IACvB8E,GAASnxB,EAAQ1K,GAAUC,GAAU,EACjC+7B,EAAQ/7B,EAASyK,GACnBoxB,EAAM/4B,KAAKi5B,EAAOtxB,GAEhBA,EAAQzK,EAAS87B,GACnBD,EAAM/4B,KAAK2H,EAAOqxB,IAIxB,IAASlkC,EAAI,EAAGA,EAAIF,IAAKE,EACnBgkC,EAAQhkC,KACV8jC,EAA0BC,KACxB77B,EAAgBC,EAASnI,EAAIoI,GAC/B07B,EAA0BC,KACxB77B,EAAgBC,EAASnI,EAAIoI,EAAS,IAG5C,OAAO27B,EAeH,SAAUO,GACdp8B,EACAC,EACA66B,EACA56B,EACA82B,EACA4E,EACAC,EACAQ,GAEA,IAAK,IAAIvkC,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACjB+jC,EAAmBF,GACjB37B,EACAC,EACAhI,EACAiI,EACA82B,EACA4E,EACAC,GAEFQ,EAAer5B,KAAK64B,GACpB57B,EAAShI,EAEX,OAAO4jC,EAwGH,SAAUS,GAAK79B,EAAO85B,GAC1B,OAAOA,EAAYp7B,KAAK0H,MAAMpG,EAAQ85B,GAsBlC,SAAUgE,GACdv8B,EACAC,EACAhI,EACAiI,EACAq4B,EACAqD,EACAC,GAGA,GAAI57B,GAAUhI,EACZ,OAAO4jC,EAGT,IAQI35B,EAAII,EARJL,EAAKq6B,GAAKt8B,EAAgBC,GAASs4B,GACnCl2B,EAAKi6B,GAAKt8B,EAAgBC,EAAS,GAAIs4B,GAC3Ct4B,GAAUC,EAEV07B,EAA0BC,KAAsB55B,EAChD25B,EAA0BC,KAAsBx5B,EAIhD,GAIE,GAHAH,EAAKo6B,GAAKt8B,EAAgBC,GAASs4B,GACnCj2B,EAAKg6B,GAAKt8B,EAAgBC,EAAS,GAAIs4B,IACvCt4B,GAAUC,IACIjI,EAOZ,OAFA2jC,EAA0BC,KAAsB35B,EAChD05B,EAA0BC,KAAsBv5B,EACzCu5B,QAEF35B,GAAMD,GAAMK,GAAMD,GAC3B,KAAOpC,EAAShI,GAAK,CAEnB,IAAMkK,EAAKm6B,GAAKt8B,EAAgBC,GAASs4B,GACnCh2B,EAAK+5B,GAAKt8B,EAAgBC,EAAS,GAAIs4B,GAG7C,GAFAt4B,GAAUC,EAENiC,GAAMD,GAAMK,GAAMD,EAAtB,CAIA,IAAM3F,EAAMuF,EAAKD,EACXrF,EAAM0F,EAAKD,EAEXrF,EAAMmF,EAAKF,EACXhF,EAAMsF,EAAKF,EAKf1F,EAAMM,GAAOL,EAAMI,IACjBL,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,KACzDC,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,IAG3DsF,EAAKC,EACLG,EAAKC,IAMPq5B,EAA0BC,KAAsB35B,EAChD05B,EAA0BC,KAAsBv5B,EAChDL,EAAKC,EACLG,EAAKC,EACLJ,EAAKC,EACLG,EAAKC,IAKP,OAFAq5B,EAA0BC,KAAsB35B,EAChD05B,EAA0BC,KAAsBv5B,EACzCu5B,EAeH,SAAUW,GACdx8B,EACAC,EACA66B,EACA56B,EACAq4B,EACAqD,EACAC,EACAQ,GAEA,IAAK,IAAIvkC,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACjB+jC,EAAmBU,GACjBv8B,EACAC,EACAhI,EACAiI,EACAq4B,EACAqD,EACAC,GAEFQ,EAAer5B,KAAK64B,GACpB57B,EAAShI,EAEX,OAAO4jC,ECvaH,SAAUY,GACdz8B,EACAC,EACAhI,EACAiI,EACAw8B,GAIA,IAFA,IAAMv+B,OAAkC2I,IAApB41B,EAAgCA,EAAkB,GAClE5kC,EAAI,EACCue,EAAIpW,EAAQoW,EAAIpe,EAAKoe,GAAKnW,EACjC/B,EAAYrG,KAAOkI,EAAgBpB,MAAMyX,EAAGA,EAAInW,GAGlD,OADA/B,EAAYtG,OAASC,EACdqG,EAWH,SAAUw+B,GACd38B,EACAC,EACA66B,EACA56B,EACA08B,GAIA,IAFA,IAAMpB,OAAoC10B,IAArB81B,EAAiCA,EAAmB,GACrE9kC,EAAI,EACCue,EAAI,EAAGqlB,EAAKZ,EAAKjjC,OAAQwe,EAAIqlB,IAAMrlB,EAAG,CAC7C,IAAMpe,EAAM6iC,EAAKzkB,GACjBmlB,EAAa1jC,KAAO2kC,GAClBz8B,EACAC,EACAhI,EACAiI,EACAs7B,EAAa1jC,IAEfmI,EAAShI,EAGX,OADAujC,EAAa3jC,OAASC,EACf0jC,EAYH,SAAUqB,GACd78B,EACAC,EACA68B,EACA58B,EACA68B,GAKA,IAHA,IAAMC,OACkBl2B,IAAtBi2B,EAAkCA,EAAoB,GACpDjlC,EAAI,EACCue,EAAI,EAAGqlB,EAAKoB,EAAMjlC,OAAQwe,EAAIqlB,IAAMrlB,EAAG,CAC9C,IAAMykB,EAAOgC,EAAMzmB,GACnB2mB,EAAcllC,KAAO6kC,GACnB38B,EACAC,EACA66B,EACA56B,EACA88B,EAAcllC,IAEhBmI,EAAS66B,EAAKA,EAAKjjC,OAAS,GAG9B,OADAmlC,EAAcnlC,OAASC,EAChBklC,EChFH,SAAUC,GAAWj9B,EAAiBC,EAAQhI,EAAKiI,GAIvD,IAHA,IAAIg9B,EAAY,EACZj7B,EAAKjC,EAAgB/H,EAAMiI,GAC3BmC,EAAKrC,EAAgB/H,EAAMiI,EAAS,GACjCD,EAAShI,EAAKgI,GAAUC,EAAQ,CACrC,IAAMgC,EAAKlC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GACpCi9B,GAAa76B,EAAKH,EAAKD,EAAKK,EAC5BL,EAAKC,EACLG,EAAKC,EAEP,OAAO46B,EAAY,EAUf,SAAUC,GAAYn9B,EAAiBC,EAAQ66B,EAAM56B,GAEzD,IADA,IAAIY,EAAO,EACFhJ,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACjBgJ,GAAQm8B,GAAWj9B,EAAiBC,EAAQhI,EAAKiI,GACjDD,EAAShI,EAEX,OAAO6I,geCsJTs8B,GAzKA,SAAAniC,GAME,SAAAoiC,EAAYl/B,EAAa87B,GAAzB,IAAA7+B,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAKkiC,WAAY,EAMjBliC,EAAKmiC,mBAAoB,OAENz2B,IAAfmzB,GAA6B3hC,MAAMC,QAAQ4F,EAAY,IAMzD/C,EAAK4+B,eAED77B,EAEF87B,GATF7+B,EAAK2+B,mBACHE,EAC8B97B,KA+ItC,OAvKyBq/B,GAAAH,EAAApiC,GAyCvBoiC,EAAAtmC,UAAAogC,MAAA,WACE,OAAO,IAAIkG,EAAWxmC,KAAKmJ,gBAAgBpB,QAAS/H,KAAKoiC,SAU3DoE,EAAAtmC,UAAAygC,eAAA,SAAeh7B,EAAGC,EAAGg7B,EAAcC,GACjC,OAAIA,EAAqB74B,EAAyBhI,KAAKyY,YAAa9S,EAAGC,GAC9Di7B,GAEL7gC,KAAK0mC,mBAAqB1mC,KAAKoV,gBACjCpV,KAAKymC,UAAYngC,KAAKutB,KACpBiQ,GACE9jC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACL,IAGJrJ,KAAK0mC,kBAAoB1mC,KAAKoV,eAEzB8uB,GACLlkC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACLrJ,KAAKymC,WACL,EACA9gC,EACAC,EACAg7B,EACAC,KASJ2F,EAAAtmC,UAAA0mC,QAAA,WACE,OAAOR,GACLpmC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,SASTm9B,EAAAtmC,UAAA0iC,eAAA,WACE,OAAOgD,GACL5lC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,SASTm9B,EAAAtmC,UAAA+iC,8BAAA,SAA8B9C,GAC5B,IAAM4E,EAA4B,GAUlC,OATAA,EAA0B/jC,OAAS8jC,GACjC9kC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACL82B,EACA4E,EACA,GAEK,IAAIyB,EAAWzB,EAA2BlG,KAQnD2H,EAAAtmC,UAAAyhC,QAAA,WACE,OAAO7N,IAST0S,EAAAtmC,UAAA0hC,iBAAA,SAAiBr6B,GACf,OAAO,GASTi/B,EAAAtmC,UAAAijC,eAAA,SAAe77B,EAAa87B,GAC1BpjC,KAAKqjC,UAAUD,EAAY97B,EAAa,GACnCtH,KAAKmJ,kBACRnJ,KAAKmJ,gBAAkB,IAEzBnJ,KAAKmJ,gBAAgBnI,OAASyjC,GAC5BzkC,KAAKmJ,gBACL,EACA7B,EACAtH,KAAKqJ,QAEPrJ,KAAKmV,WAETqxB,EAvKA,CAAyBK,GAAA5hC,ghBCLzB6hC,GAAA,SAAA1iC,GAKE,SAAA2iC,EAAYz/B,EAAa87B,GAAzB,IAAA7+B,EACEH,EAAAM,KAAA1E,OAAOA,YACPuE,EAAK4+B,eAAe77B,EAAa87B,KAgGrC,OAvGoB4D,GAAAD,EAAA3iC,GAelB2iC,EAAA7mC,UAAAogC,MAAA,WACE,IAAMjJ,EAAQ,IAAI0P,EAAM/mC,KAAKmJ,gBAAgBpB,QAAS/H,KAAKoiC,QAE3D,OADA/K,EAAM1gB,gBAAgB3W,MACfq3B,GAUT0P,EAAA7mC,UAAAygC,eAAA,SAAeh7B,EAAGC,EAAGg7B,EAAcC,GACjC,IAAM13B,EAAkBnJ,KAAKmJ,gBACvBm7B,EAAkBn3B,GACtBxH,EACAC,EACAuD,EAAgB,GAChBA,EAAgB,IAElB,GAAIm7B,EAAkBzD,EAAoB,CAExC,IADA,IAAMx3B,EAASrJ,KAAKqJ,OACXpI,EAAI,EAAGA,EAAIoI,IAAUpI,EAC5B2/B,EAAa3/B,GAAKkI,EAAgBlI,GAGpC,OADA2/B,EAAa5/B,OAASqI,EACfi7B,EAEP,OAAOzD,GASXkG,EAAA7mC,UAAA0iC,eAAA,WACE,OAAQ5iC,KAAKmJ,gBAAuBnJ,KAAKmJ,gBAAgBpB,QAA1B,IAQjCg/B,EAAA7mC,UAAAkhC,cAAA,SAAc75B,GACZ,O/D2JyC7B,E+D3JL1F,KAAKmJ,gB/D2JYtB,E+D3JKN,E/D4JtD5B,EAAID,EAAW,GACfE,EAAIF,EAAW,GACdqD,GAAepD,EAAGC,EAAGD,EAAGC,EAAGiC,GAH9B,IAAuCnC,EAAYmC,EACjDlC,EACAC,G+DrJNmhC,EAAA7mC,UAAAyhC,QAAA,WACE,OAAO7N,IASTiT,EAAA7mC,UAAA0hC,iBAAA,SAAiBr6B,GACf,OAAOa,EAAWb,EAAQvH,KAAKmJ,gBAAgB,GAAInJ,KAAKmJ,gBAAgB,KAQ1E49B,EAAA7mC,UAAAijC,eAAA,SAAe77B,EAAa87B,GAC1BpjC,KAAKqjC,UAAUD,EAAY97B,EAAa,GACnCtH,KAAKmJ,kBACRnJ,KAAKmJ,gBAAkB,IAEzBnJ,KAAKmJ,gBAAgBnI,OLnGnB,SAA4BmI,EAAiBC,EAAQ1D,EAAY2D,GACrE,IAAK,IAAIpI,EAAI,EAAGwG,EAAK/B,EAAW1E,OAAQC,EAAIwG,IAAMxG,EAChDkI,EAAgBC,KAAY1D,EAAWzE,GAEzC,OAAOmI,EK+FyB69B,CAC5BjnC,KAAKmJ,gBACL,EACA7B,EACAtH,KAAKqJ,QAEPrJ,KAAKmV,WAET4xB,EAvGA,CAAoBF,GAAA5hC,SAyGpBiiC,GAAeJ,GC3GT,SAAUK,GACdh+B,EACAC,EACAhI,EACAiI,EACA9B,GAmBA,OAjBgBkC,GACdlC,GAKA,SAAU7B,GACR,OAAQ0hC,GACNj+B,EACAC,EACAhI,EACAiI,EACA3D,EAAW,GACXA,EAAW,OAgBb,SAAU0hC,GACdj+B,EACAC,EACAhI,EACAiI,EACA1D,EACAC,GAYA,IAHA,IAAIyhC,EAAK,EACLj8B,EAAKjC,EAAgB/H,EAAMiI,GAC3BmC,EAAKrC,EAAgB/H,EAAMiI,EAAS,GACjCD,EAAShI,EAAKgI,GAAUC,EAAQ,CACrC,IAAMgC,EAAKlC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GAChCoC,GAAM5F,EACJ6F,EAAK7F,IAAMyF,EAAKD,IAAOxF,EAAI4F,IAAO7F,EAAIyF,IAAOK,EAAKD,GAAM,GAC1D67B,IAEO57B,GAAM7F,IAAMyF,EAAKD,IAAOxF,EAAI4F,IAAO7F,EAAIyF,IAAOK,EAAKD,GAAM,GAClE67B,IAEFj8B,EAAKC,EACLG,EAAKC,EAEP,OAAc,IAAP47B,EAYH,SAAUC,GACdn+B,EACAC,EACA66B,EACA56B,EACA1D,EACAC,GAEA,GAAoB,IAAhBq+B,EAAKjjC,OACP,OAAO,EAET,IAAKomC,GAAqBj+B,EAAiBC,EAAQ66B,EAAK,GAAI56B,EAAQ1D,EAAGC,GACrE,OAAO,EAET,IAAK,IAAI3E,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAC1C,GACEmmC,GAAqBj+B,EAAiB86B,EAAKhjC,EAAI,GAAIgjC,EAAKhjC,GAAIoI,EAAQ1D,EAAGC,GAEvE,OAAO,EAGX,OAAO,EC9FH,SAAU2hC,GACdp+B,EACAC,EACA66B,EACA56B,EACAm+B,EACAC,EACA1I,GAOA,IALA,IAAI99B,EAAGwG,EAAI9B,EAAGyF,EAAIC,EAAIG,EAAIC,EACpB7F,EAAI4hC,EAAYC,EAAoB,GAEpCC,EAAgB,GAEbh6B,EAAI,EAAGi6B,EAAK1D,EAAKjjC,OAAQ0M,EAAIi6B,IAAMj6B,EAAG,CAC7C,IAAMtM,EAAM6iC,EAAKv2B,GAGjB,IAFAtC,EAAKjC,EAAgB/H,EAAMiI,GAC3BmC,EAAKrC,EAAgB/H,EAAMiI,EAAS,GAC/BpI,EAAImI,EAAQnI,EAAIG,EAAKH,GAAKoI,EAC7BgC,EAAKlC,EAAgBlI,GACrBwK,EAAKtC,EAAgBlI,EAAI,IACpB2E,GAAK4F,GAAMC,GAAM7F,GAAO4F,GAAM5F,GAAKA,GAAK6F,KAC3C9F,GAAMC,EAAI4F,IAAOC,EAAKD,IAAQH,EAAKD,GAAMA,EACzCs8B,EAAcv7B,KAAKxG,IAErByF,EAAKC,EACLG,EAAKC,EAKT,IAAIm8B,EAAS1G,IACT2G,GAAoB/+B,EAAAA,EAGxB,IAFA4+B,EAAcxnB,KAAK7f,GACnB+K,EAAKs8B,EAAc,GACdzmC,EAAI,EAAGwG,EAAKigC,EAAc1mC,OAAQC,EAAIwG,IAAMxG,EAAG,CAClDoK,EAAKq8B,EAAczmC,GACnB,IAAM6mC,EAAgBxhC,KAAKspB,IAAIvkB,EAAKD,GAChC08B,EAAgBD,GAEdP,GAAsBn+B,EAAiBC,EAAQ66B,EAAM56B,EADzD1D,GAAKyF,EAAKC,GAAM,EACoDzF,KAClEgiC,EAASjiC,EACTkiC,EAAmBC,GAGvB18B,EAAKC,EAOP,OALIqZ,MAAMkjB,KAGRA,EAASJ,EAAYC,IAEnB1I,GACFA,EAAS5yB,KAAKy7B,EAAQhiC,EAAGiiC,GAClB9I,GAEA,CAAC6I,EAAQhiC,EAAGiiC,GC1DjB,SAAUE,GAAQ5+B,EAAiBC,EAAQhI,EAAKiI,EAAQK,GAC5D,IAAIs+B,EAEJ,IADA5+B,GAAUC,EACHD,EAAShI,EAAKgI,GAAUC,EAK7B,GAJA2+B,EAAMt+B,EACJP,EAAgBpB,MAAMqB,EAASC,EAAQD,GACvCD,EAAgBpB,MAAMqB,EAAQA,EAASC,IAGvC,OAAO2+B,EAGX,OAAO,ECRH,SAAUC,GACd9+B,EACAC,EACAhI,EACAiI,EACA9B,GAEA,IAAM2gC,EAAoBh/B,GnEuKnB,CAACJ,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,GmErKrCK,EACAC,EACAhI,EACAiI,GAEF,QAAKwC,GAAWtE,EAAQ2gC,OAGpB7/B,EAAed,EAAQ2gC,KAGvBA,EAAkB,IAAM3gC,EAAO,IAAM2gC,EAAkB,IAAM3gC,EAAO,KAGpE2gC,EAAkB,IAAM3gC,EAAO,IAAM2gC,EAAkB,IAAM3gC,EAAO,IAGjEwgC,GACL5+B,EACAC,EACAhI,EACAiI,GAOA,SAAU8+B,EAAQC,GAChB,OnE8pBA,SAA4B7gC,EAAQ8gC,EAAOjnC,GAC/C,IAAIyK,GAAa,EACXy8B,EAAW9/B,GAAuBjB,EAAQ8gC,GAC1CE,EAAS//B,GAAuBjB,EAAQnG,GAC9C,GACEknC,IAAalhC,GACbmhC,IAAWnhC,EAEXyE,GAAa,MACR,CACL,IAAMpD,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACdqB,EAAOrB,EAAO,GACdihC,EAASH,EAAM,GACfI,EAASJ,EAAM,GACfK,EAAOtnC,EAAI,GACXunC,EAAOvnC,EAAI,GACXwnC,GAASD,EAAOF,IAAWC,EAAOF,GACpC7iC,OAAC,EAAEC,OAAC,EACD2iC,EAASnhC,KAAyBkhC,EAAWlhC,KAGlDyE,GADAlG,EAAI+iC,GAAQC,EAAO//B,GAAQggC,IACTngC,GAAQ9C,GAAKgD,GAG9BkD,KACE08B,EAASnhC,IACVkhC,EAAWlhC,IAIbyE,GADAjG,EAAI+iC,GAAQD,EAAO//B,GAAQigC,IACTlgC,GAAQ9C,GAAKgD,GAG9BiD,KACE08B,EAASnhC,IACVkhC,EAAWlhC,IAIbyE,GADAlG,EAAI+iC,GAAQC,EAAOjgC,GAAQkgC,IACTngC,GAAQ9C,GAAKgD,GAG9BkD,KACE08B,EAASnhC,IACVkhC,EAAWlhC,IAIbyE,GADAjG,EAAI+iC,GAAQD,EAAOjgC,GAAQmgC,IACTlgC,GAAQ9C,GAAKgD,GAGnC,OAAOiD,EmEntBIg9B,CAAkBthC,EAAQ4gC,EAAQC,SA4GzC,SAAUU,GACd3/B,EACAC,EACA66B,EACA56B,EACA9B,GAEA,IA5EI,SACJ4B,EACAC,EACAhI,EACAiI,EACA9B,GAEA,SAAI0gC,GAAqB9+B,EAAiBC,EAAQhI,EAAKiI,EAAQ9B,IAI7D6/B,GACEj+B,EACAC,EACAhI,EACAiI,EACA9B,EAAO,GACPA,EAAO,KAMT6/B,GACEj+B,EACAC,EACAhI,EACAiI,EACA9B,EAAO,GACPA,EAAO,KAMT6/B,GACEj+B,EACAC,EACAhI,EACAiI,EACA9B,EAAO,GACPA,EAAO,KAMT6/B,GACEj+B,EACAC,EACAhI,EACAiI,EACA9B,EAAO,GACPA,EAAO,KAuBNwhC,CAAqB5/B,EAAiBC,EAAQ66B,EAAK,GAAI56B,EAAQ9B,GAClE,OAAO,EAET,GAAoB,IAAhB08B,EAAKjjC,OACP,OAAO,EAET,IAAK,IAAIC,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAC1C,GACEkmC,GACEh+B,EACA86B,EAAKhjC,EAAI,GACTgjC,EAAKhjC,GACLoI,EACA9B,KAIC0gC,GACC9+B,EACA86B,EAAKhjC,EAAI,GACTgjC,EAAKhjC,GACLoI,EACA9B,GAGF,OAAO,EAIb,OAAO,ECjMH,SAAUyhC,GAAY7/B,EAAiBC,EAAQhI,EAAKiI,GACxD,KAAOD,EAAShI,EAAMiI,GAAQ,CAC5B,IAAK,IAAIpI,EAAI,EAAGA,EAAIoI,IAAUpI,EAAG,CAC/B,IAAMI,EAAM8H,EAAgBC,EAASnI,GACrCkI,EAAgBC,EAASnI,GAAKkI,EAAgB/H,EAAMiI,EAASpI,GAC7DkI,EAAgB/H,EAAMiI,EAASpI,GAAKI,EAEtC+H,GAAUC,EACVjI,GAAOiI,GCHL,SAAU4/B,GAAsB9/B,EAAiBC,EAAQhI,EAAKiI,GAMlE,IAHA,IAAI6/B,EAAO,EACP99B,EAAKjC,EAAgB/H,EAAMiI,GAC3BmC,EAAKrC,EAAgB/H,EAAMiI,EAAS,GACjCD,EAAShI,EAAKgI,GAAUC,EAAQ,CACrC,IAAMgC,EAAKlC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GACpC8/B,IAAS79B,EAAKD,IAAOK,EAAKD,GAC1BJ,EAAKC,EACLG,EAAKC,EAEP,OAAgB,IAATy9B,OAAaj5B,EAAYi5B,EAAO,EAgBnC,SAAUC,GACdhgC,EACAC,EACA66B,EACA56B,EACA+/B,GAGA,IADA,IAAMC,OAAsBp5B,IAAdm5B,GAA0BA,EAC/BnoC,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACXqoC,EAAcL,GAClB9/B,EACAC,EACAhI,EACAiI,GAEF,GAAU,IAANpI,GACF,GAAKooC,GAASC,IAAkBD,IAAUC,EACxC,OAAO,OAGT,GAAKD,IAAUC,IAAkBD,GAASC,EACxC,OAAO,EAGXlgC,EAAShI,EAEX,OAAO,EAkDH,SAAUmoC,GACdpgC,EACAC,EACA66B,EACA56B,EACA+/B,GAGA,IADA,IAAMC,OAAsBp5B,IAAdm5B,GAA0BA,EAC/BnoC,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACXqoC,EAAcL,GAClB9/B,EACAC,EACAhI,EACAiI,IAGM,IAANpI,EACKooC,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1CN,GAAmB7/B,EAAiBC,EAAQhI,EAAKiI,GAEnDD,EAAShI,EAEX,OAAOgI,geCtHTogC,GAAA,SAAAplC,GAYE,SAAAqlC,EAAYniC,EAAa87B,EAAYwB,GAArC,IAAArgC,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAKmlC,MAAQ,GAMbnlC,EAAKolC,4BAA6B,EAMlCplC,EAAKqlC,mBAAqB,KAM1BrlC,EAAKkiC,WAAY,EAMjBliC,EAAKmiC,mBAAoB,EAMzBniC,EAAKslC,mBAAoB,EAMzBtlC,EAAKulC,yBAA2B,UAEb75B,IAAfmzB,GAA4BwB,GAC9BrgC,EAAK2+B,mBACHE,EAC8B97B,GAEhC/C,EAAKmlC,MAAQ9E,GAEbrgC,EAAK4+B,eAED77B,EAEF87B,KAyTR,OA7XsB2G,GAAAN,EAAArlC,GA8EpBqlC,EAAAvpC,UAAA8pC,iBAAA,SAAiBC,GACVjqC,KAAKmJ,gBAGR7H,EAAOtB,KAAKmJ,gBAAiB8gC,EAAW1H,sBAFxCviC,KAAKmJ,gBAAkB8gC,EAAW1H,qBAAqBx6B,QAIzD/H,KAAK0pC,MAAMv9B,KAAKnM,KAAKmJ,gBAAgBnI,QACrChB,KAAKmV,WAQPs0B,EAAAvpC,UAAAogC,MAAA,WACE,IAAM4J,EAAU,IAAIT,EAClBzpC,KAAKmJ,gBAAgBpB,QACrB/H,KAAKoiC,OACLpiC,KAAK0pC,MAAM3hC,SAGb,OADAmiC,EAAQvzB,gBAAgB3W,MACjBkqC,GAUTT,EAAAvpC,UAAAygC,eAAA,SAAeh7B,EAAGC,EAAGg7B,EAAcC,GACjC,OAAIA,EAAqB74B,EAAyBhI,KAAKyY,YAAa9S,EAAGC,GAC9Di7B,GAEL7gC,KAAK0mC,mBAAqB1mC,KAAKoV,gBACjCpV,KAAKymC,UAAYngC,KAAKutB,KACpBmQ,GACEhkC,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,OACL,IAGJrJ,KAAK0mC,kBAAoB1mC,KAAKoV,eAEzBovB,GACLxkC,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,OACLrJ,KAAKymC,WACL,EACA9gC,EACAC,EACAg7B,EACAC,KASJ4I,EAAAvpC,UAAA4gC,WAAA,SAAWn7B,EAAGC,GACZ,OAAO0hC,GACLtnC,KAAKmqC,6BACL,EACAnqC,KAAK0pC,MACL1pC,KAAKqJ,OACL1D,EACAC,IASJ6jC,EAAAvpC,UAAA0mC,QAAA,WACE,OAAON,GACLtmC,KAAKmqC,6BACL,EACAnqC,KAAK0pC,MACL1pC,KAAKqJ,SAiBTogC,EAAAvpC,UAAA0iC,eAAA,SAAewG,GACb,IAAIjgC,EAQJ,YAPkB8G,IAAdm5B,EAEFG,GADApgC,EAAkBnJ,KAAKmqC,6BAA6BpiC,QACjB,EAAG/H,KAAK0pC,MAAO1pC,KAAKqJ,OAAQ+/B,GAE/DjgC,EAAkBnJ,KAAKmJ,gBAGlB28B,GAAwB38B,EAAiB,EAAGnJ,KAAK0pC,MAAO1pC,KAAKqJ,SAMtEogC,EAAAvpC,UAAAkqC,QAAA,WACE,OAAOpqC,KAAK0pC,OAMdD,EAAAvpC,UAAAmqC,qBAAA,WACE,GAAIrqC,KAAK2pC,4BAA8B3pC,KAAKoV,cAAe,CACzD,IAAMk1B,EAAajgC,GAAUrK,KAAKyY,aAClCzY,KAAK4pC,mBAAqBrC,GACxBvnC,KAAKmqC,6BACL,EACAnqC,KAAK0pC,MACL1pC,KAAKqJ,OACLihC,EACA,GAEFtqC,KAAK2pC,2BAA6B3pC,KAAKoV,cAEzC,OAAOpV,KAAK4pC,oBASdH,EAAAvpC,UAAAqqC,iBAAA,WACE,OAAO,IAAIC,GAAAvlC,QAAMjF,KAAKqqC,uBAAwBxL,KAUhD4K,EAAAvpC,UAAAuqC,mBAAA,WACE,OAAOzqC,KAAK0pC,MAAM1oC,QAapByoC,EAAAvpC,UAAAwqC,cAAA,SAAc52B,GACZ,OAAIA,EAAQ,GAAK9T,KAAK0pC,MAAM1oC,QAAU8S,EAC7B,KAEF,IAAI62B,GAAA1lC,QACTjF,KAAKmJ,gBAAgBpB,MACT,IAAV+L,EAAc,EAAI9T,KAAK0pC,MAAM51B,EAAQ,GACrC9T,KAAK0pC,MAAM51B,IAEb9T,KAAKoiC,SASTqH,EAAAvpC,UAAA0qC,eAAA,WAME,IALA,IAAMxI,EAASpiC,KAAKoiC,OACdj5B,EAAkBnJ,KAAKmJ,gBACvB86B,EAAOjkC,KAAK0pC,MACZmB,EAAc,GAChBzhC,EAAS,EACJnI,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACXgpC,EAAa,IAAIU,GAAA1lC,QACrBkE,EAAgBpB,MAAMqB,EAAQhI,GAC9BghC,GAEFyI,EAAY1+B,KAAK89B,GACjB7gC,EAAShI,EAEX,OAAOypC,GAMTpB,EAAAvpC,UAAAiqC,2BAAA,WACE,GAAInqC,KAAK6pC,mBAAqB7pC,KAAKoV,cAAe,CAChD,IAAMjM,EAAkBnJ,KAAKmJ,gBACzBggC,GAAuBhgC,EAAiB,EAAGnJ,KAAK0pC,MAAO1pC,KAAKqJ,QAC9DrJ,KAAK8pC,yBAA2B3gC,GAEhCnJ,KAAK8pC,yBAA2B3gC,EAAgBpB,QAChD/H,KAAK8pC,yBAAyB9oC,OAASuoC,GACrCvpC,KAAK8pC,yBACL,EACA9pC,KAAK0pC,MACL1pC,KAAKqJ,SAGTrJ,KAAK6pC,kBAAoB7pC,KAAKoV,cAEhC,OAAOpV,KAAK8pC,0BAQdL,EAAAvpC,UAAA+iC,8BAAA,SAA8B9C,GAC5B,IAAM4E,EAA4B,GAC5BS,EAAiB,GAWvB,OAVAT,EAA0B/jC,OAAS2kC,GACjC3lC,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,OACL/C,KAAKutB,KAAKsM,GACV4E,EACA,EACAS,GAEK,IAAIiE,EACT1E,EACAlG,GACA2G,IASJiE,EAAAvpC,UAAAyhC,QAAA,WACE,OAAO7N,IAST2V,EAAAvpC,UAAA0hC,iBAAA,SAAiBr6B,GACf,OAAOuhC,GACL9oC,KAAKmqC,6BACL,EACAnqC,KAAK0pC,MACL1pC,KAAKqJ,OACL9B,IAUJkiC,EAAAvpC,UAAAijC,eAAA,SAAe77B,EAAa87B,GAC1BpjC,KAAKqjC,UAAUD,EAAY97B,EAAa,GACnCtH,KAAKmJ,kBACRnJ,KAAKmJ,gBAAkB,IAEzB,IAAM86B,EAAOS,GACX1kC,KAAKmJ,gBACL,EACA7B,EACAtH,KAAKqJ,OACLrJ,KAAK0pC,OAEP1pC,KAAKmJ,gBAAgBnI,OAAyB,IAAhBijC,EAAKjjC,OAAe,EAAIijC,EAAKA,EAAKjjC,OAAS,GACzEhB,KAAKmV,WAETs0B,EA7XA,CAAsB5C,GAAA5hC,SA+XtB6lC,GAAetB,GAcT,SAAUuB,GAAStgC,EAAQuuB,EAAQgS,EAAOC,GAI9C,IAHA,IAAMlqC,EAAIiqC,GAAgB,GAEpB7hC,EAAkB,GACflI,EAAI,EAAGA,EAAIF,IAAKE,EACvBK,EACE6H,EACAmwB,GAAa7uB,EAAQuuB,EAAS,EAAI1yB,KAAKgH,GAAKrM,EAAKF,EAAGkqC,IAIxD,OADA9hC,EAAgBgD,KAAKhD,EAAgB,GAAIA,EAAgB,IAClD,IAAIqgC,GAAQrgC,EAAiB01B,GAAmB,CACrD11B,EAAgBnI,SAUd,SAAUkqC,GAAW3jC,GACzB,IAAMkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACdqB,EAAOrB,EAAO,GACd4B,EAAkB,CACtBV,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,GAEF,OAAO,IAAI8gC,GAAQrgC,EAAiB01B,GAAmB,CACrD11B,EAAgBnI,SAad,SAAUmqC,GAAWC,EAAQC,EAAWC,GAO5C,IANA,IAAMC,EAAQF,GAAwB,GAChChiC,EAAS+hC,EAAO5I,YAChBJ,EAASgJ,EAAOrI,YAChBt4B,EAAS2gC,EAAOI,YAChBC,EAAcpiC,GAAUkiC,EAAQ,GAChCpiC,EAAkB,IAAI1H,MAAMgqC,GACzBxqC,EAAI,EAAGA,EAAIwqC,EAAaxqC,GAAKoI,EAAQ,CAC5CF,EAAgBlI,GAAK,EACrBkI,EAAgBlI,EAAI,GAAK,EACzB,IAAK,IAAIue,EAAI,EAAGA,EAAInW,EAAQmW,IAC1BrW,EAAgBlI,EAAIue,GAAK/U,EAAO+U,GAGpC,IAAMykB,EAAO,CAAC96B,EAAgBnI,QACxBkpC,EAAU,IAAIV,GAAQrgC,EAAiBi5B,EAAQ6B,GAErD,OADAyH,GAAYxB,EAASz/B,EAAQ2gC,EAAOO,YAAaL,GAC1CpB,EAWH,SAAUwB,GAAYxB,EAASz/B,EAAQuuB,EAAQsS,GAKnD,IAJA,IAAMniC,EAAkB+gC,EAAQ3H,qBAC1Bl5B,EAAS6gC,EAAQ1H,YACjB+I,EAAQpiC,EAAgBnI,OAASqI,EAAS,EAC1CuiC,EAAaN,GAAwB,EAClCrqC,EAAI,EAAGA,GAAKsqC,IAAStqC,EAAG,CAC/B,IAAMmI,EAASnI,EAAIoI,EACbnD,EAAQ0lC,EAAiC,EAAnBn+B,GAAOxM,EAAGsqC,GAAajlC,KAAKgH,GAAMi+B,EAC9DpiC,EAAgBC,GAAUqB,EAAO,GAAKuuB,EAAS1yB,KAAKC,IAAIL,GACxDiD,EAAgBC,EAAS,GAAKqB,EAAO,GAAKuuB,EAAS1yB,KAAKD,IAAIH,GAE9DgkC,EAAQ/0B,weCnNV02B,GAAA,SAAAznC,GAIE,SAAA0nC,EAAYjjB,GAAZ,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,KAKPuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAEL,IAAMpR,EAAUgO,GAAO,GAAIkX,UAM3BtkB,EAAKwnC,OAAS,CAAC,EAAG,GAMlBxnC,EAAKynC,YAAc,GAMnBznC,EAAK0nC,oBAOL1nC,EAAK2nC,YAAcjR,GAAiBt3B,EAAQ6Z,WAAY,aAMxDjZ,EAAK4nC,cAAgB,CAAC,IAAK,KAM3B5nC,EAAK6nC,cAAgB,KAMrB7nC,EAAK8nC,kBAML9nC,EAAK+nC,gBAML/nC,EAAKgoC,YAAc,KAMnBhoC,EAAKioC,gBAMLjoC,EAAKkoC,cAMLloC,EAAKmoC,mBAAgBz8B,EAEjBtM,EAAQ6Z,YACVsc,KAEEn2B,EAAQ8G,SACV9G,EAAQ8G,OAAS2xB,GAAmBz4B,EAAQ8G,OAAQlG,EAAK2nC,cAEvDvoC,EAAQ4D,SACV5D,EAAQ4D,OAASg1B,GAAe54B,EAAQ4D,OAAQhD,EAAK2nC,cAGvD3nC,EAAKooC,cAAchpC,KAm9CvB,OA9jDmBipC,GAAAd,EAAA1nC,GAkHjB0nC,EAAA5rC,UAAAysC,cAAA,SAAchpC,GACZ,IAAMwT,EAAaxF,GAAO,GAAIhO,GAC9B,IAAK,IAAM2L,KAAOolB,UACTvd,EAAW7H,GAEpBtP,KAAKiW,cAAckB,GAAY,GAE/B,IAAM01B,EAA2BC,GAA2BnpC,GAM5D3D,KAAK+sC,eAAiBF,EAAyBt1B,cAM/CvX,KAAKgtC,eAAiBH,EAAyBr1B,cAM/CxX,KAAKitC,YAAcJ,EAAyBK,WAM5CltC,KAAKmtC,aAAexpC,EAAQypC,YAM5BptC,KAAKqtC,SAAW1pC,EAAQqhB,QAMxBhlB,KAAKstC,SAAWT,EAAyBp1B,QAEzC,IAAM81B,EAAmBC,GAAuB7pC,GAC1C8pC,EAAuBZ,EAAyBa,WAChDC,EAAqBC,GAAyBjqC,GAMpD3D,KAAK6tC,aAAe,CAClBpjC,OAAQ8iC,EACR7iC,WAAY+iC,EACZ9iC,SAAUgjC,GAGZ3tC,KAAK8tC,iBAAiC79B,IAArBtM,EAAQgH,SAAyBhH,EAAQgH,SAAW,GACrE3K,KAAK+tC,uBACgB99B,IAAnBtM,EAAQ8G,OAAuB9G,EAAQ8G,OAAS,WAEvBwF,IAAvBtM,EAAQ+G,WACV1K,KAAKguC,cAAcrqC,EAAQ+G,iBACDuF,IAAjBtM,EAAQyW,MACjBpa,KAAKiuC,QAAQtqC,EAAQyW,OAazBxW,OAAAC,eAAIioC,EAAA5rC,UAAA,UAAJ,CAAA4D,IAAA,WACE,OAAO9D,KAAKqtC,UAEdt8B,IAAA,SAAYiU,GACV,IAAIkpB,EAAaluC,KAAKqtC,SACtBrtC,KAAKqtC,SAAWroB,EAChB,IAAMva,EAASzK,KAAKwrC,YACpB,GAAI/gC,EAAQ,CACV,IAAM0jC,EAAanpB,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCkpB,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,IAAMxjC,EAAa1K,KAAKouC,gBAClBC,EACH3jC,EAAa,GACbyjC,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,IACxDG,EACH5jC,EAAa,GACbyjC,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,IAC9DnuC,KAAK+tC,kBAAkB,CAACtjC,EAAO,GAAK4jC,EAAS5jC,EAAO,GAAK6jC,sCAY7DxC,EAAA5rC,UAAAquC,mBAAA,SAAmBC,GACjB,IAAM7qC,EAAU3D,KAAKmW,gBAerB,YAZ2BlG,IAAvBtM,EAAQ+G,WACV/G,EAAQ+G,WAAa1K,KAAKouC,gBAE1BzqC,EAAQyW,KAAOpa,KAAKyuC,UAItB9qC,EAAQ8G,OAASzK,KAAK0uC,oBAGtB/qC,EAAQgH,SAAW3K,KAAK2uC,cAEjBh9B,GAAO,GAAIhO,EAAS6qC,IAoC7B1C,EAAA5rC,UAAA0uC,QAAA,SAAQC,GACF7uC,KAAK8uC,UAAY9uC,KAAK+uC,gBACxB/uC,KAAKgvC,mBAAmB,GAG1B,IADA,IAAMC,EAAO,IAAIxtC,MAAMuQ,UAAUhR,QACxBC,EAAI,EAAGA,EAAIguC,EAAKjuC,SAAUC,EAAG,CACpC,IAAI0C,EAAUqO,UAAU/Q,GACpB0C,EAAQ8G,UACV9G,EAAUgO,GAAO,GAAIhO,IACb8G,OAAS2xB,GACfz4B,EAAQ8G,OACRzK,KAAKkvC,kBAGLvrC,EAAQu7B,UACVv7B,EAAUgO,GAAO,GAAIhO,IACbu7B,OAAS9C,GACfz4B,EAAQu7B,OACRl/B,KAAKkvC,kBAGTD,EAAKhuC,GAAK0C,EAEZ3D,KAAKmvC,gBAAgB5iC,MAAMvM,KAAMivC,IAMnCnD,EAAA5rC,UAAAivC,gBAAA,SAAgBN,GACd,IACInlC,EADA0lC,EAAiBp9B,UAAUhR,OAG7BouC,EAAiB,GACwB,mBAAlCp9B,UAAUo9B,EAAiB,KAElC1lC,EAAWsI,UAAUo9B,EAAiB,KACpCA,GAIJ,IADA,IAAInuC,EAAI,EACDA,EAAImuC,IAAmBpvC,KAAK8uC,UAAW7tC,EAAG,CAE/C,IAAMkX,EAAQnG,UAAU/Q,GACpBkX,EAAM1N,QACRzK,KAAK+tC,kBAAkB51B,EAAM1N,aAEZwF,IAAfkI,EAAMiC,KACRpa,KAAKiuC,QAAQ91B,EAAMiC,MACVjC,EAAMzN,YACf1K,KAAKguC,cAAc71B,EAAMzN,iBAEJuF,IAAnBkI,EAAMxN,UACR3K,KAAK8tC,YAAY31B,EAAMxN,UAG3B,GAAI1J,IAAMmuC,EAAV,CAYA,IALA,IAAI/G,EAAQgH,KAAKC,MACb7kC,EAASzK,KAAKosC,cAAcrkC,QAC5B2C,EAAa1K,KAAKqsC,kBAClB1hC,EAAW3K,KAAKssC,gBACdiD,EAAS,GACRtuC,EAAImuC,IAAkBnuC,EAAG,CAC9B,IAAM0C,EAA2CqO,UAAU/Q,GAErDuuC,EAAY,CAChBnH,MAAOA,EACPoH,UAAU,EACVvQ,OAAQv7B,EAAQu7B,OAChBwQ,cAA+Bz/B,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,IAC9DC,OAAQhsC,EAAQgsC,QAAUrR,GAC1B50B,SAAUA,GAmBZ,GAhBI/F,EAAQ8G,SACV+kC,EAAUI,aAAenlC,EACzB+kC,EAAUK,aAAelsC,EAAQ8G,OAAO1C,QACxC0C,EAAS+kC,EAAUK,mBAGA5/B,IAAjBtM,EAAQyW,MACVo1B,EAAUM,iBAAmBplC,EAC7B8kC,EAAUO,iBAAmB/vC,KAAKgwC,qBAAqBrsC,EAAQyW,MAC/D1P,EAAa8kC,EAAUO,kBACdpsC,EAAQ+G,aACjB8kC,EAAUM,iBAAmBplC,EAC7B8kC,EAAUO,iBAAmBpsC,EAAQ+G,WACrCA,EAAa8kC,EAAUO,uBAGA9/B,IAArBtM,EAAQgH,SAAwB,CAClC6kC,EAAUS,eAAiBtlC,EAC3B,IAAMulC,EACJziC,GAAO9J,EAAQgH,SAAWA,EAAWrE,KAAKgH,GAAI,EAAIhH,KAAKgH,IAAMhH,KAAKgH,GACpEkiC,EAAUW,eAAiBxlC,EAAWulC,EACtCvlC,EAAW6kC,EAAUW,eAInBC,GAAgBZ,GAClBA,EAAUC,UAAW,EAGrBpH,GAASmH,EAAUE,SAErBH,EAAOpjC,KAAKqjC,GAEdxvC,KAAKgsC,YAAY7/B,KAAKojC,GACtBvvC,KAAKqwC,QAAQ5b,GAAoB,GACjCz0B,KAAKswC,yBA1DC5mC,GACF6mC,GAAkB7mC,GAAU,IAiElCoiC,EAAA5rC,UAAA6uC,aAAA,WACE,OAAO/uC,KAAK+rC,OAAOtX,IAAsB,GAQ3CqX,EAAA5rC,UAAAswC,eAAA,WACE,OAAOxwC,KAAK+rC,OAAOtX,IAAwB,GAO7CqX,EAAA5rC,UAAAuwC,iBAAA,WAEE,IAAIvR,EADJl/B,KAAKqwC,QAAQ5b,IAAqBz0B,KAAK+rC,OAAOtX,KAE9C,IAAK,IAAIxzB,EAAI,EAAGwG,EAAKzH,KAAKgsC,YAAYhrC,OAAQC,EAAIwG,IAAMxG,EAAG,CACzD,IAAMsuC,EAASvvC,KAAKgsC,YAAY/qC,GAIhC,GAHIsuC,EAAO,GAAG7lC,UACZ6mC,GAAkBhB,EAAO,GAAG7lC,UAAU,IAEnCw1B,EACH,IAAK,IAAI1f,EAAI,EAAGqlB,EAAK0K,EAAOvuC,OAAQwe,EAAIqlB,IAAMrlB,EAAG,CAC/C,IAAMgwB,EAAYD,EAAO/vB,GACzB,IAAKgwB,EAAUC,SAAU,CACvBvQ,EAASsQ,EAAUtQ,OACnB,QAKRl/B,KAAKgsC,YAAYhrC,OAAS,EAC1BhB,KAAK0sC,cAAgBxN,EACrBl/B,KAAKusC,YAAc,KACnBvsC,KAAKwsC,gBAAkBtL,IACvBlhC,KAAKysC,cAAgBvL,KAMvB4K,EAAA5rC,UAAAowC,kBAAA,WAKE,QAJiCrgC,IAA7BjQ,KAAKisC,sBACPyE,qBAAqB1wC,KAAKisC,qBAC1BjsC,KAAKisC,yBAAsBh8B,GAExBjQ,KAAK+uC,eAAV,CAKA,IAFA,IAAMO,EAAMD,KAAKC,MACbqB,GAAO,EACF1vC,EAAIjB,KAAKgsC,YAAYhrC,OAAS,EAAGC,GAAK,IAAKA,EAAG,CAGrD,IAFA,IAAMsuC,EAASvvC,KAAKgsC,YAAY/qC,GAC5B2vC,GAAiB,EACZpxB,EAAI,EAAGqlB,EAAK0K,EAAOvuC,OAAQwe,EAAIqlB,IAAMrlB,EAAG,CAC/C,IAAMgwB,EAAYD,EAAO/vB,GACzB,IAAIgwB,EAAUC,SAAd,CAGA,IAAMoB,EAAUvB,EAAME,EAAUnH,MAC5ByI,EACFtB,EAAUE,SAAW,EAAImB,EAAUrB,EAAUE,SAAW,EACtDoB,GAAY,GACdtB,EAAUC,UAAW,EACrBqB,EAAW,GAEXF,GAAiB,EAEnB,IAAMG,EAAWvB,EAAUG,OAAOmB,GAClC,GAAItB,EAAUI,aAAc,CAC1B,IAAMzkC,EAAKqkC,EAAUI,aAAa,GAC5BrkC,EAAKikC,EAAUI,aAAa,GAC5BxkC,EAAKokC,EAAUK,aAAa,GAC5BrkC,EAAKgkC,EAAUK,aAAa,GAClC7vC,KAAKusC,YAAciD,EAAUK,aAC7B,IAAMlqC,EAAIwF,EAAK4lC,GAAY3lC,EAAKD,GAC1BvF,EAAI2F,EAAKwlC,GAAYvlC,EAAKD,GAChCvL,KAAKosC,cAAgB,CAACzmC,EAAGC,GAE3B,GAAI4pC,EAAUM,kBAAoBN,EAAUO,iBAAkB,CAC5D,IAAMrlC,EACS,IAAbqmC,EACIvB,EAAUO,iBACVP,EAAUM,iBACViB,GACGvB,EAAUO,iBAAmBP,EAAUM,kBAChD,GAAIN,EAAUtQ,OAAQ,CACpB,IAAMt0B,EAAO5K,KAAKgxC,iBAAiBhxC,KAAK2uC,eAClCsC,EAAwBjxC,KAAK6tC,aAAanjC,WAC9CA,EACA,EACAE,GACA,GAEF5K,KAAKosC,cAAgBpsC,KAAKkxC,oBACxBD,EACAzB,EAAUtQ,QAGdl/B,KAAKwsC,gBAAkBgD,EAAUO,iBACjC/vC,KAAKqsC,kBAAoB3hC,EACzB1K,KAAKmxC,mBAAkB,GAEzB,QAC+BlhC,IAA7Bu/B,EAAUS,qBACmBhgC,IAA7Bu/B,EAAUW,eACV,CACA,IAAMxlC,EACS,IAAbomC,EACItjC,GAAO+hC,EAAUW,eAAiB7pC,KAAKgH,GAAI,EAAIhH,KAAKgH,IACpDhH,KAAKgH,GACLkiC,EAAUS,eACVc,GACGvB,EAAUW,eAAiBX,EAAUS,gBAC9C,GAAIT,EAAUtQ,OAAQ,CACpB,IAAMkS,EAAsBpxC,KAAK6tC,aAAaljC,SAC5CA,GACA,GAEF3K,KAAKosC,cAAgBpsC,KAAKqxC,sBACxBD,EACA5B,EAAUtQ,QAGdl/B,KAAKysC,cAAgB+C,EAAUW,eAC/BnwC,KAAKssC,gBAAkB3hC,EAIzB,GAFA3K,KAAKmxC,mBAAkB,GACvBR,GAAO,GACFnB,EAAUC,SACb,OAGJ,GAAImB,EAAgB,CAClB5wC,KAAKgsC,YAAY/qC,GAAK,KACtBjB,KAAKqwC,QAAQ5b,IAAoB,GACjCz0B,KAAKusC,YAAc,KACnBvsC,KAAKwsC,gBAAkBtL,IACvBlhC,KAAKysC,cAAgBvL,IACrB,IAAMx3B,EAAW6lC,EAAO,GAAG7lC,SACvBA,GACF6mC,GAAkB7mC,GAAU,IAKlC1J,KAAKgsC,YAAchsC,KAAKgsC,YAAYsF,OAAOC,SACvCZ,QAAqC1gC,IAA7BjQ,KAAKisC,sBACfjsC,KAAKisC,oBAAsBuF,sBACzBxxC,KAAKswC,kBAAkBl8B,KAAKpU,UAUlC8rC,EAAA5rC,UAAAmxC,sBAAA,SAAsB1mC,EAAUu0B,GAC9B,IAAIz0B,ErD5zBY/E,EAAYwqC,EqD6zBtBuB,EAAgBzxC,KAAK0uC,oBAM3B,YALsBz+B,IAAlBwhC,IAEFr0B,GADA3S,EAAS,CAACgnC,EAAc,GAAKvS,EAAO,GAAIuS,EAAc,GAAKvS,EAAO,IACzCv0B,EAAW3K,KAAK2uC,erDh0BfuB,EqDi0BJhR,GrDj0BRx5B,EqDi0BA+E,GrDh0BP,KAAOylC,EAAM,GACxBxqC,EAAW,KAAOwqC,EAAM,IqDi0BfzlC,GAQTqhC,EAAA5rC,UAAAgxC,oBAAA,SAAoBxmC,EAAYw0B,GAC9B,IAAIz0B,EACEgnC,EAAgBzxC,KAAK0uC,oBACrBgD,EAAoB1xC,KAAKouC,qBACTn+B,IAAlBwhC,QAAqDxhC,IAAtByhC,IAOjCjnC,EAAS,CALPy0B,EAAO,GACNx0B,GAAcw0B,EAAO,GAAKuS,EAAc,IAAOC,EAEhDxS,EAAO,GACNx0B,GAAcw0B,EAAO,GAAKuS,EAAc,IAAOC,IAGpD,OAAOjnC,GASTqhC,EAAA5rC,UAAA8wC,iBAAA,SAAiBW,GACf,IAAM/mC,EAAO5K,KAAKmsC,cAClB,GAAIwF,EAAc,CAChB,IAAM/rB,EAAIhb,EAAK,GACTib,EAAIjb,EAAK,GACf,MAAO,CACLtE,KAAKspB,IAAIhK,EAAItf,KAAKC,IAAIorC,IACpBrrC,KAAKspB,IAAI/J,EAAIvf,KAAKD,IAAIsrC,IACxBrrC,KAAKspB,IAAIhK,EAAItf,KAAKD,IAAIsrC,IACpBrrC,KAAKspB,IAAI/J,EAAIvf,KAAKC,IAAIorC,KAG1B,OAAO/mC,GAWXkhC,EAAA5rC,UAAA0xC,gBAAA,SAAgBC,GACd7xC,KAAKmsC,cAAgB1qC,MAAMC,QAAQmwC,GAC/BA,EAAS9pC,QACT,CAAC,IAAK,KACL/H,KAAK+uC,gBACR/uC,KAAKgvC,mBAAmB,IAU5BlD,EAAA5rC,UAAAsrC,UAAA,WACE,IAAM/gC,EAASzK,KAAK0uC,oBACpB,OAAKjkC,EAGE0xB,GAAiB1xB,EAAQzK,KAAKkvC,iBAF5BzkC,GASXqhC,EAAA5rC,UAAAwuC,kBAAA,WACE,OACE1uC,KAAK8D,IAAI4wB,GAAaC,SAO1BmX,EAAA5rC,UAAA4xC,eAAA,WACE,OAAO9xC,KAAK6tC,cAMd/B,EAAA5rC,UAAA6xC,uBAAA,WACE,OAAO/xC,KAAK8D,IAAI,wBAOlBgoC,EAAA5rC,UAAA8xC,SAAA,SAASC,GACP,YAAkBhiC,IAAdgiC,GACFA,EAAU,GAAKjyC,KAAK+rC,OAAO,GAC3BkG,EAAU,GAAKjyC,KAAK+rC,OAAO,GACpBkG,GAEAjyC,KAAK+rC,OAAOhkC,SAcvB+jC,EAAA5rC,UAAAgyC,gBAAA,SAAgBL,GAEd,OAAOvV,GADQt8B,KAAKmyC,wBAAwBN,GAChB7xC,KAAKkvC,kBAQnCpD,EAAA5rC,UAAAiyC,wBAAA,SAAwBN,GACtB,IAAMjnC,EAAOinC,GAAY7xC,KAAKoyC,+BACxB3nC,EACJzK,KAAK0uC,oBAEP7pC,EAAO4F,EAAQ,GACf,IAAMC,EAAqC1K,KAAKouC,gBAChDvpC,OAAsBoL,IAAfvF,EAA0B,GACjC,IAAMC,EAAmC3K,KAAK2uC,cAG9C,OAFA9pC,OAAoBoL,IAAbtF,EAAwB,GAExBH,GAAkBC,EAAQC,EAAYC,EAAUC,IAQzDkhC,EAAA5rC,UAAAwY,iBAAA,WACE,OAAO1Y,KAAK+sC,gBAQdjB,EAAA5rC,UAAAyY,iBAAA,WACE,OAAO3Y,KAAKgtC,gBAQdlB,EAAA5rC,UAAA2Y,WAAA,WACE,OACE7Y,KAAKqyC,qBAAqBryC,KAAKgtC,iBASnClB,EAAA5rC,UAAAsZ,WAAA,SAAWY,GACTpa,KAAK2sC,cAAc3sC,KAAKuuC,mBAAmB,CAAC72B,QAAS0C,MAQvD0xB,EAAA5rC,UAAA0Y,WAAA,WACE,OACE5Y,KAAKqyC,qBAAqBryC,KAAK+sC,iBASnCjB,EAAA5rC,UAAAuZ,WAAA,SAAWW,GACTpa,KAAK2sC,cAAc3sC,KAAKuuC,mBAAmB,CAAC92B,QAAS2C,MAQvD0xB,EAAA5rC,UAAAoyC,uBAAA,SAAuBC,GACrBvyC,KAAK2sC,cAAc3sC,KAAKuuC,mBAAmB,CAACiE,oBAAqBD,MAQnEzG,EAAA5rC,UAAAgvC,cAAA,WACE,OAAOlvC,KAAKksC,aASdJ,EAAA5rC,UAAAkuC,cAAA,WACE,OAAwCpuC,KAAK8D,IAAI4wB,GAAaE,aAShEkX,EAAA5rC,UAAAuyC,eAAA,WACE,OAAOzyC,KAAKmtC,cAWdrB,EAAA5rC,UAAAwyC,uBAAA,SAAuBnrC,EAAQsqC,GAC7B,OAAO7xC,KAAK2yC,+BACVpW,GAAeh1B,EAAQvH,KAAKkvC,iBAC5B2C,IAWJ/F,EAAA5rC,UAAAyyC,+BAAA,SAA+BprC,EAAQsqC,GACrC,IAAMjnC,EAAOinC,GAAY7xC,KAAKoyC,+BACxB1U,EAAcvzB,GAAS5C,GAAUqD,EAAK,GACtC+yB,EAAcvzB,GAAU7C,GAAUqD,EAAK,GAC7C,OAAOtE,KAAKkD,IAAIk0B,EAAaC,IAS/BmO,EAAA5rC,UAAA0yC,8BAAA,SAA8BC,GAC5B,IAAMC,EAAQD,GAAa,EACrBt7B,EAAgBvX,KAAK+yC,yBAAyB/yC,KAAK+sC,gBACnDv1B,EAAgBxX,KAAKgtC,eACrBxjC,EAAMlD,KAAKyG,IAAIwK,EAAgBC,GAAiBlR,KAAKyG,IAAI+lC,GAC/D,OAAA,SAKYlrC,GAER,OADmB2P,EAAgBjR,KAAKyH,IAAI+kC,EAAOlrC,EAAQ4B,KAYjEsiC,EAAA5rC,UAAAyuC,YAAA,WACE,OAA8B3uC,KAAK8D,IAAI4wB,GAAaG,WAStDiX,EAAA5rC,UAAA8yC,8BAAA,SAA8BH,GAC5B,IAAMI,EAAW3sC,KAAKyG,IAAI8lC,GAAa,GACjCt7B,EAAgBvX,KAAK+yC,yBAAyB/yC,KAAK+sC,gBACnDv1B,EAAgBxX,KAAKgtC,eACrBxjC,EAAMlD,KAAKyG,IAAIwK,EAAgBC,GAAiBy7B,EACtD,OAAA,SAKYvoC,GAER,OADcpE,KAAKyG,IAAIwK,EAAgB7M,GAAcuoC,EAAWzpC,IAYtEsiC,EAAA5rC,UAAAkyC,6BAAA,SAA6BT,GAC3B,IAAI/mC,EAAO5K,KAAKgxC,iBAAiBW,GAC3B3sB,EAAUhlB,KAAKqtC,SAOrB,OANIroB,IACFpa,EAAO,CACLA,EAAK,GAAKoa,EAAQ,GAAKA,EAAQ,GAC/Bpa,EAAK,GAAKoa,EAAQ,GAAKA,EAAQ,KAG5Bpa,GAMTkhC,EAAA5rC,UAAAob,SAAA,WACE,IAAMkC,EAAaxd,KAAKkvC,gBAClBxkC,EAAa1K,KAAKouC,gBAClBzjC,EAAW3K,KAAK2uC,cAClBlkC,EACFzK,KAAK0uC,oBAED1pB,EAAUhlB,KAAKqtC,SACrB,GAAIroB,EAAS,CACX,IAAMkuB,EAAclzC,KAAKoyC,+BACzB3nC,EAAS0oC,GACP1oC,EACAzK,KAAKgxC,mBACL,CAACkC,EAAY,GAAK,EAAIluB,EAAQ,GAAIkuB,EAAY,GAAK,EAAIluB,EAAQ,IAC/Dta,EACAC,GAGJ,MAAO,CACLF,OAAQA,EAAO1C,MAAM,GACrByV,gBAA2BvN,IAAfuN,EAA2BA,EAAa,KACpD9S,WAAYA,EACZ0oC,WAAYpzC,KAAKusC,YACjB8G,eAAgBrzC,KAAKwsC,gBACrB8G,aAActzC,KAAKysC,cACnB9hC,SAAUA,EACVyP,KAAMpa,KAAKyuC,YAWf3C,EAAA5rC,UAAAuuC,QAAA,WACE,IAAIr0B,EACE1P,EAAa1K,KAAKouC,gBAIxB,YAHmBn+B,IAAfvF,IACF0P,EAAOpa,KAAKqyC,qBAAqB3nC,IAE5B0P,GAST0xB,EAAA5rC,UAAAmyC,qBAAA,SAAqB3nC,GACnB,IACIlB,EAAK0jC,EADL9jC,EAASpJ,KAAKstC,UAAY,EAE9B,GAAIttC,KAAKmtC,aAAc,CACrB,IAAMoG,EAAU3yC,EAAkBZ,KAAKmtC,aAAcziC,EAAY,GACjEtB,EAASmqC,EACT/pC,EAAMxJ,KAAKmtC,aAAaoG,GAEtBrG,EADEqG,GAAWvzC,KAAKmtC,aAAansC,OAAS,EAC3B,EAEAwI,EAAMxJ,KAAKmtC,aAAaoG,EAAU,QAGjD/pC,EAAMxJ,KAAK+sC,eACXG,EAAaltC,KAAKitC,YAEpB,OAAO7jC,EAAS9C,KAAKyG,IAAIvD,EAAMkB,GAAcpE,KAAKyG,IAAImgC,IASxDpB,EAAA5rC,UAAA8vC,qBAAA,SAAqB51B,GACnB,GAAIpa,KAAKmtC,aAAc,CACrB,GAAIntC,KAAKmtC,aAAansC,QAAU,EAC9B,OAAO,EAET,IAAMwyC,EAAY/mC,GAChBnG,KAAK4H,MAAMkM,GACX,EACApa,KAAKmtC,aAAansC,OAAS,GAEvBksC,EACJltC,KAAKmtC,aAAaqG,GAAaxzC,KAAKmtC,aAAaqG,EAAY,GAC/D,OACExzC,KAAKmtC,aAAaqG,GAClBltC,KAAKyH,IAAIm/B,EAAYzgC,GAAM2N,EAAOo5B,EAAW,EAAG,IAGlD,OACExzC,KAAK+sC,eAAiBzmC,KAAKyH,IAAI/N,KAAKitC,YAAa7yB,EAAOpa,KAAKstC,WAenExB,EAAA5rC,UAAAuzC,IAAA,SAAIC,EAAkB7qB,GAEpB,IAAI7J,EAOJ,GANAna,EACEpD,MAAMC,QAAQgyC,IAEV,mBADwBA,EAAkBrT,sBAE9C,IAEE5+B,MAAMC,QAAQgyC,GAAmB,CACnC7uC,GAAQqF,GAAQwpC,GAAmB,IACnC,IAAMnsC,EAASg1B,GAAemX,EAAkB1zC,KAAKkvC,iBACrDlwB,EAAW20B,GAAAC,WAAkBrsC,QACxB,GAAImsC,EAAiB/R,YAAc7N,GAAqB,CACvDvsB,EAASg1B,GACbmX,EAAiBj7B,YACjBzY,KAAKkvC,kBAEPlwB,EAAW20B,GAAAC,WAAkBrsC,IACpB+5B,OAAOthC,KAAK2uC,cAAetkC,GAAU9C,QACzC,CACL,IAAMssC,EAAiB3X,KAErBld,EADE60B,EAEAH,EACGpT,QACAl7B,UAAUyuC,EAAgB7zC,KAAKkvC,iBAGzBwE,EAIf1zC,KAAK8zC,YAAY90B,EAAU6J,IAQ7BijB,EAAA5rC,UAAA6zC,yBAAA,SAAyB/0B,GAUvB,IATA,IAAMrU,EAAW3K,KAAK2uC,cAChBtxB,EAAW/W,KAAKC,IAAIoE,GACpB2S,EAAWhX,KAAKD,KAAKsE,GACrBqpC,EAASh1B,EAASujB,qBAClBl5B,EAAS2V,EAASwjB,YACpByR,EAAUnrC,EAAAA,EACVorC,EAAUprC,EAAAA,EACVqrC,GAAWrrC,EAAAA,EACXsrC,GAAWtrC,EAAAA,EACN7H,EAAI,EAAGwG,EAAKusC,EAAOhzC,OAAQC,EAAIwG,EAAIxG,GAAKoI,EAAQ,CACvD,IAAMgrC,EAAOL,EAAO/yC,GAAKoc,EAAW22B,EAAO/yC,EAAI,GAAKqc,EAC9Cg3B,EAAON,EAAO/yC,GAAKqc,EAAW02B,EAAO/yC,EAAI,GAAKoc,EACpD42B,EAAU3tC,KAAKiD,IAAI0qC,EAASI,GAC5BH,EAAU5tC,KAAKiD,IAAI2qC,EAASI,GAC5BH,EAAU7tC,KAAKkD,IAAI2qC,EAASE,GAC5BD,EAAU9tC,KAAKkD,IAAI4qC,EAASE,GAE9B,MAAO,CAACL,EAASC,EAASC,EAASC,IAOrCtI,EAAA5rC,UAAA4zC,YAAA,SAAY90B,EAAU6J,GACpB,IAAMllB,EAAUklB,GAAe,GAC3Bje,EAAOjH,EAAQiH,KACdA,IACHA,EAAO5K,KAAKoyC,gCAEd,IAGI56B,EAHEwN,OACgB/U,IAApBtM,EAAQqhB,QAAwBrhB,EAAQqhB,QAAU,CAAC,EAAG,EAAG,EAAG,GACxDuuB,OAA8BtjC,IAApBtM,EAAQ4vC,SAAwB5vC,EAAQ4vC,QAGtD/7B,OAD4BvH,IAA1BtM,EAAQ6T,cACM7T,EAAQ6T,mBACKvH,IAApBtM,EAAQ+T,QACD1X,KAAKgwC,qBAAqBrsC,EAAQ+T,SAElC,EAGlB,IAAM68B,EAAgBv0C,KAAK+zC,yBAAyB/0B,GAGhDtU,EAAa1K,KAAK2yC,+BAA+B4B,EAAe,CAClE3pC,EAAK,GAAKoa,EAAQ,GAAKA,EAAQ,GAC/Bpa,EAAK,GAAKoa,EAAQ,GAAKA,EAAQ,KAEjCta,EAAaga,MAAMha,GACf8M,EACAlR,KAAKkD,IAAIkB,EAAY8M,GACzB9M,EAAa1K,KAAK+yC,yBAAyBroC,EAAY6oC,EAAU,EAAI,GAGrE,IAAM5oC,EAAW3K,KAAK2uC,cAChBrxB,EAAWhX,KAAKD,IAAIsE,GACpB0S,EAAW/W,KAAKC,IAAIoE,GACpB6pC,EAAYnqC,GAAUkqC,GAC5BC,EAAU,KAAQxvB,EAAQ,GAAKA,EAAQ,IAAM,EAAKta,EAClD8pC,EAAU,KAAQxvB,EAAQ,GAAKA,EAAQ,IAAM,EAAKta,EAClD,IAAM+pC,EAAUD,EAAU,GAAKn3B,EAAWm3B,EAAU,GAAKl3B,EACnDo3B,EAAUF,EAAU,GAAKn3B,EAAWm3B,EAAU,GAAKl3B,EACnD7S,EAASzK,KAAK20C,qBAAqB,CAACF,EAASC,GAAUhqC,GACvDhB,EAAW/F,EAAQ+F,SAAW/F,EAAQ+F,SAAWzH,OAE9BgO,IAArBtM,EAAQ+rC,SACV1vC,KAAKmvC,gBACH,CACEzkC,WAAYA,EACZD,OAAQA,EACRilC,SAAU/rC,EAAQ+rC,SAClBC,OAAQhsC,EAAQgsC,QAElBjmC,IAGF1J,KAAKqsC,kBAAoB3hC,EACzB1K,KAAKosC,cAAgB3hC,EACrBzK,KAAKmxC,mBAAkB,GAAO,GAC9BZ,GAAkB7mC,GAAU,KAWhCoiC,EAAA5rC,UAAA00C,SAAA,SAASlvC,EAAYkF,EAAMsa,GACzBllB,KAAK60C,iBACHzY,GAAmB12B,EAAY1F,KAAKkvC,iBACpCtkC,EACAsa,IASJ4mB,EAAA5rC,UAAA20C,iBAAA,SAAiBnvC,EAAYkF,EAAMsa,GACjCllB,KAAK+tC,kBACHoF,GACEztC,EACAkF,EACAsa,EACAllB,KAAKouC,gBACLpuC,KAAK2uC,iBAaX7C,EAAA5rC,UAAA40C,qBAAA,SAAqBrqC,EAAQC,EAAYC,EAAUC,GACjD,IAAImqC,EACE/vB,EAAUhlB,KAAKqtC,SACrB,GAAIroB,GAAWva,EAAQ,CACrB,IAAMyoC,EAAclzC,KAAKoyC,8BAA8BznC,GACjDqqC,EAAgB7B,GACpB1oC,EACAG,EACA,CAACsoC,EAAY,GAAK,EAAIluB,EAAQ,GAAIkuB,EAAY,GAAK,EAAIluB,EAAQ,IAC/Dta,EACAC,GAEFoqC,EAAc,CACZtqC,EAAO,GAAKuqC,EAAc,GAC1BvqC,EAAO,GAAKuqC,EAAc,IAG9B,OAAOD,GAMTjJ,EAAA5rC,UAAA4uC,MAAA,WACE,QAAS9uC,KAAK0uC,0BAAgDz+B,IAAzBjQ,KAAKouC,iBAQ5CtC,EAAA5rC,UAAA+0C,aAAA,SAAaC,GACX,IAAMzqC,EAAS0xB,GAAiBn8B,KAAKosC,cAAepsC,KAAKkvC,iBACzDlvC,KAAKm1C,UAAU,CACb1qC,EAAO,GAAKyqC,EAAiB,GAC7BzqC,EAAO,GAAKyqC,EAAiB,MAQjCpJ,EAAA5rC,UAAAk1C,qBAAA,SAAqBF,GACnB,IAAMzqC,EAASzK,KAAKosC,cACpBpsC,KAAK+tC,kBAAkB,CACrBtjC,EAAO,GAAKyqC,EAAiB,GAC7BzqC,EAAO,GAAKyqC,EAAiB,MAWjCpJ,EAAA5rC,UAAAm1C,iBAAA,SAAiBjY,EAAOoE,GACtB,IAAMtC,EACJsC,GAAcpF,GAAmBoF,EAAYxhC,KAAKkvC,iBACpDlvC,KAAKs1C,yBAAyBlY,EAAO8B,IASvC4M,EAAA5rC,UAAAo1C,yBAAA,SAAyBlY,EAAOoE,GAC9B,IAAM+T,EAAWv1C,KAAK+uC,gBAAkB/uC,KAAKwwC,iBACvC5lC,EAAO5K,KAAKgxC,iBAAiBhxC,KAAK2uC,eAClC6G,EAAgBx1C,KAAK6tC,aAAanjC,WACtC1K,KAAKqsC,kBAAoBjP,EACzB,EACAxyB,EACA2qC,GAGE/T,IACFxhC,KAAKosC,cAAgBpsC,KAAKkxC,oBAAoBsE,EAAehU,IAG/DxhC,KAAKqsC,mBAAqBjP,EAC1Bp9B,KAAKmxC,qBAUPrF,EAAA5rC,UAAAu1C,WAAA,SAAWvF,EAAO1O,GAChBxhC,KAAKq1C,iBAAiB/uC,KAAKyH,IAAI/N,KAAKitC,aAAciD,GAAQ1O,IAU5DsK,EAAA5rC,UAAAw1C,eAAA,SAAexF,EAAO1O,GAChBA,IACFA,EAAapF,GAAmBoF,EAAYxhC,KAAKkvC,kBAEnDlvC,KAAK21C,uBAAuBzF,EAAO1O,IAOrCsK,EAAA5rC,UAAAy1C,uBAAA,SAAuBzF,EAAO1O,GAC5B,IAAM+T,EAAWv1C,KAAK+uC,gBAAkB/uC,KAAKwwC,iBACvCoF,EAAc51C,KAAK6tC,aAAaljC,SACpC3K,KAAKssC,gBAAkB4D,EACvBqF,GAEE/T,IACFxhC,KAAKosC,cAAgBpsC,KAAKqxC,sBAAsBuE,EAAapU,IAE/DxhC,KAAKssC,iBAAmB4D,EACxBlwC,KAAKmxC,qBASPrF,EAAA5rC,UAAAi1C,UAAA,SAAU1qC,GACRzK,KAAK+tC,kBACHtjC,EAAS2xB,GAAmB3xB,EAAQzK,KAAKkvC,iBAAmBzkC,IAQhEqhC,EAAA5rC,UAAA6tC,kBAAA,SAAkBtjC,GAChBzK,KAAKosC,cAAgB3hC,EACrBzK,KAAKmxC,qBAQPrF,EAAA5rC,UAAAmwC,QAAA,SAAQwF,EAAM3F,GAGZ,OAFAlwC,KAAK+rC,OAAO8J,IAAS3F,EACrBlwC,KAAKmV,UACEnV,KAAK+rC,OAAO8J,IASrB/J,EAAA5rC,UAAA8tC,cAAA,SAActjC,GACZ1K,KAAKqsC,kBAAoB3hC,EACzB1K,KAAKmxC,qBASPrF,EAAA5rC,UAAA4tC,YAAA,SAAYnjC,GACV3K,KAAKssC,gBAAkB3hC,EACvB3K,KAAKmxC,qBAQPrF,EAAA5rC,UAAA+tC,QAAA,SAAQ7zB,GACNpa,KAAKguC,cAAchuC,KAAKgwC,qBAAqB51B,KAW/C0xB,EAAA5rC,UAAAixC,kBAAA,SAAkB2E,EAAsBC,GACtC,IAAMR,EACJv1C,KAAK+uC,gBAAkB/uC,KAAKwwC,kBAAoBuF,EAG5CH,EAAc51C,KAAK6tC,aAAaljC,SACpC3K,KAAKssC,gBACLiJ,GAEI3qC,EAAO5K,KAAKgxC,iBAAiB4E,GAC7BJ,EAAgBx1C,KAAK6tC,aAAanjC,WACtC1K,KAAKqsC,kBACL,EACAzhC,EACA2qC,GAEIS,EAAYh2C,KAAK6tC,aAAapjC,OAClCzK,KAAKosC,cACLoJ,EACA5qC,EACA2qC,EACAv1C,KAAK80C,qBACH90C,KAAKosC,cACLoJ,EACAI,EACAhrC,IAIA5K,KAAK8D,IAAI4wB,GAAaG,YAAc+gB,GACtC51C,KAAK+Q,IAAI2jB,GAAaG,SAAU+gB,GAE9B51C,KAAK8D,IAAI4wB,GAAaE,cAAgB4gB,IACxCx1C,KAAK+Q,IAAI2jB,GAAaE,WAAY4gB,GAClCx1C,KAAK+Q,IAAI,OAAQ/Q,KAAKyuC,WAAW,IAGhCuH,GACAh2C,KAAK8D,IAAI4wB,GAAaC,SACtB1X,GAAOjd,KAAK8D,IAAI4wB,GAAaC,QAASqhB,IAEvCh2C,KAAK+Q,IAAI2jB,GAAaC,OAAQqhB,GAG5Bh2C,KAAK+uC,iBAAmB+G,GAC1B91C,KAAKywC,mBAEPzwC,KAAK0sC,mBAAgBz8B,GAYvB67B,EAAA5rC,UAAA8uC,mBAAA,SAAmBiH,EAAcC,EAAyB1U,GACxD,IAAMkO,OAA4Bz/B,IAAjBgmC,EAA6BA,EAAe,IACvDn1C,EAAYo1C,GAA2B,EAEvCN,EAAc51C,KAAK6tC,aAAaljC,SAAS3K,KAAKssC,iBAC9C1hC,EAAO5K,KAAKgxC,iBAAiB4E,GAC7BJ,EAAgBx1C,KAAK6tC,aAAanjC,WACtC1K,KAAKqsC,kBACLvrC,EACA8J,GAEIorC,EAAYh2C,KAAK6tC,aAAapjC,OAClCzK,KAAKosC,cACLoJ,EACA5qC,GACA,EACA5K,KAAK80C,qBACH90C,KAAKosC,cACLoJ,EACAI,EACAhrC,IAIJ,GAAiB,IAAb8kC,IAAmB1vC,KAAK0sC,cAK1B,OAJA1sC,KAAKqsC,kBAAoBmJ,EACzBx1C,KAAKssC,gBAAkBsJ,EACvB51C,KAAKosC,cAAgB4J,OACrBh2C,KAAKmxC,oBAIP,IAAMjS,EACJsC,IAA4B,IAAbkO,EAAiB1vC,KAAK0sC,mBAAgBz8B,GACvDjQ,KAAK0sC,mBAAgBz8B,EAGnBjQ,KAAKouC,kBAAoBoH,GACzBx1C,KAAK2uC,gBAAkBiH,GACtB51C,KAAK0uC,qBACLzxB,GAAOjd,KAAK0uC,oBAAqBsH,KAE9Bh2C,KAAK+uC,gBACP/uC,KAAKywC,mBAGPzwC,KAAKmvC,gBAAgB,CACnBxkC,SAAUirC,EACVnrC,OAAQurC,EACRtrC,WAAY8qC,EACZ9F,SAAUA,EACVC,OAAQtR,GACRa,OAAQA,MAWd4M,EAAA5rC,UAAAi2C,iBAAA,WACEn2C,KAAKgvC,mBAAmB,GAExBhvC,KAAKqwC,QAAQ5b,GAAsB,IAWrCqX,EAAA5rC,UAAAk2C,eAAA,SAAeH,EAAcC,EAAyB1U,GACpD,IAAMtC,EACJsC,GAAcpF,GAAmBoF,EAAYxhC,KAAKkvC,iBACpDlvC,KAAKq2C,uBAAuBJ,EAAcC,EAAyBhX,IAUrE4M,EAAA5rC,UAAAm2C,uBAAA,SAAuBJ,EAAcC,EAAyB1U,GAC5DxhC,KAAKqwC,QAAQ5b,IAAsB,GAEnCz0B,KAAKgvC,mBAAmBiH,EAAcC,EAAyB1U,IAUjEsK,EAAA5rC,UAAAy0C,qBAAA,SAAqB9E,EAAcyG,GACjC,IAAM1rC,EAAO5K,KAAKgxC,iBAAiBhxC,KAAK2uC,eACxC,OAAO3uC,KAAK6tC,aAAapjC,OACvBolC,EACAyG,GAAwBt2C,KAAKouC,gBAC7BxjC,IAaJkhC,EAAA5rC,UAAAq2C,mBAAA,SAAmBC,EAAYC,GAC7B,IAAMC,EAAY12C,KAAKgwC,qBAAqBwG,GAC5C,OAAOx2C,KAAKqyC,qBACVryC,KAAK+yC,yBAAyB2D,EAAWD,KAa7C3K,EAAA5rC,UAAA6yC,yBAAA,SAAyBhD,EAAkB0G,GACzC,IAAM31C,EAAY21C,GAAiB,EAC7B7rC,EAAO5K,KAAKgxC,iBAAiBhxC,KAAK2uC,eAExC,OAAO3uC,KAAK6tC,aAAanjC,WAAWqlC,EAAkBjvC,EAAW8J,IAErEkhC,EA9jDA,CAAmBhyB,GAAA7U,SAokDnB,SAASsrC,GAAkB7mC,EAAUitC,GACnC5nB,YAAW,WACTrlB,EAASitC,KACR,GAOC,SAAUnJ,GAAuB7pC,GACrC,QAAuBsM,IAAnBtM,EAAQ4D,OAAsB,CAChC,IAAMs1B,OAC+B5sB,IAAnCtM,EAAQizC,wBACJjzC,EAAQizC,uBAEd,OAAOja,GAAah5B,EAAQ4D,OAAQ5D,EAAQkzC,oBAAqBha,GAGnE,IAAMrf,EAAayd,GAAiBt3B,EAAQ6Z,WAAY,aACxD,IAA2B,IAAvB7Z,EAAQmzC,YAAuBt5B,EAAW6Y,WAAY,CACxD,IAAM9uB,EAASiW,EAAW/E,YAAY1Q,QAGtC,OAFAR,EAAO,IAAMuB,EAAAA,EACbvB,EAAO,GAAKuB,EAAAA,EACL6zB,GAAap1B,GAAQ,GAAO,GAGrC,OAAO81B,GAQH,SAAUyP,GAA2BnpC,GACzC,IAAI8pC,EACAl2B,EACAC,EAOAC,OACkBxH,IAApBtM,EAAQ8T,QAAwB9T,EAAQ8T,QAvsDnB,EAysDnBC,OACkBzH,IAApBtM,EAAQ+T,QAAwB/T,EAAQ+T,QAPnB,GASjBw1B,OACmBj9B,IAAvBtM,EAAQupC,WAA2BvpC,EAAQupC,WATnB,EAWpB4J,OACmB7mC,IAAvBtM,EAAQmzC,YAA2BnzC,EAAQmzC,WAEvCja,OACmC5sB,IAAvCtM,EAAQozC,4BACJpzC,EAAQozC,2BAGRtZ,OACuBxtB,IAA3BtM,EAAQ85B,gBAA+B95B,EAAQ85B,eAE3CjgB,EAAayd,GAAiBt3B,EAAQ6Z,WAAY,aAClDw5B,EAAax5B,EAAW/E,YAC1Bo+B,EAAsBlzC,EAAQkzC,oBAC9BtvC,EAAS5D,EAAQ4D,OAMrB,GALKuvC,GAAevvC,IAAUiW,EAAW6Y,aACvCwgB,GAAsB,EACtBtvC,EAASyvC,QAGiB/mC,IAAxBtM,EAAQypC,YAA2B,CACrC,IAAMA,EAAczpC,EAAQypC,YAC5B71B,EAAgB61B,EAAY31B,GAC5BD,OAC2BvH,IAAzBm9B,EAAY11B,GACR01B,EAAY11B,GACZ01B,EAAYA,EAAYpsC,OAAS,GAGrCysC,EADE9pC,EAAQ6uC,oBrBj4DV,SACJpF,EACAtP,EACAC,EACAC,GAEA,OAAA,SAQYtzB,EAAY5J,EAAW8J,EAAMkyB,GACrC,QAAmB7sB,IAAfvF,EAA0B,CAC5B,IAAM6M,EAAgB61B,EAAY,GAC5B51B,EAAgB41B,EAAYA,EAAYpsC,OAAS,GACjDi9B,EAAeF,EACjBT,GACE/lB,EACAwmB,EACAnzB,EACAozB,GAEFzmB,EAGJ,GAAIulB,EAEF,YAD8B7sB,IAAf6tB,GAA2BA,EAInCF,GACLlzB,EACAuzB,EACAzmB,GALO/K,GAAM/B,EAAY8M,EAAeymB,GAS5C,IAAMgZ,EAAS3wC,KAAKiD,IAAI00B,EAAcvzB,GAChCwsC,EAAI5wC,KAAK4H,MAAMtN,EAAkBwsC,EAAa6J,EAAQn2C,IAC5D,OAAIssC,EAAY8J,GAAKjZ,GAAgBiZ,EAAI9J,EAAYpsC,OAAS,EACrDosC,EAAY8J,EAAI,GAElB9J,EAAY8J,KqBq1DEC,CACrB/J,EACAvQ,GACCga,GAAuBtvC,EACxBk2B,GAGqBI,GACrBtmB,EACAC,EACAqlB,GACCga,GAAuBtvC,EACxBk2B,OAGC,CAEL,IAKM2Z,GALQJ,EAGV1wC,KAAKkD,IAAIW,GAAS6sC,GAAa5sC,GAAU4sC,IADxC,IAAMziB,GAAgBC,GAAMP,SAAYzW,EAAW0Y,oBC98D3B,IDk9DA5vB,KAAKyH,IA/DV,EApsDH,GAqwDfspC,EACJD,EACA9wC,KAAKyH,IAnEiB,EAmEMupC,SAIRrnC,KADtBsH,EAAgB5T,EAAQ4T,eAEtBE,EAAU,EAEVF,EAAgB6/B,EAAuB9wC,KAAKyH,IAAIm/B,EAAYz1B,QAKxCxH,KADtBuH,EAAgB7T,EAAQ6T,iBAIlBA,OAFoBvH,IAApBtM,EAAQ+T,aACoBzH,IAA1BtM,EAAQ4T,cACMA,EAAgBjR,KAAKyH,IAAIm/B,EAAYx1B,GAErC0/B,EAAuB9wC,KAAKyH,IAAIm/B,EAAYx1B,GAG9C2/B,GAKpB3/B,EACED,EACAnR,KAAK4H,MACH5H,KAAKyG,IAAIwK,EAAgBC,GAAiBlR,KAAKyG,IAAImgC,IAEvD11B,EAAgBD,EAAgBjR,KAAKyH,IAAIm/B,EAAYx1B,EAAUD,GAG7Dg2B,EADE9pC,EAAQ6uC,oBrB/3DV,SACJM,EACAv7B,EACAggC,EACAzZ,EACAC,EACAC,GAEA,OAAA,SAQYtzB,EAAY5J,EAAW8J,EAAMkyB,GACrC,QAAmB7sB,IAAfvF,EAA0B,CAC5B,IAAMuzB,EAAeF,EACjBT,GACE/lB,EACAwmB,EACAnzB,EACAozB,GAEFzmB,EACEC,OACkBvH,IAAtBsnC,EAAkCA,EAAoB,EAGxD,GAAIza,EAEF,YAD8B7sB,IAAf6tB,GAA2BA,EAInCF,GACLlzB,EACAuzB,EACAzmB,GALO/K,GAAM/B,EAAY8M,EAAeymB,GAS5C,IACMuZ,EAAelxC,KAAK8H,KACxB9H,KAAKyG,IAAIwK,EAAgB0mB,GAAgB33B,KAAKyG,IAAI+lC,GAFlC,MAIZ1pC,GAAUtI,GAAa,GAJX,MAI8B,GAC1Cm2C,EAAS3wC,KAAKiD,IAAI00B,EAAcvzB,GAChC+sC,EAAkBnxC,KAAK4H,MAC3B5H,KAAKyG,IAAIwK,EAAgB0/B,GAAU3wC,KAAKyG,IAAI+lC,GAAS1pC,GAEjDsuC,EAAYpxC,KAAKkD,IAAIguC,EAAcC,GAEzC,OAAOhrC,GADe8K,EAAgBjR,KAAKyH,IAAI+kC,EAAO4E,GAC1BlgC,EAAeymB,KqB20DtB0Z,CACrBzK,EACA31B,EACAC,EACAqlB,GACCga,GAAuBtvC,EACxBk2B,GAGqBI,GACrBtmB,EACAC,EACAqlB,GACCga,GAAuBtvC,EACxBk2B,GAIN,MAAO,CACLiQ,WAAYD,EACZl2B,cAAeA,EACfC,cAAeA,EACfC,QAASA,EACTy1B,WAAYA,GAQV,SAAUU,GAAyBjqC,GACvC,IpBhgE4B5C,EACtB62C,EA0ByBC,EACzBnW,EoBs+DN,QAD6BzxB,IAA3BtM,EAAQm0C,gBAA+Bn0C,EAAQm0C,eAC7B,CAClB,IAAMC,EAAoBp0C,EAAQo0C,kBAClC,YAA0B9nC,IAAtB8nC,IAAyD,IAAtBA,GpBx+DnCrW,EAAYmW,GAAiBtqC,GAAU,GAC7C,SAMY5C,EAAUmyB,GAClB,OAAIA,EACKnyB,OAGQsF,IAAbtF,EACErE,KAAKspB,IAAIjlB,IAAa+2B,EACjB,EAEA/2B,OAGT,KoBu9D6B,IAAtBotC,EACF5Z,GAC+B,iBAAtB4Z,GpBxgEQh3C,EoBygEHg3C,EpBxgEnBH,EAAS,EAAItxC,KAAKgH,GAAMvM,EAC9B,SAMY4J,EAAUmyB,GAClB,OAAIA,EACKnyB,OAGQsF,IAAbtF,EACFA,EAAWrE,KAAK4H,MAAMvD,EAAWitC,EAAQ,IAAOA,OAGhD,IoB0/DKzZ,GAGT,OAAOD,GASL,SAAUkS,GAAgBZ,GAC9B,QAAIA,EAAUI,cAAgBJ,EAAUK,eACjC5yB,GAAiBuyB,EAAUI,aAAcJ,EAAUK,iBAItDL,EAAUM,mBAAqBN,EAAUO,kBAGzCP,EAAUS,iBAAmBT,EAAUW,gBAc7C,SAASgD,GAAkBztC,EAAYkF,EAAMsa,EAAUxa,EAAYC,GAEjE,IAAM0S,EAAW/W,KAAKC,KAAKoE,GACvB2S,EAAWhX,KAAKD,KAAKsE,GACrB0pC,EAAO3uC,EAAW,GAAK2X,EAAW3X,EAAW,GAAK4X,EAClDg3B,EAAO5uC,EAAW,GAAK2X,EAAW3X,EAAW,GAAK4X,EAStD,MAAO,EARP+2B,IAASzpC,EAAK,GAAK,EAAIsa,EAAS,IAAMxa,GAKf2S,GAJvBi3B,IAASpvB,EAAS,GAAKta,EAAK,GAAK,GAAKF,IAGtC4S,GAAYA,GAEIg3B,EAAOj3B,EAAWg3B,EAAO/2B,OAK3C06B,GAAenM,GErkET,SAAUoM,GAAQrtC,GACtB,OAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,EA4B5B,SAAUstC,GAAOttC,EAAMinC,GAC3B,OAAIpwC,MAAMC,QAAQkJ,GACTA,QAEUqF,IAAb4hC,EACFA,EAAW,CAACjnC,EAAMA,IAElBinC,EAAS,GAAKjnC,EACdinC,EAAS,GAAKjnC,GAETinC,ieCkFX,SAASsG,GAAuB//B,GAC1BA,aAAiBsH,GAAAza,QACnBmT,EAAM+D,eAAe,MAGnB/D,aAAiBggC,GAAAnzC,SACnBmT,EAAMuS,YAAY5K,QAAQo4B,IAQ9B,SAASE,GAAoBjgC,EAAOvI,GAClC,GAAIuI,aAAiBsH,GAAAza,QACnBmT,EAAM+D,eAAetM,QAGvB,GAAIuI,aAAiBggC,GAAAnzC,QAEnB,IADA,IAAMmlB,EAAShS,EAAMuS,YAAYrB,WACxBroB,EAAI,EAAGwG,EAAK2iB,EAAOppB,OAAQC,EAAIwG,IAAMxG,EAC5Co3C,GAAoBjuB,EAAOnpB,GAAI4O,GAarC,IAAAyoC,GAAA,SAAAl0C,GAIE,SAAAm0C,EAAY50C,GAAZ,IAAAY,EACEH,EAAAM,KAAA1E,OAAOA,KAKPuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAEL,IAAMyjC,EAm/CV,SAA+B70C,GAI7B,IAAI80C,EAAsB,UACUxoC,IAAhCtM,EAAQ80C,sBACVA,EACyC,iBAAhC90C,EAAQ80C,oBACXzxC,SAAS0xC,eAAe/0C,EAAQ80C,qBAChC90C,EAAQ80C,qBAMhB,IAcIE,EAaAC,EAcAC,EAzCExmC,EAAS,GAETymC,EACJn1C,EAAQymB,QACiD,mBAA/BzmB,EAAQymB,OAAQO,UACXhnB,EAAQymB,OACnC,IAAIguB,GAAAnzC,QAAW,CAACmlB,OAAmCzmB,EAAQymB,SACjE/X,EAAO2d,IAA0B8oB,EAEjCzmC,EAAO2d,IAAsBrsB,EAAQ9C,OAErCwR,EAAO2d,IACLrsB,EAAQo1C,gBAAgBC,GAAA/zC,QAAOtB,EAAQo1C,KAAO,IAAIC,GAAA/zC,aAG3BgL,IAArBtM,EAAQg1C,WACNl3C,MAAMC,QAAQiC,EAAQg1C,UACxBA,EAAW,IAAInuB,GAAAvlB,QAAWtB,EAAQg1C,SAAS5wC,UAE3ClD,EAC4D,mBAAhClB,EAAQg1C,SAAUrvB,SAC5C,IAEFqvB,EAAsCh1C,EAAQg1C,gBAKrB1oC,IAAzBtM,EAAQi1C,eACNn3C,MAAMC,QAAQiC,EAAQi1C,cACxBA,EAAe,IAAIpuB,GAAAvlB,QAAWtB,EAAQi1C,aAAa7wC,UAEnDlD,EAEI,mBADwBlB,EAAQi1C,aAActvB,SAEhD,IAEFsvB,EAA0Cj1C,EAAQi1C,oBAK7B3oC,IAArBtM,EAAQk1C,SACNp3C,MAAMC,QAAQiC,EAAQk1C,UACxBA,EAAW,IAAIruB,GAAAvlB,QAAWtB,EAAQk1C,SAAS9wC,UAE3ClD,EAC4D,mBAAhClB,EAAQk1C,SAAUvvB,SAC5C,IAEFuvB,EAAWl1C,EAAQk1C,UAGrBA,EAAW,IAAIruB,GAAAvlB,QAGjB,MAAO,CACL0zC,SAAUA,EACVC,aAAcA,EACdH,oBAAqBA,EACrBI,SAAUA,EACVxmC,OAAQA,GA/jDgB4mC,CAAsBt1C,GAM9CY,EAAK20C,gBAML30C,EAAK40C,SAAU,EAGf50C,EAAK60C,yBAA2B70C,EAAK80C,mBAAmBjlC,KAAK7P,GAM7DA,EAAK+0C,sBACyBrpC,IAA5BtM,EAAQ41C,gBAAgC51C,EAAQ41C,gBAAkB,GAMpEh1C,EAAKi1C,iBACoBvpC,IAAvBtM,EAAQ81C,WACJ91C,EAAQ81C,WACRz2C,EAMNuB,EAAKm1C,yBAMLn1C,EAAKo1C,mBAKLp1C,EAAKq1C,gBAA8C,WACjD55C,KAAK25C,wBAAqB1pC,EAC1BjQ,KAAK65C,aAAaxK,KAAKC,QACvBl7B,KAAK7P,GAMPA,EAAKu1C,4B7EtOA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G6E4OrBv1C,EAAKw1C,4B7E5OA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G6EkPrBx1C,EAAKy1C,YAAc,EAMnBz1C,EAAK01C,YAAc,KAOnB11C,EAAK21C,gBAAkB,KAMvB31C,EAAK41C,yBAA2B,KAMhC51C,EAAK61C,uBAAyB,KAM9B71C,EAAK81C,gCAAkC,KAMvC91C,EAAK+1C,UAAYtzC,SAASC,cAAc,OACxC1C,EAAK+1C,UAAU1iC,UACb,eAAiB,iBAAkB7T,OAAS,YAAc,IAC5DQ,EAAK+1C,UAAUpzC,MAAMge,SAAW,WAChC3gB,EAAK+1C,UAAUpzC,MAAMqzC,SAAW,SAChCh2C,EAAK+1C,UAAUpzC,MAAM+E,MAAQ,OAC7B1H,EAAK+1C,UAAUpzC,MAAMgF,OAAS,OAM9B3H,EAAKi2C,kBAAoBxzC,SAASC,cAAc,OAChD1C,EAAKi2C,kBAAkBtzC,MAAMge,SAAW,WACxC3gB,EAAKi2C,kBAAkBtzC,MAAMoQ,OAAS,IACtC/S,EAAKi2C,kBAAkBtzC,MAAM+E,MAAQ,OACrC1H,EAAKi2C,kBAAkBtzC,MAAMgF,OAAS,OACtC3H,EAAKi2C,kBAAkBtzC,MAAMuzC,cAAgB,OAC7Cl2C,EAAKi2C,kBAAkB5iC,UAAY,sBACnCrT,EAAK+1C,UAAUzrC,YAAYtK,EAAKi2C,mBAMhCj2C,EAAKm2C,2BAA6B1zC,SAASC,cAAc,OACzD1C,EAAKm2C,2BAA2BxzC,MAAMge,SAAW,WACjD3gB,EAAKm2C,2BAA2BxzC,MAAMoQ,OAAS,IAC/C/S,EAAKm2C,2BAA2BxzC,MAAM+E,MAAQ,OAC9C1H,EAAKm2C,2BAA2BxzC,MAAMgF,OAAS,OAC/C3H,EAAKm2C,2BAA2BxzC,MAAMuzC,cAAgB,OACtDl2C,EAAKm2C,2BAA2B9iC,UAAY,gCAC5CrT,EAAK+1C,UAAUzrC,YAAYtK,EAAKm2C,4BAMhCn2C,EAAKo2C,wBAA0B,KAM/Bp2C,EAAKupB,eAAiBnqB,EAAQ8pB,cAM9BlpB,EAAKq2C,qBAAuBpC,EAAgBC,oBAM5Cl0C,EAAKs2C,yBAA2B,KAMhCt2C,EAAKo0C,SAAWH,EAAgBG,UAAY,IAAInuB,GAAAvlB,QAMhDV,EAAKq0C,aAAeJ,EAAgBI,cAAgB,IAAIpuB,GAAAvlB,QAMxDV,EAAKu2C,UAAYtC,EAAgBK,SAOjCt0C,EAAKw2C,gBAAkB,GAMvBx2C,EAAKoW,UAAY,KAMjBpW,EAAKy2C,qBAAuB,GAM5Bz2C,EAAK02C,WAAa,IAAIC,GAAAj2C,QACpBV,EAAK42C,gBAAgB/mC,KAAK7P,GAC1BA,EAAK62C,kBAAkBhnC,KAAK7P,IAG9BA,EAAKiS,kBACHwZ,GACAzrB,EAAK82C,0BAEP92C,EAAKiS,kBAAkBwZ,GAAkBzrB,EAAK+2C,oBAC9C/2C,EAAKiS,kBAAkBwZ,GAAkBzrB,EAAKg3C,oBAC9Ch3C,EAAKiS,kBAAkBwZ,GAAoBzrB,EAAKi3C,sBAIhDj3C,EAAK0R,cAAcuiC,EAAgBnmC,QAEnC,IAAMxC,EAAMtL,SACRZ,EAAQo1C,MAAUp1C,EAAQo1C,gBAAgBC,GAAA/zC,SAC5CtB,EAAQo1C,KAAK0C,MAAK,SAAUC,GAC1B7rC,EAAI8rC,QAAQ,IAAI3C,GAAA/zC,QAAKy2C,OAIzBn3C,EAAKo0C,SAAS30C,iBACZqkB,GAIA,SAAUlV,GACRA,EAAMwU,QAAQ7M,OAAO9a,OACrBoU,KAAK7P,IAGTA,EAAKo0C,SAAS30C,iBACZqkB,GAIA,SAAUlV,GACRA,EAAMwU,QAAQ7M,OAAO,OACrB1G,KAAK7P,IAGTA,EAAKq0C,aAAa50C,iBAChBqkB,GAIA,SAAUlV,GACRA,EAAMwU,QAAQ7M,OAAO9a,OACrBoU,KAAK7P,IAGTA,EAAKq0C,aAAa50C,iBAChBqkB,GAIA,SAAUlV,GACRA,EAAMwU,QAAQ7M,OAAO,OACrB1G,KAAK7P,IAGTA,EAAKu2C,UAAU92C,iBACbqkB,GAIA,SAAUlV,GACRnT,KAAK47C,oBAC4CzoC,EAAMwU,UAEvDvT,KAAK7P,IAGTA,EAAKu2C,UAAU92C,iBACbqkB,GAIA,SAAUlV,GACR,IAGMyX,EAFJzX,EAAMwU,QAEWk0B,aACR5rC,IAAP2a,UACK5qB,KAAK+6C,gBAAgBnwB,EAAGkxB,YAEjC3oC,EAAMwU,QAAQ7M,OAAO,OACrB1G,KAAK7P,IAGTA,EAAKo0C,SAAS54B,QAKZ,SAAUg8B,GACRA,EAAQjhC,OAAO9a,OACfoU,KAAK7P,IAGTA,EAAKq0C,aAAa74B,QAKhB,SAAUi8B,GACRA,EAAYlhC,OAAO9a,OACnBoU,KAAK7P,IAGTA,EAAKu2C,UAAU/6B,QAAQxb,EAAKq3C,oBAAoBxnC,KAAK7P,MA+qCzD,OAngD2B03C,GAAA1D,EAAAn0C,GA2VzBm0C,EAAAr4C,UAAAsc,eAAA,WACE,MAAM,IAAIra,MAAM,oDAQlBo2C,EAAAr4C,UAAAg8C,WAAA,SAAWH,GACT/7C,KAAKm8C,cAAchwC,KAAK4vC,IAY1BxD,EAAAr4C,UAAAk8C,eAAA,SAAeJ,GACbh8C,KAAKq8C,kBAAkBlwC,KAAK6vC,IAU9BzD,EAAAr4C,UAAAo8C,SAAA,SAASlkC,GACQpY,KAAKu8C,gBAAgB5xB,YAC7Bxe,KAAKiM,IAOdmgC,EAAAr4C,UAAAs8C,gBAAA,SAAgBrpC,GACdklC,GAAoBllC,EAAMiF,MAAOpY,OAQnCu4C,EAAAr4C,UAAAu8C,WAAA,SAAWC,GACT18C,KAAK28C,cAAcxwC,KAAKuwC,IAQ1BnE,EAAAr4C,UAAA07C,oBAAA,SAAoBc,GAClB,IAAM9xB,EAAK8xB,EAAQb,aACR5rC,IAAP2a,IACF5qB,KAAK+6C,gBAAgBnwB,EAAGkxB,YAAcY,GAExCA,EAAQ5hC,OAAO9a,OAOjBu4C,EAAAr4C,UAAAE,gBAAA,WACEJ,KAAK48C,UAAU,MACfx4C,EAAAlE,UAAME,gBAAesE,KAAA1E,OAqBvBu4C,EAAAr4C,UAAA28C,sBAAA,SAAsBphC,EAAO/R,EAAUmf,GACrC,GAAK7oB,KAAKi6C,aAAgBj6C,KAAK2a,UAA/B,CAGA,IAAMjV,EAAa1F,KAAK88C,+BAA+BrhC,GAEjDgD,OACyBxO,KAF/B4Y,OAA8B5Y,IAAhB4Y,EAA4BA,EAAc,IAE1CpK,aAA6BoK,EAAYpK,aAAe,EAChEG,OACwB3O,IAA5B4Y,EAAYjK,YAA4BiK,EAAYjK,YAAc7c,EAC9D2c,GAA4C,IAA7BmK,EAAYnK,aACjC,OAAO1e,KAAK2a,UAAU6D,2BACpB9Y,EACA1F,KAAKi6C,YACLx7B,EACAC,EACAhV,EACA,KACAkV,EACA,QAYJ25B,EAAAr4C,UAAA68C,mBAAA,SAAmBthC,EAAOoN,GACxB,IAAMm0B,EAAW,GAQjB,OAPAh9C,KAAK68C,sBACHphC,GACA,SAAUsD,GACRi+B,EAAS7wC,KAAK4S,KAEhB8J,GAEKm0B,GAQTzE,EAAAr4C,UAAA+8C,aAAA,WACE,IAAM7yB,EAAS,GAWf,OAVA,SAAS8yB,EAAcpE,GACrBA,EAAW/4B,SAAQ,SAAU3H,GACvBA,aAAiBggC,GAAAnzC,QACnBi4C,EAAc9kC,EAAMuS,aAEpBP,EAAOje,KAAKiM,MAIlB8kC,CAAcl9C,KAAK2qB,aACZP,GA+BTmuB,EAAAr4C,UAAAigB,oBAAA,SAAoB1E,EAAO/R,EAAUmf,GACnC,GAAK7oB,KAAKi6C,aAAgBj6C,KAAK2a,UAA/B,CAGA,IAAMhX,EAAUklB,GAAe,GACzBpK,OACqBxO,IAAzBtM,EAAQ8a,aAA6B9a,EAAQ8a,aAAe,EACxDG,EAAcjb,EAAQib,aAAe7c,EAC3C,OAAO/B,KAAK2a,UAAUwF,oBACpB1E,EACAzb,KAAKi6C,YACLx7B,EACA/U,EACAkV,KAYJ25B,EAAAr4C,UAAAi9C,kBAAA,SAAkB1hC,EAAOoN,GACvB,IAAK7oB,KAAKi6C,cAAgBj6C,KAAK2a,UAC7B,OAAO,EAET,IAAMjV,EAAa1F,KAAK88C,+BAA+BrhC,GAEjDmD,OACwB3O,KAF9B4Y,OAA8B5Y,IAAhB4Y,EAA4BA,EAAc,IAE1CjK,YAA4BiK,EAAYjK,YAAc7c,EAC9D0c,OACyBxO,IAA7B4Y,EAAYpK,aAA6BoK,EAAYpK,aAAe,EAChEC,GAA4C,IAA7BmK,EAAYnK,aACjC,OAAO1e,KAAK2a,UAAUyF,uBACpB1a,EACA1F,KAAKi6C,YACLx7B,EACAC,EACAE,EACA,OAUJ25B,EAAAr4C,UAAAk9C,mBAAA,SAAmBjqC,GACjB,OAAOnT,KAAKssB,uBAAuBtsB,KAAKqsB,cAAclZ,KAQxDolC,EAAAr4C,UAAAm9C,2BAAA,SAA2BlqC,GACzB,OAAOnT,KAAK88C,+BAA+B98C,KAAKqsB,cAAclZ,KAShEolC,EAAAr4C,UAAAmsB,cAAA,SAAclZ,GACZ,IAAMmqC,EAAmBt9C,KAAKs6C,UAAUiD,wBAClCC,EAEJ,mBAAoBrqC,EACWA,EAAOsqC,eAAe,GACtBtqC,EAEjC,MAAO,CACLqqC,EAAc3tB,QAAUytB,EAAiBl4B,KACzCo4B,EAAc1tB,QAAUwtB,EAAiBI,MAa7CnF,EAAAr4C,UAAAy9C,UAAA,WACE,OACE39C,KAAK8D,IAAIksB,KAWbuoB,EAAAr4C,UAAA09C,iBAAA,WACE,IAAM/8C,EAASb,KAAK29C,YACpB,YAAe1tC,IAAXpP,EACuB,iBAAXA,EACVmG,SAAS0xC,eAAe73C,GACxBA,EAEG,MAWX03C,EAAAr4C,UAAAosB,uBAAA,SAAuB7Q,GACrB,OAAO0gB,GACLn8B,KAAK88C,+BAA+BrhC,GACpCzb,KAAK69C,UAAU3O,kBAUnBqJ,EAAAr4C,UAAA48C,+BAAA,SAA+BrhC,GAC7B,IAAMI,EAAa7b,KAAKi6C,YACxB,OAAKp+B,EAGIpW,EACLoW,EAAW0C,2BACX9C,EAAM1T,SAJD,MAeXwwC,EAAAr4C,UAAAi8C,YAAA,WACE,OAAOn8C,KAAK24C,UASdJ,EAAAr4C,UAAAy8C,YAAA,WACE,OAAO38C,KAAK86C,WAWdvC,EAAAr4C,UAAA49C,eAAA,SAAelzB,GACb,IAAM8xB,EAAU18C,KAAK+6C,gBAAgBnwB,EAAGkxB,YACxC,YAAmB7rC,IAAZysC,EAAwBA,EAAU,MAW3CnE,EAAAr4C,UAAAm8C,gBAAA,WACE,OAAOr8C,KAAK44C,cASdL,EAAAr4C,UAAAq8C,cAAA,WACE,OAAkCv8C,KAAK8D,IAAIksB,KAQ7CuoB,EAAAr4C,UAAAuqB,UAAA,SAAUL,GACR,IAAM2zB,EAAQ/9C,KAAKu8C,gBACnB,GAAInyB,aAAkBI,GAAAvlB,QACpB84C,EAAMtzB,UAAUL,OADlB,CAKA,IAAMiB,EAAa0yB,EAAMpzB,YACzBU,EAAW9a,QACX8a,EAAWhC,OAAOe,KAQpBmuB,EAAAr4C,UAAAyqB,UAAA,WAEE,OADe3qB,KAAKu8C,gBAAgB5xB,aAOtC4tB,EAAAr4C,UAAA89C,qBAAA,WAEE,IADA,IAAM3hC,EAAmBrc,KAAKu8C,gBAAgBvjC,sBACrC/X,EAAI,EAAGwG,EAAK4U,EAAiBrb,OAAQC,EAAIwG,IAAMxG,EAAG,CACzD,IAAMkX,EAAQkE,EAAiBpb,GAC/B,GAAKkX,EAAMd,QAAX,CAGA,IAAM4mC,EAAW9lC,EAAMC,MAAM2D,cAC7B,GAAIkiC,IAAaA,EAASC,MACxB,OAAO,EAET,IAAMz3C,EACJ0R,EAAMC,MACNgD,YACF,GAAI3U,GAAUA,EAAO03C,QACnB,OAAO,GAGX,OAAO,GAUT5F,EAAAr4C,UAAAk+C,uBAAA,SAAuB14C,GACrB,IAAM24C,EAAiBjiB,GACrB12B,EACA1F,KAAK69C,UAAU3O,iBAEjB,OAAOlvC,KAAKs+C,+BAA+BD,IAS7C9F,EAAAr4C,UAAAo+C,+BAAA,SAA+B54C,GAC7B,IAAMmW,EAAa7b,KAAKi6C,YACxB,OAAKp+B,EAGIpW,EACLoW,EAAWyC,2BACX5Y,EAAWqC,MAAM,EAAG,IAJf,MAaXwwC,EAAAr4C,UAAA6b,YAAA,WACE,OAAO/b,KAAK2a,WASd49B,EAAAr4C,UAAAq+C,QAAA,WACE,OACEv+C,KAAK8D,IAAIksB,KAWbuoB,EAAAr4C,UAAA29C,QAAA,WACE,OAA4B79C,KAAK8D,IAAIksB,KAQvCuoB,EAAAr4C,UAAA6mB,YAAA,WACE,OAAO/mB,KAAKs6C,WAUd/B,EAAAr4C,UAAAs+C,oBAAA,WACE,OAAOx+C,KAAKw6C,mBAUdjC,EAAAr4C,UAAAu+C,6BAAA,WACE,OAAOz+C,KAAK06C,4BAMdnC,EAAAr4C,UAAAqvB,iBAAA,WACE,IAAMmvB,EAAgB1+C,KAAK49C,mBAC3B,OAAOc,EAAgBA,EAAcC,cAAgB33C,UAUvDuxC,EAAAr4C,UAAAi7C,gBAAA,SAAgBpoB,EAAMQ,EAAeC,EAAYC,GAC/C,OAAOynB,GAAAC,gBACLn7C,KAAKi6C,YACLlnB,EACAQ,EACAC,EACAC,IAQJ8kB,EAAAr4C,UAAAm5C,mBAAA,SAAmBuF,EAAchrC,GAC/B,IAAMvC,EAAOuC,GAAYgrC,EAAavtC,KAChCwtC,EAAkB,IAAIhwB,GAAA5pB,QAAgBoM,EAAMrR,KAAM4+C,GACxD5+C,KAAK8+C,sBAAsBD,IAM7BtG,EAAAr4C,UAAA4+C,sBAAA,SAAsBD,GACpB,GAAK7+C,KAAKi6C,YAAV,CAKA,IAAMluB,EACJ8yB,EAAgB9yB,cAEZzV,EAAYyV,EAAc1a,KAChC,GACEiF,IAAcgX,IACdhX,IAActC,IACdsC,IAActC,GACd,CACA,IAAMsb,EAAMtvB,KAAKuvB,mBACXwvB,EAAW/+C,KAAKs6C,UAAU7qB,YAC5BzvB,KAAKs6C,UAAU7qB,cACfH,EACEzuB,EAA8BkrB,EAAclrB,OAClD,GAGEb,KAAK06C,2BAA2BsE,SAASn+C,MAKvCk+C,IAAazvB,EAAMA,EAAI2vB,gBAAkBF,GAAUC,SAASn+C,GAE9D,OAIJ,GADAg+C,EAAgBhjC,WAAa7b,KAAKi6C,aACU,IAAxCj6C,KAAKkT,cAAc2rC,GAErB,IADA,IAAMK,EAAoBl/C,KAAKq8C,kBAAkB/yB,WAAWvhB,QACnD9G,EAAIi+C,EAAkBl+C,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACtD,IAAM+6C,EAAckD,EAAkBj+C,GACtC,GACE+6C,EAAY37B,WAAargB,MACxBg8C,EAAYmD,aACZn/C,KAAK49C,mBAKR,IADa5B,EAAYvoC,YAAYorC,IACxBA,EAAgBvtC,mBAC3B,SASRinC,EAAAr4C,UAAAk/C,iBAAA,WACE,IAAMvjC,EAAa7b,KAAKi6C,YAWlBoF,EAAYr/C,KAAKi7C,WACvB,IAAKoE,EAAU9tB,UAAW,CACxB,IAAI2B,EAAkBlzB,KAAKs5C,iBACvBnmB,EAAcD,EAClB,GAAIrX,EAAY,CACd,IAAMyjC,EAAQzjC,EAAW0jC,UACzB,GAAID,EAAM7qB,KAAuB6qB,EAAM7qB,IAAuB,CAC5D,IAAM+qB,EAAmBnQ,KAAKC,MAAQzzB,EAAW4jC,KAAO,EACxDvsB,EAAkBssB,EAAmB,EAAI,EACzCrsB,EAAcqsB,EAAmB,EAAI,GAGrCH,EAAUvsB,kBAAoBI,IAChCmsB,EAAUrtB,eACVqtB,EAAUpsB,cAAcC,EAAiBC,IAIzCtX,GAAc7b,KAAK2a,YAAckB,EAAW+yB,WACjB,IAAzB5uC,KAAKk5C,iBACHl5C,KAAK2Q,YAAYoJ,KACnB/Z,KAAK2a,UAAUyD,oBACbrE,GACA8B,IAGiB,IAAjB7b,KAAKm5C,UACPn5C,KAAKm5C,SAAU,EACfn5C,KAAKkT,cACH,IAAIqZ,GAAAtnB,QAAS8qB,GAAsB/vB,KAAM6b,OAGnB,IAAjB7b,KAAKm5C,UACdn5C,KAAKm5C,SAAU,EACfn5C,KAAKkT,cACH,IAAIqZ,GAAAtnB,QAAS8qB,GAAwB/vB,KAAM6b,MAMjD,IADA,IAAM0E,EAAsBvgB,KAAKg7C,qBACxB/5C,EAAI,EAAGwG,EAAK8Y,EAAoBvf,OAAQC,EAAIwG,IAAMxG,EACzDsf,EAAoBtf,GAAGjB,KAAM6b,GAE/B0E,EAAoBvf,OAAS,GAM/Bu3C,EAAAr4C,UAAAq7C,mBAAA,WACMv7C,KAAK69C,YAAc79C,KAAK69C,UAAU9O,gBACpC/uC,KAAK69C,UAAU7O,mBAAmB,GAGpChvC,KAAK6a,UAMP09B,EAAAr4C,UAAAs7C,qBAAA,WACE,GAAIx7C,KAAK26C,wBAAyB,CAChC,IAAK,IAAI15C,EAAI,EAAGwG,EAAKzH,KAAK66C,yBAAyB75C,OAAQC,EAAIwG,IAAMxG,EACnEuT,GAAcxU,KAAK66C,yBAAyB55C,IAE9CjB,KAAK66C,yBAA2B,KAChC76C,KAAKs6C,UAAUr2C,oBACb+P,GACAhU,KAAKo5C,0BAEPp5C,KAAKs6C,UAAUr2C,oBACb+P,GACAhU,KAAKo5C,0BAEPp5C,KAAK26C,wBAAwBx6C,UAC7BH,KAAK26C,wBAA0B,KAC/Bh4B,GAAW3iB,KAAKs6C,WAQlB,IAAMoE,EAAgB1+C,KAAK49C,mBAC3B,GAAKc,EAYE,CAUL,IAAK,IAAMpvC,KATXovC,EAAc7vC,YAAY7O,KAAKs6C,WAC1Bt6C,KAAK2a,YACR3a,KAAK2a,UAAY3a,KAAKwc,kBAGxBxc,KAAK26C,wBAA0B,IAAI+E,GAAAz6C,QACjCjF,KACAA,KAAK8tB,gBAEWrB,GAChBzsB,KAAK26C,wBAAwB32C,iBAC3ByoB,GAAoBnd,GACpBtP,KAAK8+C,sBAAsB1qC,KAAKpU,OAGpCA,KAAKs6C,UAAUt2C,iBACbgQ,GACAhU,KAAKo5C,0BACL,GAEFp5C,KAAKs6C,UAAUt2C,iBACbgQ,GACAhU,KAAKo5C,2BACL31C,GAA0B,CAACC,SAAS,IAGtC,IAAMi8C,EAAc3/C,KAAKuvB,mBAAmBowB,YACtClH,EAAuBz4C,KAAK46C,qBAE9B56C,KAAK46C,qBADL8D,EAEJ1+C,KAAK66C,yBAA2B,CAC9B5mC,GACEwkC,EACAzkC,GACAhU,KAAKq5C,mBACLr5C,MAEFiU,GACEwkC,EACAzkC,GACAhU,KAAKq5C,mBACLr5C,MAEFiU,GAAO0rC,EAAa3rC,GAAkBhU,KAAK4/C,WAAY5/C,YAvDrDA,KAAK2a,YACPmU,aAAa9uB,KAAK05C,0BAClB15C,KAAK05C,8BAA2BzpC,EAChCjQ,KAAKg7C,qBAAqBh6C,OAAS,EACnChB,KAAK2a,UAAUxa,UACfH,KAAK2a,UAAY,MAEf3a,KAAK25C,qBACPjJ,qBAAqB1wC,KAAK25C,oBAC1B35C,KAAK25C,wBAAqB1pC,GAkD9BjQ,KAAK4/C,cAQPrH,EAAAr4C,UAAAk7C,kBAAA,WACEp7C,KAAK6a,UAMP09B,EAAAr4C,UAAA2/C,2BAAA,WACE7/C,KAAK6a,UAMP09B,EAAAr4C,UAAAo7C,mBAAA,WACMt7C,KAAKm6C,2BACP3lC,GAAcxU,KAAKm6C,0BACnBn6C,KAAKm6C,yBAA2B,MAE9Bn6C,KAAKo6C,yBACP5lC,GAAcxU,KAAKo6C,wBACnBp6C,KAAKo6C,uBAAyB,MAEhC,IAAMrB,EAAO/4C,KAAK69C,UACd9E,IACF/4C,KAAK8/C,sBAEL9/C,KAAKm6C,yBAA2BlmC,GAC9B8kC,EACArnC,GACA1R,KAAK6/C,2BACL7/C,MAEFA,KAAKo6C,uBAAyBnmC,GAC5B8kC,EACA/kC,GACAhU,KAAK6/C,2BACL7/C,MAGF+4C,EAAK/J,mBAAmB,IAE1BhvC,KAAK6a,UAMP09B,EAAAr4C,UAAAm7C,yBAAA,WACMr7C,KAAKq6C,kCACPr6C,KAAKq6C,gCAAgCt6B,QAAQvL,IAC7CxU,KAAKq6C,gCAAkC,MAEzC,IAAMvB,EAAa94C,KAAKu8C,gBACpBzD,IACF94C,KAAKw8C,gBAAgB,IAAIpE,GAAA2H,WAAW,WAAYjH,IAChD94C,KAAKq6C,gCAAkC,CACrCpmC,GAAO6kC,EAAYpnC,GAAgC1R,KAAK6a,OAAQ7a,MAChEiU,GAAO6kC,EAAY9kC,GAAkBhU,KAAK6a,OAAQ7a,MAClDiU,GAAO6kC,EAAY,WAAY94C,KAAKw8C,gBAAiBx8C,MACrDiU,GAAO6kC,EAAY,cAAe94C,KAAKggD,mBAAoBhgD,QAG/DA,KAAK6a,UAMP09B,EAAAr4C,UAAA+/C,WAAA,WACE,QAASjgD,KAAKi6C,aAOhB1B,EAAAr4C,UAAAggD,WAAA,WACMlgD,KAAK25C,oBACPjJ,qBAAqB1wC,KAAK25C,oBAE5B35C,KAAK45C,mBAMPrB,EAAAr4C,UAAAymB,WAAA,WAEE,IADA,IAAMxH,EAAcnf,KAAKu8C,gBAAgBvjC,sBAChC/X,EAAI,EAAGwG,EAAK0X,EAAYne,OAAQC,EAAIwG,IAAMxG,EAAG,CACpD,IAAMmX,EAAQ+G,EAAYle,GAAGmX,MACzBA,EAAMqE,eACRrE,EAAM2D,cAAcokC,uBAS1B5H,EAAAr4C,UAAA2a,OAAA,WACM7a,KAAK2a,gBAAyC1K,IAA5BjQ,KAAK25C,qBACzB35C,KAAK25C,mBAAqBnI,sBAAsBxxC,KAAK45C,mBAWzDrB,EAAAr4C,UAAAkgD,cAAA,SAAcrE,GACZ,OAAO/7C,KAAKm8C,cAAcxyB,OAAOoyB,IAUnCxD,EAAAr4C,UAAAmgD,kBAAA,SAAkBrE,GAChB,OAAOh8C,KAAKq8C,kBAAkB1yB,OAAOqyB,IAUvCzD,EAAAr4C,UAAAogD,YAAA,SAAYloC,GAEV,OADepY,KAAKu8C,gBAAgB5xB,YACtBhB,OAAOvR,IAOvBmgC,EAAAr4C,UAAA8/C,mBAAA,SAAmB7sC,GACjBglC,GAAuBhlC,EAAMiF,QAU/BmgC,EAAAr4C,UAAAqgD,cAAA,SAAc7D,GACZ,OAAO18C,KAAK28C,cAAchzB,OAAO+yB,IAOnCnE,EAAAr4C,UAAA25C,aAAA,SAAa4F,GAAb,IAAAl7C,EAAAvE,KACQ4K,EAAO5K,KAAKu+C,UACZxF,EAAO/4C,KAAK69C,UACZ2C,EAAqBxgD,KAAKi6C,YAE5Bp+B,EAAa,KACjB,QAAa5L,IAATrF,GAAsBqtC,GAAQrtC,IAASmuC,GAAQA,EAAKjK,QAAS,CAC/D,IAAMyQ,EAAYxG,EAAK/G,SACrBhyC,KAAKi6C,YAAcj6C,KAAKi6C,YAAYsF,eAAYtvC,GAE5CkK,EAAY4+B,EAAKz9B,WA2BvB,GA1BAO,EAAa,CACX+yB,SAAS,EACTtwB,2BAA4Bte,KAAK85C,4BACjC2G,cAAe,KACfl5C,OAAQiD,GACN2P,EAAU1P,OACV0P,EAAUzP,WACVyP,EAAUxP,SACVC,GAEFkJ,MAAO9T,KAAKg6C,cACZvyB,WAAY,EACZpL,iBAAkBrc,KAAKu8C,gBAAgBvjC,sBACvCygC,WAAYz5C,KAAKw5C,YACjBj7B,2BAA4Bve,KAAK+5C,4BACjCx5B,oBAAqB,GACrB3V,KAAMA,EACNy0C,UAAWr/C,KAAKi7C,WAChBwE,KAAMA,EACNiB,UAAW,GACXvmC,UAAWA,EACXolC,UAAWA,EACX7rB,YAAa,GACbitB,MAAOt+C,EAAOrC,MACd4gD,cAAe,IAEbzmC,EAAUi5B,YAAcj5B,EAAUk5B,eAAgB,CACpD,IAAM1oC,EAAW+Z,MAAMvK,EAAUm5B,cAC7Bn5B,EAAUxP,SACVwP,EAAUm5B,aAEdz3B,EAAWglC,WAAar2C,GACtB2P,EAAUi5B,WACVj5B,EAAUk5B,eACV1oC,EACAC,IAUN,GALA5K,KAAKi6C,YAAcp+B,EAEjB7b,KAAK2a,UACLsB,YAAYJ,GAEVA,EAAY,CASd,GARIA,EAAW+yB,SACb5uC,KAAK6a,SAEPpZ,MAAMvB,UAAUiM,KAAKI,MACnBvM,KAAKg7C,qBACLn/B,EAAW0E,qBAGTigC,IAECxgD,KAAKk6C,kBACJhwC,GAAQlK,KAAKk6C,mBACZjxC,GAAO4S,EAAWtU,OAAQvH,KAAKk6C,oBAElCl6C,KAAKkT,cACH,IAAIqZ,GAAAtnB,QAAS8qB,GAAwB/vB,KAAMwgD,IAE7CxgD,KAAKk6C,gBAAkBlxC,GAAoBhJ,KAAKk6C,kBAKlDl6C,KAAKk6C,kBACJr+B,EAAW0jC,UAAU9qB,MACrB5Y,EAAW0jC,UAAU9qB,MACrBxrB,GAAO4S,EAAWtU,OAAQvH,KAAKk6C,mBAGhCl6C,KAAKkT,cACH,IAAIqZ,GAAAtnB,QAAS8qB,GAAsB/vB,KAAM6b,IAE3C/T,EAAM+T,EAAWtU,OAAQvH,KAAKk6C,kBAIlCl6C,KAAKkT,cAAc,IAAIqZ,GAAAtnB,QAAS8qB,GAAyB/vB,KAAM6b,IAE/D7b,KAAKk5C,gBACHl5C,KAAK2Q,YAAYof,KACjB/vB,KAAK2Q,YAAYof,KACjB/vB,KAAK2Q,YAAYoJ,KACZ/Z,KAAKi7C,WAAWnoB,oBAChB9yB,KAAKi7C,WAAW/pB,aAChBlxB,KAAKg+C,4BACN/tC,EAEDjQ,KAAK05C,2BACR15C,KAAK05C,yBAA2B3qB,YAAW,WACzCxqB,EAAKm1C,8BAA2BzpC,EAChC1L,EAAK66C,qBACJ,KAUP7G,EAAAr4C,UAAA4gD,cAAA,SAAchI,GACZ,IAAMiI,EAAgB/gD,KAAKu8C,gBACvBwE,GACF/gD,KAAKggD,mBAAmB,IAAI5H,GAAA2H,WAAW,cAAegB,IAExD/gD,KAAK+Q,IAAIif,GAAwB8oB,IASnCP,EAAAr4C,UAAA8Q,QAAA,SAAQpG,GACN5K,KAAK+Q,IAAIif,GAAkBplB,IAU7B2tC,EAAAr4C,UAAA08C,UAAA,SAAU/7C,GACRb,KAAK+Q,IAAIif,GAAoBnvB,IAY/B03C,EAAAr4C,UAAAy7C,QAAA,SAAQ5C,GACN,IAAKA,GAAQA,aAAgBC,GAAA/zC,QAC3BjF,KAAK+Q,IAAIif,GAAkB+oB,OAD7B,CAIA/4C,KAAK+Q,IAAIif,GAAkB,IAAIgpB,GAAA/zC,SAE/B,IAAM4K,EAAM7P,KACZ+4C,EAAK0C,MAAK,SAAUC,GAClB7rC,EAAI8rC,QAAQ,IAAI3C,GAAA/zC,QAAKy2C,SASzBnD,EAAAr4C,UAAA0/C,WAAA,WACE,IAAMlB,EAAgB1+C,KAAK49C,mBAEvBhzC,OAAOqF,EACX,GAAIyuC,EAAe,CACjB,IAAMsC,EAAgBjyC,iBAAiB2vC,GACjCzyC,EACJyyC,EAAcuC,YACdC,WAAWF,EAA+B,iBAC1CE,WAAWF,EAA2B,aACtCE,WAAWF,EAA4B,cACvCE,WAAWF,EAAgC,kBACvC90C,EACJwyC,EAAcr5B,aACd67B,WAAWF,EAA8B,gBACzCE,WAAWF,EAA0B,YACrCE,WAAWF,EAA6B,eACxCE,WAAWF,EAAiC,mBACzCt8B,MAAMzY,IAAWyY,MAAMxY,KAGvB+rC,GAFHrtC,EAAO,CAACqB,EAAOC,MAIXwyC,EAAcuC,aACdvC,EAAcr5B,cACdq5B,EAAcyC,iBAAiBngD,SAIjC+hB,QAAQC,KACN,qEAMRhjB,KAAKgR,QAAQpG,GACb5K,KAAK8/C,uBAOPvH,EAAAr4C,UAAA4/C,oBAAA,WACE,IAAM/G,EAAO/4C,KAAK69C,UAClB,GAAI9E,EAAM,CACR,IAAInuC,OAAOqF,EACL+wC,EAAgBjyC,iBAAiB/O,KAAKs6C,WACxC0G,EAAc/0C,OAAS+0C,EAAc90C,SACvCtB,EAAO,CACL8E,SAASsxC,EAAc/0C,MAAO,IAC9ByD,SAASsxC,EAAc90C,OAAQ,MAGnC6sC,EAAKnH,gBAAgBhnC,KAG3B2tC,EAngDA,CAA2Bz+B,GAAA7U,aAwlD3Bm8C,GAAe9I,ujBCnnDf+I,GAnHA,SAAAj9C,GAIE,SAAAk9C,EAAY39C,GAAZ,IAAAY,EACEH,EAAAM,KAAA1E,OAAOA,KAED2nB,EAAUhkB,EAAQgkB,eACpBA,GAAYhkB,EAAQ9C,QAAW8mB,EAAQzgB,MAAMuzC,gBAC/C9yB,EAAQzgB,MAAMuzC,cAAgB,QAOhCl2C,EAAKojB,QAAUA,GAAoB,KAMnCpjB,EAAKg9C,QAAU,KAMfh9C,EAAK2Z,KAAO,KAMZ3Z,EAAK0mB,aAAe,GAEhBtnB,EAAQkX,SACVtW,EAAKsW,OAASlX,EAAQkX,QAGpBlX,EAAQ9C,QACV0D,EAAKq4C,UAAUj5C,EAAQ9C,UAwE7B,OAjHsB2gD,GAAAF,EAAAl9C,GAgDpBk9C,EAAAphD,UAAAE,gBAAA,WACEuiB,GAAW3iB,KAAK2nB,SAChBvjB,EAAAlE,UAAME,gBAAesE,KAAA1E,OAQvBshD,EAAAphD,UAAAmgB,OAAA,WACE,OAAOrgB,KAAKke,MAWdojC,EAAAphD,UAAA4a,OAAA,SAAOjL,GACD7P,KAAKke,MACPyE,GAAW3iB,KAAK2nB,SAElB,IAAK,IAAI1mB,EAAI,EAAGwG,EAAKzH,KAAKirB,aAAajqB,OAAQC,EAAIwG,IAAMxG,EACvDuT,GAAcxU,KAAKirB,aAAahqB,KAElCjB,KAAKirB,aAAajqB,OAAS,EAC3BhB,KAAKke,KAAOrO,EACRA,MACa7P,KAAKuhD,QAChBvhD,KAAKuhD,QACL1xC,EAAI4uC,gCACD5vC,YAAY7O,KAAK2nB,SACpB3nB,KAAK6a,SAAW5Y,GAClBjC,KAAKirB,aAAa9e,KAChB8H,GAAOpE,EAAKkgB,GAAyB/vB,KAAK6a,OAAQ7a,OAGtD6P,EAAIgL,WASRymC,EAAAphD,UAAA2a,OAAA,SAAO4mC,KAWPH,EAAAphD,UAAA08C,UAAA,SAAU/7C,GACRb,KAAKuhD,QACe,iBAAX1gD,EAAsBmG,SAAS0xC,eAAe73C,GAAUA,GAErEygD,EAjHA,CAAsBxnC,GAAA7U,meCyUtBy8C,GAxUA,SAAAt9C,GAIE,SAAAu9C,EAAY94B,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,IAE5CtkB,EAAAH,EAAAM,KAAA1E,KAAM,CACJ2nB,QAAS3gB,SAASC,cAAc,OAChC4T,OAAQlX,EAAQkX,OAChBha,OAAQ8C,EAAQ9C,UACjBb,MAMI4hD,WAAa56C,SAASC,cAAc,MAMzC1C,EAAKs9C,gBACmB5xC,IAAtBtM,EAAQm+C,WAA0Bn+C,EAAQm+C,UAM5Cv9C,EAAKw9C,eAAiBx9C,EAAKs9C,WAM3Bt9C,EAAKy9C,0BAA+C/xC,IAAxBtM,EAAQs+C,YAMpC19C,EAAK29C,kBACqBjyC,IAAxBtM,EAAQs+C,aAA4Bt+C,EAAQs+C,YAEzC19C,EAAK29C,eACR39C,EAAKs9C,YAAa,GAGpB,IAAMjqC,OACkB3H,IAAtBtM,EAAQiU,UAA0BjU,EAAQiU,UAAY,iBAElDuqC,OACiBlyC,IAArBtM,EAAQw+C,SAAyBx+C,EAAQw+C,SAAW,eAEhDC,OACwBnyC,IAA5BtM,EAAQy+C,gBACJz+C,EAAQy+C,gBACRxqC,EAAY,UAEZyqC,OACsBpyC,IAA1BtM,EAAQ0+C,cAA8B1+C,EAAQ0+C,cAAgB,IAE1DC,OAC0BryC,IAA9BtM,EAAQ2+C,kBACJ3+C,EAAQ2+C,kBACR1qC,EAAY,YAEW,iBAAlByqC,GAKT99C,EAAKg+C,eAAiBv7C,SAASC,cAAc,QAC7C1C,EAAKg+C,eAAeC,YAAcH,EAClC99C,EAAKg+C,eAAe3qC,UAAY0qC,GAEhC/9C,EAAKg+C,eAAiBF,EAGxB,IAAMj8B,OAA0BnW,IAAlBtM,EAAQyiB,MAAsBziB,EAAQyiB,MAAQ,IAEvC,iBAAVA,GAKT7hB,EAAKk+C,OAASz7C,SAASC,cAAc,QACrC1C,EAAKk+C,OAAOD,YAAcp8B,EAC1B7hB,EAAKk+C,OAAO7qC,UAAYwqC,GAExB79C,EAAKk+C,OAASr8B,EAGhB,IAAMs8B,EACJn+C,EAAK29C,eAAiB39C,EAAKs9C,WAAat9C,EAAKg+C,eAAiBh+C,EAAKk+C,OAMrEl+C,EAAKo+C,cAAgB37C,SAASC,cAAc,UAC5C1C,EAAKo+C,cAAcC,aAAa,OAAQ,UACxCr+C,EAAKo+C,cAAcC,aAAa,gBAAiBrgD,QAAQgC,EAAKs9C,aAC9Dt9C,EAAKo+C,cAAcE,MAAQV,EAC3B59C,EAAKo+C,cAAc9zC,YAAY6zC,GAE/Bn+C,EAAKo+C,cAAc3+C,iBACjBgQ,GACAzP,EAAKu+C,aAAa1uC,KAAK7P,IACvB,GAGF,IAAMw+C,EACJnrC,EAAAA,+BAKCrT,EAAKs9C,YAAct9C,EAAK29C,aAAe,gBAAwB,KAC/D39C,EAAK29C,aAAe,GAAK,qBACtBv6B,EAAUpjB,EAAKojB,eACrBA,EAAQ/P,UAAYmrC,EACpBp7B,EAAQ9Y,YAAYtK,EAAKo+C,eACzBh7B,EAAQ9Y,YAAYtK,EAAKq9C,YAOzBr9C,EAAKy+C,sBAAwB,GAM7Bz+C,EAAK4iB,kBAAmB,IA6L5B,OAtU0B87B,GAAAtB,EAAAv9C,GAkJxBu9C,EAAAzhD,UAAAgjD,2BAAA,SAA2BrnC,GAezB,IAVA,IAAMsnC,EAAS,GAMTC,EAAsB,GAExBnB,GAAc,EACZ5lC,EAAmBR,EAAWQ,iBAC3Bpb,EAAI,EAAGwG,EAAK4U,EAAiBrb,OAAQC,EAAIwG,IAAMxG,EAAG,CACzD,IAAMiZ,EAAamC,EAAiBpb,GACpC,GAAKye,GAAAC,OAAOzF,EAAY2B,EAAW1B,WAAnC,CAIA,IAAM1T,EACJyT,EAAW9B,MACXgD,YACF,GAAK3U,EAAL,CAIA,IAAM48C,EAAoB58C,EAAO68C,kBACjC,GAAKD,EAAL,CAIA,IAAME,EAAeF,EAAkBxnC,GACvC,GAAK0nC,EAOL,GAHAtB,EACEA,IAAuD,IAAxCx7C,EAAO+8C,6BAEpB/hD,MAAMC,QAAQ6hD,GAChB,IAAK,IAAI/jC,EAAI,EAAGqlB,EAAK0e,EAAaviD,OAAQwe,EAAIqlB,IAAMrlB,EAC5C+jC,EAAa/jC,KAAM2jC,IACvBC,EAAoBj3C,KAAKo3C,EAAa/jC,IACtC2jC,EAAOI,EAAa/jC,KAAM,QAIxB+jC,KAAgBJ,IACpBC,EAAoBj3C,KAAKo3C,GACzBJ,EAAOI,IAAgB,MAO7B,OAHKvjD,KAAKgiD,sBACRhiD,KAAKyjD,eAAexB,GAEfmB,GAOTzB,EAAAzhD,UAAAwjD,eAAA,SAAe7nC,GACb,GAAKA,EAAL,CAQA,IAAM0nC,EAAevjD,KAAKkjD,2BAA2BrnC,GAE/CxE,EAAUksC,EAAaviD,OAAS,EAMtC,GALIhB,KAAKmnB,kBAAoB9P,IAC3BrX,KAAK2nB,QAAQzgB,MAAMie,QAAU9N,EAAU,GAAK,OAC5CrX,KAAKmnB,iBAAmB9P,IAGtB1V,EAAO4hD,EAAcvjD,KAAKgjD,uBAA9B,EtDpLE,SAAyBj8C,GAC7B,KAAOA,EAAK48C,WACV58C,EAAKiI,YAAYjI,EAAK48C,WsDsLtBC,CAAe5jD,KAAK4hD,YAGpB,IAAK,IAAI3gD,EAAI,EAAGwG,EAAK87C,EAAaviD,OAAQC,EAAIwG,IAAMxG,EAAG,CACrD,IAAM0mB,EAAU3gB,SAASC,cAAc,MACvC0gB,EAAQ9C,UAAY0+B,EAAatiD,GACjCjB,KAAK4hD,WAAW/yC,YAAY8Y,GAG9B3nB,KAAKgjD,sBAAwBO,QA5BvBvjD,KAAKmnB,mBACPnnB,KAAK2nB,QAAQzgB,MAAMie,QAAU,OAC7BnlB,KAAKmnB,kBAAmB,IAiC9Bw6B,EAAAzhD,UAAA4iD,aAAA,SAAa3vC,GACXA,EAAM3B,iBACNxR,KAAK6jD,gBACL7jD,KAAK+hD,eAAiB/hD,KAAK6hD,YAM7BF,EAAAzhD,UAAA2jD,cAAA,WACE7jD,KAAK2nB,QAAQm8B,UAAUC,OvDlPI,gBuDmPvB/jD,KAAK6hD,WACPx/B,GAAYriB,KAAKuiD,eAAgBviD,KAAKyiD,QAEtCpgC,GAAYriB,KAAKyiD,OAAQziD,KAAKuiD,gBAEhCviD,KAAK6hD,YAAc7hD,KAAK6hD,WACxB7hD,KAAK2iD,cAAcC,aAAa,gBAAiBrgD,QAAQvC,KAAK6hD,cAQhEF,EAAAzhD,UAAA8jD,eAAA,WACE,OAAOhkD,KAAKkiD,cAQdP,EAAAzhD,UAAAujD,eAAA,SAAexB,GACTjiD,KAAKkiD,eAAiBD,IAG1BjiD,KAAKkiD,aAAeD,EACpBjiD,KAAK2nB,QAAQm8B,UAAUC,OAAO,oBAC1B/jD,KAAK+hD,gBACP/hD,KAAK6jD,kBAWTlC,EAAAzhD,UAAA+jD,aAAA,SAAanC,GACX9hD,KAAK+hD,eAAiBD,EACjB9hD,KAAKkiD,cAAgBliD,KAAK6hD,aAAeC,GAG9C9hD,KAAK6jD,iBASPlC,EAAAzhD,UAAAgkD,aAAA,WACE,OAAOlkD,KAAK6hD,YAQdF,EAAAzhD,UAAA2a,OAAA,SAAO4mC,GACLzhD,KAAK0jD,eAAejC,EAAS5lC,aAEjC8lC,EAtUA,CAA0BwC,GAAAl/C,ghBCuI1Bm/C,GApJA,SAAAhgD,GAIE,SAAAigD,EAAYx7B,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,GAE5CtkB,EAAAH,EAAAM,KAAA1E,KAAM,CACJ2nB,QAAS3gB,SAASC,cAAc,OAChC4T,OAAQlX,EAAQkX,OAChBha,OAAQ8C,EAAQ9C,UACjBb,KAED,IAAM4X,OACkB3H,IAAtBtM,EAAQiU,UAA0BjU,EAAQiU,UAAY,YAElDwO,OAA0BnW,IAAlBtM,EAAQyiB,MAAsBziB,EAAQyiB,MAAQ,IAEtDk+B,OACyBr0C,IAA7BtM,EAAQ2gD,iBACJ3gD,EAAQ2gD,iBACR,aAMN//C,EAAKk+C,OAAS,KAEO,iBAAVr8B,GACT7hB,EAAKk+C,OAASz7C,SAASC,cAAc,QACrC1C,EAAKk+C,OAAO7qC,UAAY0sC,EACxB//C,EAAKk+C,OAAOD,YAAcp8B,IAE1B7hB,EAAKk+C,OAASr8B,EACd7hB,EAAKk+C,OAAOqB,UAAUS,IAAID,IAG5B,IAAMnC,EAAWx+C,EAAQw+C,SAAWx+C,EAAQw+C,SAAW,iBAEjD9yB,EAASroB,SAASC,cAAc,UACtCooB,EAAOzX,UAAYA,EAAY,SAC/ByX,EAAOuzB,aAAa,OAAQ,UAC5BvzB,EAAOwzB,MAAQV,EACf9yB,EAAOxgB,YAAYtK,EAAKk+C,QAExBpzB,EAAOrrB,iBACLgQ,GACAzP,EAAKu+C,aAAa1uC,KAAK7P,IACvB,GAGF,IAAMw+C,EACJnrC,EAAAA,8BACI+P,EAAUpjB,EAAKojB,eACrBA,EAAQ/P,UAAYmrC,EACpBp7B,EAAQ9Y,YAAYwgB,GAEpB9qB,EAAKigD,gBAAkB7gD,EAAQ8gD,WAAa9gD,EAAQ8gD,gBAAax0C,EAMjE1L,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,IAMrEnrC,EAAKogD,eAAiC10C,IAArBtM,EAAQihD,UAAyBjhD,EAAQihD,SAM1DrgD,EAAKsgD,eAAY50C,EAEb1L,EAAKogD,WACPpgD,EAAKojB,QAAQm8B,UAAUS,IxD3FD,ewD8J5B,OAlJqBO,GAAAT,EAAAjgD,GAuFnBigD,EAAAnkD,UAAA4iD,aAAA,SAAa3vC,GACXA,EAAM3B,sBACuBvB,IAAzBjQ,KAAKwkD,gBACPxkD,KAAKwkD,kBAELxkD,KAAK+kD,eAOTV,EAAAnkD,UAAA6kD,YAAA,WACE,IACMhM,EADM/4C,KAAKqgB,SACAw9B,UACjB,GAAK9E,EAAL,CAKA,IAAMpuC,EAAWouC,EAAKpK,mBACL1+B,IAAbtF,IACE3K,KAAK0kD,UAAY,GAAK/5C,GAAY,EAAIrE,KAAKgH,KAAQ,EACrDyrC,EAAKnK,QAAQ,CACXjkC,SAAU,EACV+kC,SAAU1vC,KAAK0kD,UACf/U,OAAQtR,KAGV0a,EAAKjL,YAAY,MAUvBuW,EAAAnkD,UAAA2a,OAAA,SAAO4mC,GACL,IAAM5lC,EAAa4lC,EAAS5lC,WAC5B,GAAKA,EAAL,CAGA,IAAMlR,EAAWkR,EAAW1B,UAAUxP,SACtC,GAAIA,GAAY3K,KAAK6kD,UAAW,CAC9B,IAAMz/C,EAAY,UAAYuF,EAAW,OACzC,GAAI3K,KAAK2kD,UAAW,CAClB,IAAM3F,EAAWh/C,KAAK2nB,QAAQm8B,UAAU9E,SxDnJpB,awDoJfA,GAAyB,IAAbr0C,EAENq0C,GAAyB,IAAbr0C,GACrB3K,KAAK2nB,QAAQm8B,UAAUn6B,OxDvJL,awDqJlB3pB,KAAK2nB,QAAQm8B,UAAUS,IxDrJL,awD0JtBvkD,KAAKyiD,OAAOv7C,MAAM9B,UAAYA,EAEhCpF,KAAK6kD,UAAYl6C,IAErB05C,EAlJA,CAAqBF,GAAAl/C,ghBC8HrB+/C,GA9HA,SAAA5gD,GAIE,SAAA6gD,EAAYp8B,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,GAE5CtkB,EAAAH,EAAAM,KAAA1E,KAAM,CACJ2nB,QAAS3gB,SAASC,cAAc,OAChCpG,OAAQ8C,EAAQ9C,UACjBb,KAED,IAAM4X,OACkB3H,IAAtBtM,EAAQiU,UAA0BjU,EAAQiU,UAAY,UAElDs4B,OAA0BjgC,IAAlBtM,EAAQusC,MAAsBvsC,EAAQusC,MAAQ,EAEtDgV,OACwBj1C,IAA5BtM,EAAQuhD,gBACJvhD,EAAQuhD,gBACRttC,EAAY,MAEZutC,OACyBl1C,IAA7BtM,EAAQwhD,iBACJxhD,EAAQwhD,iBACRvtC,EAAY,OAEZwtC,OACoBn1C,IAAxBtM,EAAQyhD,YAA4BzhD,EAAQyhD,YAAc,IACtDC,OACqBp1C,IAAzBtM,EAAQ0hD,aAA6B1hD,EAAQ0hD,aAAe,IAExDC,OACuBr1C,IAA3BtM,EAAQ2hD,eAA+B3hD,EAAQ2hD,eAAiB,UAC5DC,OACwBt1C,IAA5BtM,EAAQ4hD,gBACJ5hD,EAAQ4hD,gBACR,WAEAC,EAAYx+C,SAASC,cAAc,UACzCu+C,EAAU5tC,UAAYstC,EACtBM,EAAU5C,aAAa,OAAQ,UAC/B4C,EAAU3C,MAAQyC,EAClBE,EAAU32C,YACe,iBAAhBu2C,EACHp+C,SAASy+C,eAAeL,GACxBA,GAGNI,EAAUxhD,iBACRgQ,GACAzP,EAAKu+C,aAAa1uC,KAAK7P,EAAM2rC,IAC7B,GAGF,IAAMwV,EAAa1+C,SAASC,cAAc,UAC1Cy+C,EAAW9tC,UAAYutC,EACvBO,EAAW9C,aAAa,OAAQ,UAChC8C,EAAW7C,MAAQ0C,EACnBG,EAAW72C,YACe,iBAAjBw2C,EACHr+C,SAASy+C,eAAeJ,GACxBA,GAGNK,EAAW1hD,iBACTgQ,GACAzP,EAAKu+C,aAAa1uC,KAAK7P,GAAO2rC,IAC9B,GAGF,IAAM6S,EACJnrC,EAAAA,8BACI+P,EAAUpjB,EAAKojB,eACrBA,EAAQ/P,UAAYmrC,EACpBp7B,EAAQ9Y,YAAY22C,GACpB79B,EAAQ9Y,YAAY62C,GAMpBnhD,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,MA0CzE,OA5HmBiW,GAAAV,EAAA7gD,GA0FjB6gD,EAAA/kD,UAAA4iD,aAAA,SAAa5S,EAAO/8B,GAClBA,EAAM3B,iBACNxR,KAAK4lD,aAAa1V,IAOpB+U,EAAA/kD,UAAA0lD,aAAA,SAAa1V,GACX,IACM6I,EADM/4C,KAAKqgB,SACAw9B,UACjB,GAAK9E,EAAL,CAKA,IAAM8M,EAAc9M,EAAKtK,UACzB,QAAoBx+B,IAAhB41C,EAA2B,CAC7B,IAAMC,EAAU/M,EAAKxC,mBAAmBsP,EAAc3V,GAClDlwC,KAAK0kD,UAAY,GACf3L,EAAKhK,gBACPgK,EAAKtI,mBAEPsI,EAAKnK,QAAQ,CACXx0B,KAAM0rC,EACNpW,SAAU1vC,KAAK0kD,UACf/U,OAAQtR,MAGV0a,EAAK9K,QAAQ6X,MAIrBb,EA5HA,CAAmBd,GAAAl/C,yKC1BnB,IAAA8gD,GACU,meC0HJ,SAAUC,GAAIjN,EAAM7I,EAAO+F,GAC/B,IAAMxE,EAAgBsH,EAAKrK,oBAC3B,GAAI+C,EAAe,CACjB,IAAMhnC,EAAS,CAACgnC,EAAc,GAAKvB,EAAM,GAAIuB,EAAc,GAAKvB,EAAM,IACtE6I,EAAK5J,gBAAgB,CACnBO,cAA2Bz/B,IAAjBgmC,EAA6BA,EAAe,IACtDtG,OAAQpR,GACR9zB,OAAQsuC,EAAKpE,qBAAqBlqC,MAWlC,SAAUw7C,GAAYlN,EAAM7I,EAAO1O,EAAYyU,GACnD,IAAM4P,EAAc9M,EAAKtK,UAEzB,QAAoBx+B,IAAhB41C,EAAJ,CAIA,IAAMC,EAAU/M,EAAKxC,mBAAmBsP,EAAc3V,GAChDsF,EAAgBuD,EAAK/I,qBAAqB8V,GAE5C/M,EAAKhK,gBACPgK,EAAKtI,mBAEPsI,EAAKnK,QAAQ,CACXlkC,WAAY8qC,EACZtW,OAAQsC,EACRkO,cAA2Bz/B,IAAjBgmC,EAA6BA,EAAe,IACtDtG,OAAQtR,UAIZ6nB,GAjIA,SAAA9hD,GAIE,SAAA+hD,EAAYt9B,GAAZ,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,YAKPuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAED8T,GAAeA,EAAYpV,cAC7BlP,EAAKkP,YAAcoV,EAAYpV,aAOjClP,EAAK2Z,KAAO,KAEZ3Z,EAAK6hD,WAAU,KAmDnB,OAnF0BC,GAAAF,EAAA/hD,GAyCxB+hD,EAAAjmD,UAAAi/C,UAAA,WACE,OAA+Bn/C,KAAK8D,IAAIiiD,KAQ1CI,EAAAjmD,UAAAmgB,OAAA,WACE,OAAOrgB,KAAKke,MASdioC,EAAAjmD,UAAAuT,YAAA,SAAYorC,GACV,OAAO,GASTsH,EAAAjmD,UAAAkmD,UAAA,SAAUE,GACRtmD,KAAK+Q,IAAIg1C,GAA4BO,IASvCH,EAAAjmD,UAAA4a,OAAA,SAAOjL,GACL7P,KAAKke,KAAOrO,GAEhBs2C,EAnFA,CAA0BrsC,GAAA7U,meCuB1BshD,GA9CA,SAAAniD,GAIE,SAAAoiD,EAAY39B,GAAZ,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,KAED2D,EAAUklB,GAA4B,UAM5CtkB,EAAKkiD,OAAS9iD,EAAQusC,MAAQvsC,EAAQusC,MAAQ,EAM9C3rC,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,MAyBzE,OA5C8BgX,GAAAF,EAAApiD,GA4B5BoiD,EAAAtmD,UAAAuT,YAAA,SAAYorC,GACV,IAAI8H,GAAY,EAChB,GAAI9H,EAAgBxtC,MAAQob,GAAoBG,SAAU,CACxD,IAAMgyB,EACJC,EAAgB9yB,cAEZlc,EAAMgvC,EAAgBhvC,IACtBqvB,EAAS2f,EAAgBn5C,WACzBwqC,EAAQ0O,EAAagI,UAAY5mD,KAAKymD,OAASzmD,KAAKymD,OACpD1N,EAAOlpC,EAAIguC,UACjBgJ,GAAAC,YAAY/N,EAAM7I,EAAOhR,EAAQl/B,KAAK0kD,WACtC9F,EAAaptC,iBACbm1C,GAAY,EAEd,OAAQA,GAEZH,EA5CA,CAA8BK,GAAA5hD,imBCmMxB,SAAU8hD,GAAStM,GAIvB,IAHA,IAAMz5C,EAASy5C,EAAcz5C,OACzB6uB,EAAU,EACVC,EAAU,EACL7uB,EAAI,EAAGA,EAAID,EAAQC,IAC1B4uB,GAAW4qB,EAAcx5C,GAAG4uB,QAC5BC,GAAW2qB,EAAcx5C,GAAG6uB,QAE9B,MAAO,CAACD,EAAU7uB,EAAQ8uB,EAAU9uB,OAiBtCgmD,GAhMA,SAAA5iD,GAIE,SAAA6iD,EAAYp+B,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,UAE5CtkB,EAAAH,EAAAM,KAAA1E,KACgE2D,IAA9D3D,KAGE2D,EAAQujD,kBACV3iD,EAAK2iD,gBAAkBvjD,EAAQujD,iBAG7BvjD,EAAQwjD,kBACV5iD,EAAK4iD,gBAAkBxjD,EAAQwjD,iBAG7BxjD,EAAQyjD,kBACV7iD,EAAK6iD,gBAAkBzjD,EAAQyjD,iBAG7BzjD,EAAQ0jD,gBACV9iD,EAAK8iD,cAAgB1jD,EAAQ0jD,eAG3B1jD,EAAQ2jD,WACV/iD,EAAK+iD,SAAW3jD,EAAQ2jD,UAO1B/iD,EAAKgjD,wBAAyB,EAM9BhjD,EAAKijD,iBAAmB,GAMxBjjD,EAAKkjD,eAAiB,KAkH1B,OAjKiCC,GAAAT,EAAA7iD,GAwD/B6iD,EAAA/mD,UAAAynD,gBAAA,WACE,OAAO3nD,KAAKynD,eAAezmD,QAS7BimD,EAAA/mD,UAAAgnD,gBAAA,SAAgBrI,GACd,OAAO,GAQToI,EAAA/mD,UAAAinD,gBAAA,SAAgBtI,KAUhBoI,EAAA/mD,UAAAuT,YAAA,SAAYorC,GACV,IAAKA,EAAgB9yB,cACnB,OAAO,EAGT,IAAI46B,GAAY,EAEhB,GADA3mD,KAAK4nD,uBAAuB/I,GACxB7+C,KAAKunD,wBACP,GAAI1I,EAAgBxtC,MAAQob,GAAoBI,YAC9C7sB,KAAKmnD,gBAAgBtI,GAErBA,EAAgB9yB,cAAcva,sBACzB,GAAIqtC,EAAgBxtC,MAAQob,GAAoBO,UAAW,CAChE,IAAM66B,EAAY7nD,KAAKqnD,cAAcxI,GACrC7+C,KAAKunD,uBACHM,GAAa7nD,KAAKynD,eAAezmD,OAAS,QAG9C,GAAI69C,EAAgBxtC,MAAQob,GAAoBM,YAAa,CAC3D,IAAM+6B,EAAU9nD,KAAKknD,gBAAgBrI,GACrC7+C,KAAKunD,uBAAyBO,EAC9BnB,EAAY3mD,KAAKsnD,SAASQ,QACjBjJ,EAAgBxtC,MAAQob,GAAoBK,aACrD9sB,KAAKonD,gBAAgBvI,GAGzB,OAAQ8H,GAQVM,EAAA/mD,UAAAknD,gBAAA,SAAgBvI,KAQhBoI,EAAA/mD,UAAAmnD,cAAA,SAAcxI,GACZ,OAAO,GASToI,EAAA/mD,UAAAonD,SAAA,SAASQ,GACP,OAAOA,GAOTb,EAAA/mD,UAAA0nD,uBAAA,SAAuB/I,GACrB,GAqCJ,SAAgCA,GAC9B,IAAMxtC,EAAOwtC,EAAgBxtC,KAC7B,OACEA,IAASob,GAAoBM,aAC7B1b,IAASob,GAAoBI,aAC7Bxb,IAASob,GAAoBO,UA1CzB+6B,CAAuBlJ,GAAkB,CAC3C,IAAMx3B,EAAQw3B,EAAgB9yB,cAExBnB,EAAKvD,EAAM6H,UAAU4sB,WACvB+C,EAAgBxtC,MAAQob,GAAoBO,iBACvChtB,KAAKwnD,iBAAiB58B,IACpBi0B,EAAgBxtC,MAAQob,GAAoBM,aAE5CnC,KAAM5qB,KAAKwnD,oBADpBxnD,KAAKwnD,iBAAiB58B,GAAMvD,GAK9BrnB,KAAKynD,eAAiBr1C,GAAUpS,KAAKwnD,oBAG3CP,EAjKA,CAAiCJ,GAAA5hD,SCzB3B,SAAU+iD,GAAInZ,GAClB,IAAMoZ,EAAaj2C,UAKnB,OAAO,SAAUmB,GAEf,IADA,IAAI+0C,GAAO,EACFjnD,EAAI,EAAGwG,EAAKwgD,EAAWjnD,OAAQC,EAAIwG,IAC1CygD,EAAOA,GAAQD,EAAWhnD,GAAGkS,MADmBlS,GAMlD,OAAOinD,GAYJ,IAmBMC,GAAmB,SAAUtJ,GACxC,IAAM9yB,EACJ8yB,EAAgB9yB,cAElB,OACEA,EAAcq8B,UACZr8B,EAAcs8B,SAAWt8B,EAAcu8B,UACzCv8B,EAAc66B,UAwBL2B,GAAoB,SAAUp1C,GACzC,OAAOA,EAAMtD,IAAI+tC,mBAAmB4K,aAAa,aAb9B,SAAUr1C,GAC7B,IAAMurC,EAAgBvrC,EAAMtD,IAAI+tC,mBAC1B6K,EAAgBt1C,EAAMtD,IAAI0f,mBAAmBk5B,cACnD,OAAO/J,EAAcM,SAASyJ,GAW1BC,CAAMv1C,IAWCw1C,GAAS5mD,EAsBT6mD,GAAoB,SAAU/J,GACzC,IAAM9yB,EACJ8yB,EAAgB9yB,cAElB,OAA+B,GAAxBA,EAAcsD,UAAiBxsB,GAAUE,GAAOgpB,EAAcu8B,UAsD1DO,GAAiB,SAAUhK,GACtC,IAAM9yB,EACJ8yB,EAAgB9yB,cAElB,OACGA,EAAcq8B,UACbr8B,EAAcs8B,SAAWt8B,EAAcu8B,WACxCv8B,EAAc66B,UAgCNkC,GAAe,SAAUjK,GACpC,IAAM9yB,EACJ8yB,EAAgB9yB,cAElB,OACGA,EAAcq8B,UACbr8B,EAAcs8B,SAAWt8B,EAAcu8B,UACzCv8B,EAAc66B,UAYLmC,GAAoB,SAAUlK,GACzC,IAGMmK,EAFJnK,EAAgB9yB,cAEoClrB,OAAQmoD,QAC9D,MAAmB,UAAZA,GAAmC,WAAZA,GAAoC,aAAZA,GAU3CC,GAAY,SAAUpK,GACjC,IAAMlwB,EACJkwB,EACA9yB,cAGF,OAFAlnB,OAAwBoL,IAAjB0e,EAA4B,IAEA,SAA5BA,EAAau6B,aA4CTC,GAAgB,SAAUtK,GACrC,IAAMlwB,EACJkwB,EACA9yB,cAEF,OADAlnB,OAAwBoL,IAAjB0e,EAA4B,IAC5BA,EAAay6B,WAAqC,IAAxBz6B,EAAaU,keC3RhDg6B,GAAA,SAAAjlD,GAIE,SAAAklD,EAAYzgC,GAAZ,IAAAtkB,EACEH,EAAAM,KAAA1E,KAAM,CACJsnD,SAAUtlD,KACVhC,KAEI2D,EAAUklB,GAA4B,GAM5CtkB,EAAKglD,SAAW5lD,EAAQ6lD,QAKxBjlD,EAAKklD,aAAe,KAKpBllD,EAAKmlD,mBAKLnlD,EAAKolD,UAAW,EAEhB,IAAMC,EAAYjmD,EAAQimD,UACtBjmD,EAAQimD,UACR5B,GAAIa,GAAgBM,WAMxB5kD,EAAKslD,WAAalmD,EAAQmmD,YACtB9B,GAAIO,GAAmBqB,GACvBA,EAMJrlD,EAAKwlD,YAAa,IAwGtB,OAxJsBC,GAAAV,EAAAllD,GAuDpBklD,EAAAppD,UAAAinD,gBAAA,SAAgBtI,GACT7+C,KAAK2pD,WACR3pD,KAAK2pD,UAAW,EAChB3pD,KAAKqgB,SAASw9B,UAAU1H,oBAE1B,IAAMsR,EAAiBznD,KAAKynD,eACtBwC,EAAWC,GAAAD,SAAqBxC,GACtC,GAAIA,EAAezmD,QAAUhB,KAAK0pD,oBAIhC,GAHI1pD,KAAKupD,UACPvpD,KAAKupD,SAASY,OAAOF,EAAS,GAAIA,EAAS,IAEzCjqD,KAAKypD,aAAc,CACrB,IAAMvZ,EAAQ,CACZlwC,KAAKypD,aAAa,GAAKQ,EAAS,GAChCA,EAAS,GAAKjqD,KAAKypD,aAAa,IAG5B1Q,EADM8F,EAAgBhvC,IACXguC,WlE+LnB,SAAgBn4C,EAAY0kD,GAChC1kD,EAAW,IAAM0kD,EACjB1kD,EAAW,IAAM0kD,EkEhMXA,CAAgBla,EAAO6I,EAAK3K,iBAC5BhxB,GAAiB8yB,EAAO6I,EAAKpK,eAC7BoK,EAAK3D,qBAAqBlF,SAEnBlwC,KAAKupD,UAGdvpD,KAAKupD,SAASpoD,QAEhBnB,KAAKypD,aAAeQ,EACpBjqD,KAAK0pD,mBAAqBjC,EAAezmD,OACzC69C,EAAgB9yB,cAAcva,kBAQhC83C,EAAAppD,UAAAmnD,cAAA,SAAcxI,GACZ,IAAMhvC,EAAMgvC,EAAgBhvC,IACtBkpC,EAAOlpC,EAAIguC,UACjB,GAAmC,IAA/B79C,KAAKynD,eAAezmD,OAAc,CACpC,IAAKhB,KAAK+pD,YAAc/pD,KAAKupD,UAAYvpD,KAAKupD,SAASnoD,MAAO,CAC5D,IAAMm4B,EAAWv5B,KAAKupD,SAASc,cACzBnkD,EAAQlG,KAAKupD,SAASe,WACtB7/C,EAASsuC,EAAKrK,oBACd6b,EAAW16C,EAAIyuC,+BAA+B7zC,GAC9Cu0B,EAAOnvB,EAAIitC,+BAA+B,CAC9CyN,EAAS,GAAKhxB,EAAWjzB,KAAKC,IAAIL,GAClCqkD,EAAS,GAAKhxB,EAAWjzB,KAAKD,IAAIH,KAEpC6yC,EAAK5J,gBAAgB,CACnB1kC,OAAQsuC,EAAKpE,qBAAqB3V,GAClC0Q,SAAU,IACVC,OAAQtR,KAOZ,OAJIr+B,KAAK2pD,WACP3pD,KAAK2pD,UAAW,EAChB5Q,EAAK3C,mBAEA,EAQP,OANIp2C,KAAKupD,UAGPvpD,KAAKupD,SAASpoD,QAEhBnB,KAAKypD,aAAe,MACb,GASXH,EAAAppD,UAAAgnD,gBAAA,SAAgBrI,GACd,GAAI7+C,KAAKynD,eAAezmD,OAAS,GAAKhB,KAAK6pD,WAAWhL,GAAkB,CACtE,IACM9F,EADM8F,EAAgBhvC,IACXguC,UAYjB,OAXA79C,KAAKypD,aAAe,KAEhB1Q,EAAKhK,gBACPgK,EAAKtI,mBAEHzwC,KAAKupD,UACPvpD,KAAKupD,SAASpoD,QAIhBnB,KAAK+pD,WAAa/pD,KAAKynD,eAAezmD,OAAS,GACxC,EAEP,OAAO,GAGbsoD,EAxJA,CAAsBY,GAAAjlD,SA0JtBulD,GAAenB,0gBChEfoB,GA9FA,SAAArmD,GAIE,SAAAsmD,EAAY7hC,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,UAE5CtkB,EAAAH,EAAAM,KAAA1E,KAAM,CACJsnD,SAAUtlD,KACXhC,MAMI6pD,WAAalmD,EAAQimD,UAAYjmD,EAAQimD,UAAYzB,GAM1D5jD,EAAKomD,gBAAa16C,EAMlB1L,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,MAiEzE,OA5FyBkb,GAAAF,EAAAtmD,GAkCvBsmD,EAAAxqD,UAAAinD,gBAAA,SAAgBtI,GACd,GAAKoK,GAAUpK,GAAf,CAIA,IAAMhvC,EAAMgvC,EAAgBhvC,IACtBkpC,EAAOlpC,EAAIguC,UACjB,GAAI9E,EAAKjH,iBAAiBnnC,WAAauzB,GAAvC,CAGA,IAAMtzB,EAAOiF,EAAI0uC,UACXn1C,EAASy1C,EAAgBpjC,MACzBm8B,EAAQtxC,KAAK+yB,MAAMzuB,EAAK,GAAK,EAAIxB,EAAO,GAAIA,EAAO,GAAKwB,EAAK,GAAK,GACxE,QAAwBqF,IAApBjQ,KAAK2qD,WAA0B,CACjC,IAAMza,EAAQ0H,EAAQ53C,KAAK2qD,WAC3B5R,EAAKpD,wBAAwBzF,GAE/BlwC,KAAK2qD,WAAa/S,KAQpB8S,EAAAxqD,UAAAmnD,cAAA,SAAcxI,GACZ,OAAKoK,GAAUpK,KAIHA,EAAgBhvC,IACXguC,UACZzH,eAAep2C,KAAK0kD,YAClB,IAQTgG,EAAAxqD,UAAAgnD,gBAAA,SAAgBrI,GACd,QAAKoK,GAAUpK,QAKb+J,GAAkB/J,KAClB7+C,KAAK6pD,WAAWhL,MAEJA,EAAgBhvC,IACxBguC,UAAU1H,mBACdn2C,KAAK2qD,gBAAa16C,GACX,KAKby6C,EA5FA,CAAyBR,GAAAjlD,kpBCqGzB4lD,GA5HA,SAAAzmD,GAIE,SAAA0mD,EAAYlzC,GAAZ,IAAArT,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAKwmD,UAAY,KAMjBxmD,EAAKqiB,SAAW5f,SAASC,cAAc,OACvC1C,EAAKqiB,SAAS1f,MAAMge,SAAW,WAC/B3gB,EAAKqiB,SAAS1f,MAAMuzC,cAAgB,OACpCl2C,EAAKqiB,SAAShP,UAAY,UAAYA,EAMtCrT,EAAK2Z,KAAO,KAMZ3Z,EAAKymD,YAAc,KAMnBzmD,EAAK0mD,UAAY,OAoFrB,OA1HwBC,GAAAJ,EAAA1mD,GA4CtB0mD,EAAA5qD,UAAAE,gBAAA,WACEJ,KAAK8a,OAAO,OAMdgwC,EAAA5qD,UAAAirD,QAAA,WACE,IAAMC,EAAaprD,KAAKgrD,YAClBK,EAAWrrD,KAAKirD,UAChBK,EAAK,KACLpkD,EAAQlH,KAAK4mB,SAAS1f,MAC5BA,EAAMke,KAAO9e,KAAKiD,IAAI6hD,EAAW,GAAIC,EAAS,IAAMC,EACpDpkD,EAAMw2C,IAAMp3C,KAAKiD,IAAI6hD,EAAW,GAAIC,EAAS,IAAMC,EACnDpkD,EAAM+E,MAAQ3F,KAAKspB,IAAIy7B,EAAS,GAAKD,EAAW,IAAME,EACtDpkD,EAAMgF,OAAS5F,KAAKspB,IAAIy7B,EAAS,GAAKD,EAAW,IAAME,GAMzDR,EAAA5qD,UAAA4a,OAAA,SAAOjL,GACL,GAAI7P,KAAKke,KAAM,CACble,KAAKke,KAAKsgC,sBAAsBxvC,YAAYhP,KAAK4mB,UACjD,IAAM1f,EAAQlH,KAAK4mB,SAAS1f,MAC5BA,EAAMke,KAAO,UACble,EAAMw2C,IAAM,UACZx2C,EAAM+E,MAAQ,UACd/E,EAAMgF,OAAS,UAEjBlM,KAAKke,KAAOrO,EACR7P,KAAKke,MACPle,KAAKke,KAAKsgC,sBAAsB3vC,YAAY7O,KAAK4mB,WAQrDkkC,EAAA5qD,UAAAqrD,UAAA,SAAUH,EAAYC,GACpBrrD,KAAKgrD,YAAcI,EACnBprD,KAAKirD,UAAYI,EACjBrrD,KAAKwrD,yBACLxrD,KAAKmrD,WAMPL,EAAA5qD,UAAAsrD,uBAAA,WACE,IAAMJ,EAAaprD,KAAKgrD,YAClBK,EAAWrrD,KAAKirD,UAOhB3jD,EANS,CACb8jD,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAEAv7C,IACzB7P,KAAKke,KAAK4+B,+BACV98C,KAAKke,MAGP5W,EAAY,GAAKA,EAAY,GAAGS,QAC3B/H,KAAK+qD,UAGR/qD,KAAK+qD,UAAU5nB,eAAe,CAAC77B,IAF/BtH,KAAK+qD,UAAY,IAAIpX,GAAA1uC,QAAQ,CAACqC,KASlCwjD,EAAA5qD,UAAAurD,YAAA,WACE,OAAOzrD,KAAK+qD,WAEhBD,EA1HA,CAAwBhrD,6dC2BlB4rD,GAMM,WANNA,GAaK,UAbLA,GAoBI,SApBJA,GA2BO,YAQbC,GAAA,SAAAvnD,GAME,SAAAunD,EAAYt6C,EAAM3L,EAAYm5C,GAA9B,IAAAt6C,EACEH,EAAAM,KAAA1E,KAAMqR,IAAKrR,YAQXuE,EAAKmB,WAAaA,EAOlBnB,EAAKs6C,gBAAkBA,IAE3B,OAxBkC+M,GAAAD,EAAAvnD,GAwBlCunD,EAxBA,CAAkCx6C,IA6MlC06C,GA7JA,SAAAznD,GAIE,SAAA0nD,EAAYjjC,GAAZ,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,KAKPuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAEL,IAAMpR,EAAUklB,GAA4B,UAM5CtkB,EAAKwnD,KAAO,IAAIC,GAAA/mD,QAAUtB,EAAQiU,WAAa,cAM/CrT,EAAK0nD,cAA+Bh8C,IAApBtM,EAAQuoD,QAAwBvoD,EAAQuoD,QAAU,GAE9DvoD,EAAQwoD,WACV5nD,EAAK4nD,SAAWxoD,EAAQwoD,UAO1B5nD,EAAKymD,YAAc,KAMnBzmD,EAAKslD,WAAalmD,EAAQimD,UAAYjmD,EAAQimD,UAAYhB,GAM1DrkD,EAAK6nD,iBAAmBzoD,EAAQ0oD,gBAC5B1oD,EAAQ0oD,gBACR9nD,EAAK+nD,yBAiGb,OA3JsBV,GAAAE,EAAA1nD,GAsEpB0nD,EAAA5rD,UAAAosD,uBAAA,SAAuBzN,EAAiBuM,EAAYC,GAClD,IAAMp/C,EAAQo/C,EAAS,GAAKD,EAAW,GACjCl/C,EAASm/C,EAAS,GAAKD,EAAW,GACxC,OAAOn/C,EAAQA,EAAQC,EAASA,GAAUlM,KAAKisD,UAQjDH,EAAA5rD,UAAAurD,YAAA,WACE,OAAOzrD,KAAK+rD,KAAKN,eAOnBK,EAAA5rD,UAAAinD,gBAAA,SAAgBtI,GACd7+C,KAAK+rD,KAAKR,UAAUvrD,KAAKgrD,YAAanM,EAAgBpjC,OAEtDzb,KAAKkT,cACH,IAAIy4C,GACFD,GACA7M,EAAgBn5C,WAChBm5C,KAUNiN,EAAA5rD,UAAAmnD,cAAA,SAAcxI,GACZ7+C,KAAK+rD,KAAKjxC,OAAO,MAEjB,IAAMyxC,EAAcvsD,KAAKosD,iBACvBvN,EACA7+C,KAAKgrD,YACLnM,EAAgBpjC,OAYlB,OAVI8wC,GACFvsD,KAAKmsD,SAAStN,GAEhB7+C,KAAKkT,cACH,IAAIy4C,GACFY,EAAcb,GAA0BA,GACxC7M,EAAgBn5C,WAChBm5C,KAGG,GAQTiN,EAAA5rD,UAAAgnD,gBAAA,SAAgBrI,GACd,QAAI7+C,KAAK6pD,WAAWhL,KAClB7+C,KAAKgrD,YAAcnM,EAAgBpjC,MACnCzb,KAAK+rD,KAAKjxC,OAAO+jC,EAAgBhvC,KACjC7P,KAAK+rD,KAAKR,UAAUvrD,KAAKgrD,YAAahrD,KAAKgrD,aAC3ChrD,KAAKkT,cACH,IAAIy4C,GACFD,GACA7M,EAAgBn5C,WAChBm5C,KAGG,IAUXiN,EAAA5rD,UAAAisD,SAAA,SAASh5C,KACX24C,EA3JA,CAAsB5B,GAAAjlD,meClCtBunD,GApDA,SAAApoD,GAIE,SAAAqoD,EAAY5jC,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,GAEtC+gC,EAAYjmD,EAAQimD,UAAYjmD,EAAQimD,UAAYd,UAE1DvkD,EAAAH,EAAAM,KAAA1E,KAAM,CACJ4pD,UAAWA,EACXhyC,UAAWjU,EAAQiU,WAAa,cAChCs0C,QAASvoD,EAAQuoD,WAClBlsD,MAMI0kD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,IAMrEnrC,EAAKmoD,UAAuBz8C,IAAhBtM,EAAQgpD,KAAoBhpD,EAAQgpD,MAyBpD,OAlDuBC,GAAAH,EAAAroD,GAgCrBqoD,EAAAvsD,UAAAisD,SAAA,SAASh5C,GACP,IACM4lC,EADM/4C,KAAKqgB,SAC8Cw9B,UAC3D7+B,EAAWhf,KAAKyrD,cAEpB,GAAIzrD,KAAK0sD,KAAM,CACb,IAAMnY,EAAgBwE,EAAKhF,yBAAyB/0B,GAC9CtU,EAAaquC,EAAKpG,+BAA+B4B,GACjDzmC,EAASirC,EAAK3K,gBAAkB1jC,GACtCsU,EAAWA,EAASshB,SACXxa,MAAMhY,EAASA,GAG1BirC,EAAKjF,YAAY90B,EAAU,CACzB0wB,SAAU1vC,KAAK0kD,UACf/U,OAAQtR,MAGdouB,EAlDA,CAAuBI,GAAA5nD,kDCvBvB,IAAA6nD,GACQ,GADRA,GAEM,GAFNA,GAGS,GAHTA,GAIQ,6dCgHRC,GA1FA,SAAA3oD,GAIE,SAAA4oD,EAAYnkC,GAAZ,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,KAED2D,EAAUklB,GAAe,UAO/BtkB,EAAK0oD,kBAAoB,SAAUpO,GACjC,OACEgK,GAAehK,IAAoBkK,GAAkBlK,IAQzDt6C,EAAKslD,gBACmB55C,IAAtBtM,EAAQimD,UACJjmD,EAAQimD,UACRrlD,EAAK0oD,kBAMX1oD,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,IAMrEnrC,EAAK2oD,iBACoBj9C,IAAvBtM,EAAQwpD,WAA2BxpD,EAAQwpD,WAAa,MAgD9D,OAxF0BC,GAAAJ,EAAA5oD,GAmDxB4oD,EAAA9sD,UAAAuT,YAAA,SAAYorC,GACV,IAAI8H,GAAY,EAChB,GAAI9H,EAAgBxtC,MAAQ2C,GAAmB,CAC7C,IAAMq5C,EACJxO,EAAgB9yB,cAEZuhC,EAAUD,EAASC,QACzB,GACEttD,KAAK6pD,WAAWhL,KACfyO,GAAWR,IACVQ,GAAWR,IACXQ,GAAWR,IACXQ,GAAWR,IACb,CACA,IACM/T,EADM8F,EAAgBhvC,IACXguC,UACX0P,EAAgBxU,EAAK3K,gBAAkBpuC,KAAKktD,YAC9Cv5B,EAAS,EACXC,EAAS,EACP05B,GAAWR,GACbl5B,GAAU25B,EACDD,GAAWR,GACpBn5B,GAAU45B,EACDD,GAAWR,GACpBn5B,EAAS45B,EAET35B,EAAS25B,EAEX,IAAMrd,EAAQ,CAACvc,EAAQC,GACvBxW,GAAiB8yB,EAAO6I,EAAKpK,eAC7BkY,GAAA2G,IAAIzU,EAAM7I,EAAOlwC,KAAK0kD,WACtB2I,EAAS77C,iBACTm1C,GAAY,GAGhB,OAAQA,GAEZqG,EAxFA,CAA0BnG,GAAA5hD,ghBC2D1BwoD,GA/DA,SAAArpD,GAIE,SAAAspD,EAAY7kC,GAAZ,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,KAED2D,EAAUklB,GAA4B,UAM5CtkB,EAAKslD,WAAalmD,EAAQimD,UAAYjmD,EAAQimD,UAAYb,GAM1DxkD,EAAKkiD,OAAS9iD,EAAQusC,MAAQvsC,EAAQusC,MAAQ,EAM9C3rC,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,MAoCzE,OA7D2Bie,GAAAD,EAAAtpD,GAoCzBspD,EAAAxtD,UAAAuT,YAAA,SAAYorC,GACV,IAAI8H,GAAY,EAChB,GACE9H,EAAgBxtC,MAAQ2C,IACxB6qC,EAAgBxtC,MAAQ2C,GACxB,CACA,IAAMq5C,EACJxO,EAAgB9yB,cAEZ6hC,EAAWP,EAASO,SAC1B,GACE5tD,KAAK6pD,WAAWhL,KACf+O,GAAY,IAAIC,WAAW,IAAMD,GAAY,IAAIC,WAAW,IAC7D,CACA,IAAMh+C,EAAMgvC,EAAgBhvC,IACtBqgC,EACJ0d,GAAY,IAAIC,WAAW,GAAK7tD,KAAKymD,QAAUzmD,KAAKymD,OAChD1N,EAAOlpC,EAAIguC,UACjBgJ,GAAAC,YAAY/N,EAAM7I,OAAOjgC,EAAWjQ,KAAK0kD,WACzC2I,EAAS77C,iBACTm1C,GAAY,GAGhB,OAAQA,GAEZ+G,EA7DA,CAA2B7G,GAAA5hD,SC+F3B6oD,GAnHA,WAOE,SAAAC,EAAYC,EAAOC,EAAaC,GAK9BluD,KAAKmuD,OAASH,EAMdhuD,KAAKouD,aAAeH,EAMpBjuD,KAAKquD,OAASH,EAMdluD,KAAKsuD,QAAU,GAMftuD,KAAKuuD,OAAS,EAMdvuD,KAAKwuD,iBAAmB,EAuE5B,OAjEET,EAAA7tD,UAAAiB,MAAA,WACEnB,KAAKsuD,QAAQttD,OAAS,EACtBhB,KAAKuuD,OAAS,EACdvuD,KAAKwuD,iBAAmB,GAO1BT,EAAA7tD,UAAAiqD,OAAA,SAAOxkD,EAAGC,GACR5F,KAAKsuD,QAAQniD,KAAKxG,EAAGC,EAAGypC,KAAKC,QAM/Bye,EAAA7tD,UAAAkB,IAAA,WACE,GAAIpB,KAAKsuD,QAAQttD,OAAS,EAGxB,OAAO,EAET,IAAMktD,EAAQ7e,KAAKC,MAAQtvC,KAAKquD,OAC1BI,EAAYzuD,KAAKsuD,QAAQttD,OAAS,EACxC,GAAIhB,KAAKsuD,QAAQG,EAAY,GAAKP,EAGhC,OAAO,EAKT,IADA,IAAIQ,EAAaD,EAAY,EACtBC,EAAa,GAAK1uD,KAAKsuD,QAAQI,EAAa,GAAKR,GACtDQ,GAAc,EAGhB,IAAMhf,EAAW1vC,KAAKsuD,QAAQG,EAAY,GAAKzuD,KAAKsuD,QAAQI,EAAa,GAIzE,GAAIhf,EAAW,IAAO,GACpB,OAAO,EAGT,IAAMznC,EAAKjI,KAAKsuD,QAAQG,GAAazuD,KAAKsuD,QAAQI,GAC5CxmD,EAAKlI,KAAKsuD,QAAQG,EAAY,GAAKzuD,KAAKsuD,QAAQI,EAAa,GAGnE,OAFA1uD,KAAKuuD,OAASjoD,KAAK+yB,MAAMnxB,EAAID,GAC7BjI,KAAKwuD,iBAAmBloD,KAAKutB,KAAK5rB,EAAKA,EAAKC,EAAKA,GAAMwnC,EAChD1vC,KAAKwuD,iBAAmBxuD,KAAKouD,cAMtCL,EAAA7tD,UAAAmqD,YAAA,WACE,OAAQrqD,KAAKouD,aAAepuD,KAAKwuD,kBAAoBxuD,KAAKmuD,QAM5DJ,EAAA7tD,UAAAoqD,SAAA,WACE,OAAOtqD,KAAKuuD,QAEhBR,EAjHA,0iBCEaY,GAAO,CAClBC,SAAU,WACVC,MAAO,SA0RTC,GA/PA,SAAA1qD,GAIE,SAAA2qD,EAAYlmC,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,IAE5CtkB,EAAAH,EAAAM,KAAA1E,KACgE2D,IAA9D3D,MAOGgvD,YAAc,EAMnBzqD,EAAK0qD,WAAa,EAMlB1qD,EAAKkiC,eAAiCx2B,IAArBtM,EAAQwgC,SAAyBxgC,EAAQwgC,SAAW,EAMrE5/B,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,IAMrEnrC,EAAK2qD,cAA+Bj/C,IAApBtM,EAAQwrD,QAAwBxrD,EAAQwrD,QAAU,GAMlE5qD,EAAK6qD,gBACmBn/C,IAAtBtM,EAAQ0rD,WAA0B1rD,EAAQ0rD,UAM5C9qD,EAAK+qD,0BAC6Br/C,IAAhCtM,EAAQ6uC,qBACJ7uC,EAAQ6uC,oBAGd,IAAMoX,EAAYjmD,EAAQimD,UAAYjmD,EAAQimD,UAAYjB,UAM1DpkD,EAAKslD,WAAalmD,EAAQmmD,YACtB9B,GAAIO,GAAmBqB,GACvBA,EAMJrlD,EAAKgrD,YAAc,KAMnBhrD,EAAKirD,gBAAav/C,EAMlB1L,EAAKkrD,WAMLlrD,EAAKmrD,WAAQz/C,EAOb1L,EAAKorD,kBAAoB,IAKzBprD,EAAKqrD,mBAOLrrD,EAAKsrD,cAAgB,MAiJzB,OA7P6BC,GAAAf,EAAA3qD,GAkH3B2qD,EAAA7uD,UAAA6vD,gBAAA,WACE/vD,KAAK4vD,wBAAqB3/C,EACbjQ,KAAKqgB,SAASw9B,UACtBzH,oBACHnmC,EACAjQ,KAAKivD,WAAcjvD,KAAKivD,WAAa,EAAI,GAAI,EAAM,EACnDjvD,KAAKuvD,cAUTR,EAAA7uD,UAAAuT,YAAA,SAAYorC,GACV,IAAK7+C,KAAK6pD,WAAWhL,GACnB,OAAO,EAGT,GADaA,EAAgBxtC,OAChB2C,GACX,OAAO,EAGT,IAYIk8B,EAZErgC,EAAMgvC,EAAgBhvC,IACtBmgD,EACJnR,EAAgB9yB,cAqBlB,GAnBAikC,EAAWx+C,iBAEPxR,KAAKovD,aACPpvD,KAAKuvD,YAAc1Q,EAAgBn5C,YAMjCm5C,EAAgBxtC,MAAQ2C,KAC1Bk8B,EAAQ8f,EAAWp8B,OACfhxB,GAAWotD,EAAWC,YAAcC,WAAWC,kBACjDjgB,GAASltC,GAEPgtD,EAAWC,YAAcC,WAAWE,iBACtClgB,GAAS,KAIC,IAAVA,EACF,OAAO,EAEPlwC,KAAKivD,WAAa/e,EAGpB,IAAMZ,EAAMD,KAAKC,WAEOr/B,IAApBjQ,KAAKwvD,aACPxvD,KAAKwvD,WAAalgB,KAGftvC,KAAK0vD,OAASpgB,EAAMtvC,KAAKwvD,WAAaxvD,KAAK2vD,qBAC9C3vD,KAAK0vD,MAAQppD,KAAKspB,IAAIsgB,GAAS,EAAIye,GAAKC,SAAWD,GAAKE,OAG1D,IAAM9V,EAAOlpC,EAAIguC,UACjB,GACE79C,KAAK0vD,QAAUf,GAAKC,WAClB7V,EAAKhH,2BAA4B/xC,KAAKsvD,qBAgBxC,OAdItvD,KAAK4vD,mBACP9gC,aAAa9uB,KAAK4vD,qBAEd7W,EAAKhK,gBACPgK,EAAKtI,mBAEPsI,EAAK5C,oBAEPn2C,KAAK4vD,mBAAqB7gC,WACxB/uB,KAAK+vD,gBAAgB37C,KAAKpU,MAC1BA,KAAKkvD,UAEPnW,EAAKtD,YAAYvF,EAAQlwC,KAAK6vD,cAAe7vD,KAAKuvD,aAClDvvD,KAAKwvD,WAAalgB,GACX,EAGTtvC,KAAKgvD,aAAe9e,EAEpB,IAAMmgB,EAAW/pD,KAAKkD,IAAIxJ,KAAKkvD,UAAY5f,EAAMtvC,KAAKwvD,YAAa,GAQnE,OANA1gC,aAAa9uB,KAAKyvD,YAClBzvD,KAAKyvD,WAAa1gC,WAChB/uB,KAAKswD,iBAAiBl8C,KAAKpU,KAAM6P,GACjCwgD,IAGK,GAOTtB,EAAA7uD,UAAAowD,iBAAA,SAAiBzgD,GACf,IAAMkpC,EAAOlpC,EAAIguC,UACb9E,EAAKhK,gBACPgK,EAAKtI,mBAEP,IAAIP,GACDzjC,GACCzM,KAAKgvD,aACJhvD,KAAKymC,UAAYzmC,KAAK6vD,cACvB7vD,KAAKymC,UAAYzmC,KAAK6vD,eACpB7vD,KAAK6vD,eACP9W,EAAKhH,0BAA4B/xC,KAAKsvD,wBAExCpf,EAAQA,EAASA,EAAQ,EAAI,GAAI,EAAM,GAEzC2W,GAAAC,YAAY/N,EAAM7I,EAAOlwC,KAAKuvD,YAAavvD,KAAK0kD,WAEhD1kD,KAAK0vD,WAAQz/C,EACbjQ,KAAKgvD,YAAc,EACnBhvD,KAAKuvD,YAAc,KACnBvvD,KAAKwvD,gBAAav/C,EAClBjQ,KAAKyvD,gBAAax/C,GASpB8+C,EAAA7uD,UAAAqwD,eAAA,SAAelB,GACbrvD,KAAKovD,WAAaC,EACbA,IACHrvD,KAAKuvD,YAAc,OAGzBR,EA7PA,CAA6BlI,GAAA5hD,ghBCyH7BurD,GA5IA,SAAApsD,GAIE,SAAAqsD,EAAY5nC,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,GAEtC6nC,EACJ/sD,SAGG+sD,EAAepJ,WAClBoJ,EAAepJ,SAAWtlD,IAG5BuC,EAAAH,EAAAM,KAAA1E,KAAM0wD,IAAN1wD,MAMK2wD,QAAU,KAMfpsD,EAAKomD,gBAAa16C,EAMlB1L,EAAKqsD,WAAY,EAMjBrsD,EAAKssD,eAAiB,EAMtBtsD,EAAKusD,gBAAmC7gD,IAAtBtM,EAAQotD,UAA0BptD,EAAQotD,UAAY,GAMxExsD,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,MAuFzE,OA1I0BshB,GAAAP,EAAArsD,GA0DxBqsD,EAAAvwD,UAAAinD,gBAAA,SAAgBtI,GACd,IAAIoS,EAAgB,EAEdC,EAASlxD,KAAKynD,eAAe,GAC7B0J,EAASnxD,KAAKynD,eAAe,GAG7BvhD,EAAQI,KAAK+yB,MACjB83B,EAAOrhC,QAAUohC,EAAOphC,QACxBqhC,EAAOthC,QAAUqhC,EAAOrhC,SAG1B,QAAwB5f,IAApBjQ,KAAK2qD,WAA0B,CACjC,IAAMza,EAAQhqC,EAAQlG,KAAK2qD,WAC3B3qD,KAAK6wD,gBAAkB3gB,GAClBlwC,KAAK4wD,WAAatqD,KAAKspB,IAAI5vB,KAAK6wD,gBAAkB7wD,KAAK8wD,aAC1D9wD,KAAK4wD,WAAY,GAEnBK,EAAgB/gB,EAElBlwC,KAAK2qD,WAAazkD,EAElB,IAAM2J,EAAMgvC,EAAgBhvC,IACtBkpC,EAAOlpC,EAAIguC,UACjB,GAAI9E,EAAKjH,iBAAiBnnC,WAAauzB,GAAvC,CAOA,IAAMof,EAAmBztC,EAAIkX,cAAcw2B,wBACrC0M,EAAWC,GAAAD,SAAqBjqD,KAAKynD,gBAC3CwC,EAAS,IAAM3M,EAAiBl4B,KAChC6kC,EAAS,IAAM3M,EAAiBI,IAChC19C,KAAK2wD,QAAU9gD,EAAIitC,+BAA+BmN,GAG9CjqD,KAAK4wD,YACP/gD,EAAIgL,SACJk+B,EAAKpD,uBAAuBsb,EAAejxD,KAAK2wD,YASpDF,EAAAvwD,UAAAmnD,cAAA,SAAcxI,GACZ,QAAI7+C,KAAKynD,eAAezmD,OAAS,KACnB69C,EAAgBhvC,IACXguC,UACZzH,eAAep2C,KAAK0kD,YAClB,IAWX+L,EAAAvwD,UAAAgnD,gBAAA,SAAgBrI,GACd,GAAI7+C,KAAKynD,eAAezmD,QAAU,EAAG,CACnC,IAAM6O,EAAMgvC,EAAgBhvC,IAQ5B,OAPA7P,KAAK2wD,QAAU,KACf3wD,KAAK2qD,gBAAa16C,EAClBjQ,KAAK4wD,WAAY,EACjB5wD,KAAK6wD,eAAiB,EACjB7wD,KAAKunD,wBACR13C,EAAIguC,UAAU1H,oBAET,EAEP,OAAO,GAGbsa,EA1IA,CAA0BvG,GAAAjlD,ghBCoH1BmsD,GAvHA,SAAAhtD,GAIE,SAAAitD,EAAYxoC,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,GAEtC6nC,EACJ/sD,SAGG+sD,EAAepJ,WAClBoJ,EAAepJ,SAAWtlD,IAG5BuC,EAAAH,EAAAM,KAAA1E,KAAM0wD,IAAN1wD,MAMK2wD,QAAU,KAMfpsD,EAAKmgD,eAAiCz0C,IAArBtM,EAAQ+rC,SAAyB/rC,EAAQ+rC,SAAW,IAMrEnrC,EAAK+sD,mBAAgBrhD,EAMrB1L,EAAKgtD,gBAAkB,IA8E3B,OArHwBC,GAAAH,EAAAjtD,GA8CtBitD,EAAAnxD,UAAAinD,gBAAA,SAAgBtI,GACd,IAAI4S,EAAa,EAEXP,EAASlxD,KAAKynD,eAAe,GAC7B0J,EAASnxD,KAAKynD,eAAe,GAC7Bx/C,EAAKipD,EAAOrhC,QAAUshC,EAAOthC,QAC7B3nB,EAAKgpD,EAAOphC,QAAUqhC,EAAOrhC,QAG7ByJ,EAAWjzB,KAAKutB,KAAK5rB,EAAKA,EAAKC,EAAKA,QAEf+H,IAAvBjQ,KAAKsxD,gBACPG,EAAazxD,KAAKsxD,cAAgB/3B,GAEpCv5B,KAAKsxD,cAAgB/3B,EAErB,IAAM1pB,EAAMgvC,EAAgBhvC,IACtBkpC,EAAOlpC,EAAIguC,UAEC,GAAd4T,IACFzxD,KAAKuxD,gBAAkBE,GAIzB,IAAMnU,EAAmBztC,EAAIkX,cAAcw2B,wBACrC0M,EAAWC,GAAAD,SAAqBjqD,KAAKynD,gBAC3CwC,EAAS,IAAM3M,EAAiBl4B,KAChC6kC,EAAS,IAAM3M,EAAiBI,IAChC19C,KAAK2wD,QAAU9gD,EAAIitC,+BAA+BmN,GAGlDp6C,EAAIgL,SACJk+B,EAAKzD,yBAAyBmc,EAAYzxD,KAAK2wD,UAQjDU,EAAAnxD,UAAAmnD,cAAA,SAAcxI,GACZ,GAAI7+C,KAAKynD,eAAezmD,OAAS,EAAG,CAClC,IACM+3C,EADM8F,EAAgBhvC,IACXguC,UACX/8C,EAAYd,KAAKuxD,gBAAkB,EAAI,GAAI,EAEjD,OADAxY,EAAK3C,eAAep2C,KAAK0kD,UAAW5jD,IAC7B,EAEP,OAAO,GASXuwD,EAAAnxD,UAAAgnD,gBAAA,SAAgBrI,GACd,GAAI7+C,KAAKynD,eAAezmD,QAAU,EAAG,CACnC,IAAM6O,EAAMgvC,EAAgBhvC,IAO5B,OANA7P,KAAK2wD,QAAU,KACf3wD,KAAKsxD,mBAAgBrhD,EACrBjQ,KAAKuxD,gBAAkB,EAClBvxD,KAAKunD,wBACR13C,EAAIguC,UAAU1H,oBAET,EAEP,OAAO,GAGbkb,EArHA,CAAwBnH,GAAAjlD,ueC4DxBysD,GAvBA,SAAAttD,GAIE,SAAAutD,EAAYhuD,GAWV,OAVAA,EAAUgO,GAAO,GAAIhO,IACRg1C,WACXh1C,EAAQg1C,SCdR,SAAmB9vB,GACvB,IAAMllB,EAAUklB,GAA4B,GAEtC8vB,EAAW,IAAInuB,GAAAvlB,QAkBrB,YAhBqCgL,IAAjBtM,EAAQyW,MAAqBzW,EAAQyW,OAEvDu+B,EAASxsC,KAAK,IAAIylD,GAAA3sD,QAAKtB,EAAQkuD,oBAGQ5hD,IAAnBtM,EAAQ29B,QAAuB39B,EAAQ29B,SAE3DqX,EAASxsC,KAAK,IAAI2lD,GAAA7sD,QAAOtB,EAAQouD,sBAIT9hD,IAAxBtM,EAAQquD,aAA4BruD,EAAQquD,cAE5CrZ,EAASxsC,KAAK,IAAI8lD,GAAAhtD,QAAYtB,EAAQuuD,qBAGjCvZ,EDPgBwZ,IAEhBxuD,EAAQi1C,eACXj1C,EAAQi1C,aEiBR,SAAmB/vB,GACvB,IAAMllB,EAAUklB,GAA4B,GAEtC+vB,EAAe,IAAIpuB,GAAAvlB,QAEnBukD,EAAU,IAAIsE,IAAQ,KAAQ,IAAM,KA8E1C,YA3EiC79C,IAA/BtM,EAAQyuD,oBACJzuD,EAAQyuD,qBAGZxZ,EAAazsC,KAAK,IAAIkmD,GAAAptD,eAIMgL,IAA5BtM,EAAQ2uD,iBAAgC3uD,EAAQ2uD,kBAEhD1Z,EAAazsC,KACX,IAAIomD,GAAAttD,QAAgB,CAClBirC,MAAOvsC,EAAQ6uD,UACf9iB,SAAU/rC,EAAQ8uD,sBAKYxiD,IAApBtM,EAAQ+uD,SAAwB/uD,EAAQ+uD,UAEtD9Z,EAAazsC,KACX,IAAIwmD,GAAA1tD,QAAQ,CACV6kD,YAAanmD,EAAQmmD,YACrBN,QAASA,WAMWv5C,IAAxBtM,EAAQivD,aAA4BjvD,EAAQivD,cAE5Cha,EAAazsC,KAAK,IAAI0mD,GAAA5tD,eAGgBgL,IAAtBtM,EAAQmvD,WAA0BnvD,EAAQmvD,YAE1Dla,EAAazsC,KACX,IAAI4mD,GAAA9tD,QAAU,CACZyqC,SAAU/rC,EAAQ8uD,sBAKcxiD,IAArBtM,EAAQqvD,UAAyBrvD,EAAQqvD,YAExDpa,EAAazsC,KAAK,IAAI8mD,GAAAhuD,SACtB2zC,EAAazsC,KACX,IAAI+mD,GAAAjuD,QAAa,CACfirC,MAAOvsC,EAAQ6uD,UACf9iB,SAAU/rC,EAAQ8uD,uBAMKxiD,IAA3BtM,EAAQwvD,gBAA+BxvD,EAAQwvD,iBAE/Cva,EAAazsC,KACX,IAAIinD,GAAAnuD,QAAe,CACjB6kD,YAAanmD,EAAQmmD,YACrBpa,SAAU/rC,EAAQ8uD,sBAMIxiD,IAA1BtM,EAAQ0vD,eAA8B1vD,EAAQ0vD,gBAE9Cza,EAAazsC,KACX,IAAImnD,GAAAruD,QAAS,CACXyqC,SAAU/rC,EAAQ8uD,gBAKjB7Z,EFpGoB2a,CAAoB,CACzCzJ,aAAa,KAIjB1lD,EAAAM,KAAA1E,KAAM2D,IAAN3D,KAMJ,OArBkBwzD,GAAA7B,EAAAvtD,GAkBhButD,EAAAzxD,UAAAsc,eAAA,WACE,OAAO,IAAIi3C,EAAAxuD,QAAqBjF,OAEpC2xD,EArBA,CAAkB+B,GAAAzuD,4mBGoQZ,SAAU0uD,GAAoBjzD,GAClC,MAAmB,mBAARA,EACFA,GAMHe,MAAMC,QAAQhB,GAChBkzD,EAASlzD,GAETmE,EAAqD,mBAApBnE,EAAK4X,UAA2B,IAEjEs7C,EAAS,CADwDlzD,IAG5D,WACL,OAAOkzD,IATT,IAAIA,MAaRC,GAtQA,SAAAzvD,GAOE,SAAA0vD,EAAYC,GAAZ,IAAAxvD,EACEH,EAAAM,KAAA1E,OAAOA,KAkDP,GA7CAuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAMLxQ,EAAKyvD,SAAM/jD,EAMX1L,EAAK0vD,cAAgB,WAOrB1vD,EAAK2vD,OAAS,KAMd3vD,EAAK4vD,oBAAiBlkD,EAMtB1L,EAAK6vD,mBAAqB,KAE1B7vD,EAAKiS,kBAAkBjS,EAAK0vD,cAAe1vD,EAAK8vD,wBAE5CN,EACF,GAGQ,mBADcA,EAA0B1zB,sBAE9C,CACA,IAAMrhB,EAAoC+0C,EAC1CxvD,EAAK+vD,YAAYt1C,OACZ,CAEL,IAAM7H,EAAa48C,EACnBxvD,EAAK0R,cAAckB,YAmK3B,OAxOsBo9C,GAAAT,EAAA1vD,GAgFpB0vD,EAAA5zD,UAAAogC,MAAA,WACE,IAAMA,EACJ,IAAIwzB,EAAQ9zD,KAAKoW,gBAAkBpW,KAAKmW,gBAAkB,MAE5DmqB,EAAMk0B,gBAAgBx0D,KAAKy0D,mBAC3B,IAAMz1C,EAAWhf,KAAKyrD,cAClBzsC,GACFshB,EAAMg0B,YAAqCt1C,EAASshB,SAEtD,IAAMp5B,EAAQlH,KAAK00D,WAInB,OAHIxtD,GACFo5B,EAAMq0B,SAASztD,GAEVo5B,GAWTwzB,EAAA5zD,UAAAurD,YAAA,WACE,OAA0CzrD,KAAK8D,IAAI9D,KAAKi0D,gBAU1DH,EAAA5zD,UAAA27C,MAAA,WACE,OAAO77C,KAAKg0D,KAUdF,EAAA5zD,UAAAu0D,gBAAA,WACE,OAAOz0D,KAAKi0D,eASdH,EAAA5zD,UAAAw0D,SAAA,WACE,OAAO10D,KAAKk0D,QASdJ,EAAA5zD,UAAA00D,iBAAA,WACE,OAAO50D,KAAKm0D,gBAMdL,EAAA5zD,UAAA20D,sBAAA,WACE70D,KAAKmV,WAMP2+C,EAAA5zD,UAAAm0D,uBAAA,WACMr0D,KAAKo0D,qBACP5/C,GAAcxU,KAAKo0D,oBACnBp0D,KAAKo0D,mBAAqB,MAE5B,IAAMp1C,EAAWhf,KAAKyrD,cAClBzsC,IACFhf,KAAKo0D,mBAAqBngD,GACxB+K,EACAhL,GACAhU,KAAK60D,sBACL70D,OAGJA,KAAKmV,WAUP2+C,EAAA5zD,UAAAo0D,YAAA,SAAYt1C,GACVhf,KAAK+Q,IAAI/Q,KAAKi0D,cAAej1C,IAY/B80C,EAAA5zD,UAAAy0D,SAAA,SAASG,GACP90D,KAAKk0D,OAASY,EACd90D,KAAKm0D,eAAkBW,EAEnBnB,GAAoBmB,QADpB7kD,EAEJjQ,KAAKmV,WAYP2+C,EAAA5zD,UAAA60D,MAAA,SAAMnqC,GACJ5qB,KAAKg0D,IAAMppC,EACX5qB,KAAKmV,WAUP2+C,EAAA5zD,UAAAs0D,gBAAA,SAAgB7vD,GACd3E,KAAKyW,qBAAqBzW,KAAKi0D,cAAej0D,KAAKq0D,wBACnDr0D,KAAKi0D,cAAgBtvD,EACrB3E,KAAKwW,kBAAkBxW,KAAKi0D,cAAej0D,KAAKq0D,wBAChDr0D,KAAKq0D,0BAETP,EAxOA,CAAsBh6C,GAAA7U,eC1DhB,SAAU+vD,GACd7rD,EACAC,EACAhI,EACAiI,EACAynC,EACA/R,EACApH,GAEA,IAAIs9B,EAAG/nD,EACDnM,GAAKK,EAAMgI,GAAUC,EAC3B,GAAU,IAANtI,EACFk0D,EAAI7rD,OACC,GAAU,IAANrI,EACTk0D,EAAI7rD,EACJ8D,EAAI4jC,OACC,GAAU,IAAN/vC,EAAS,CAKlB,IAJA,IAAIqK,EAAKjC,EAAgBC,GACrBoC,EAAKrC,EAAgBC,EAAS,GAC9B8rD,EAAS,EACPC,EAAoB,CAAC,GAClBl0D,EAAImI,EAASC,EAAQpI,EAAIG,EAAKH,GAAKoI,EAAQ,CAClD,IAAMgC,EAAKlC,EAAgBlI,GACrBwK,EAAKtC,EAAgBlI,EAAI,GAC/Bi0D,GAAU5uD,KAAKutB,MAAMxoB,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9D2pD,EAAkBhpD,KAAK+oD,GACvB9pD,EAAKC,EACLG,EAAKC,EAEP,IAAM5K,EAASiwC,EAAWokB,EACpBphD,E7GjCJ,SAAuBshD,EAAUC,EAAQC,GAO7C,IANA,IAAIC,EAAKC,EACHC,EAAaH,GAAkBj1D,EACjCq1D,EAAM,EACNC,EAAOP,EAASp0D,OAChB40D,GAAQ,EAELF,EAAMC,IAIXH,GAAOC,EAAWL,EADlBG,EAAMG,GAAQC,EAAOD,GAAQ,IACIL,IAEvB,EAERK,EAAMH,EAAM,GAGZI,EAAOJ,EACPK,GAASJ,GAKb,OAAOI,EAAQF,GAAOA,E6GSNG,CAAaV,EAAmBt0D,GAC1CiT,EAAQ,GACV5G,GACGrM,EAASs0D,GAAmBrhD,EAAQ,KACpCqhD,GAAmBrhD,EAAQ,GAAKqhD,GAAmBrhD,EAAQ,IAC9DmhD,EAAI7rD,IAAW0K,EAAQ,GAAKzK,GAE5B4rD,EAAI7rD,EAAS0K,EAAQzK,EAGzB,IAAMuuB,EAAYD,EAAgB,EAAIA,EAAgB,EAChDqH,EAAOD,GAAsB,IAAIt9B,MAAMm2B,GAC7C,IAAS32B,EAAI,EAAGA,EAAI22B,IAAa32B,EAC/B+9B,EAAK/9B,QACGgP,IAANglD,EACI/zB,SACMjxB,IAAN/C,EACA/D,EAAgB8rD,EAAIh0D,GACpB0M,GAAKxE,EAAgB8rD,EAAIh0D,GAAIkI,EAAgB8rD,EAAI5rD,EAASpI,GAAIiM,GAEtE,OAAO8xB,EAYH,SAAU82B,GACd3sD,EACAC,EACAhI,EACAiI,EACA2W,EACA+1C,GAEA,GAAI30D,GAAOgI,EACT,OAAO,KAET,IAAI1D,EACJ,GAAIsa,EAAI7W,EAAgBC,EAASC,EAAS,GACxC,OAAI0sD,IACFrwD,EAAayD,EAAgBpB,MAAMqB,EAAQA,EAASC,IACzCA,EAAS,GAAK2W,EAClBta,GAEA,KAEJ,GAAIyD,EAAgB/H,EAAM,GAAK4e,EACpC,OAAI+1C,IACFrwD,EAAayD,EAAgBpB,MAAM3G,EAAMiI,EAAQjI,IACtCiI,EAAS,GAAK2W,EAClBta,GAEA,KAIX,GAAIsa,GAAK7W,EAAgBC,EAASC,EAAS,GACzC,OAAOF,EAAgBpB,MAAMqB,EAAQA,EAASC,GAIhD,IAFA,IAAI2sD,EAAK5sD,EAASC,EACd4sD,EAAK70D,EAAMiI,EACR2sD,EAAKC,GAAI,CACd,IAAMV,EAAOS,EAAKC,GAAO,EACrBj2C,EAAI7W,GAAiBosD,EAAM,GAAKlsD,EAAS,GAC3C4sD,EAAKV,EAELS,EAAKT,EAAM,EAGf,IAAMW,EAAK/sD,EAAgB6sD,EAAK3sD,EAAS,GACzC,GAAI2W,GAAKk2C,EACP,OAAO/sD,EAAgBpB,OAAOiuD,EAAK,GAAK3sD,GAAS2sD,EAAK,GAAK3sD,EAASA,GAEtE,IACM6D,GAAK8S,EAAIk2C,IADJ/sD,GAAiB6sD,EAAK,GAAK3sD,EAAS,GACpB6sD,GAC3BxwD,EAAa,GACb,IAAK,IAAIzE,EAAI,EAAGA,EAAIoI,EAAS,IAAKpI,EAChCyE,EAAWyG,KACTwB,GACExE,GAAiB6sD,EAAK,GAAK3sD,EAASpI,GACpCkI,EAAgB6sD,EAAK3sD,EAASpI,GAC9BiM,IAKN,OADAxH,EAAWyG,KAAK6T,GACTta,EC/HH,SAAUywD,GAAiBhtD,EAAiBC,EAAQhI,EAAKiI,GAI7D,IAHA,IAAI+B,EAAKjC,EAAgBC,GACrBoC,EAAKrC,EAAgBC,EAAS,GAC9BpI,EAAS,EACJC,EAAImI,EAASC,EAAQpI,EAAIG,EAAKH,GAAKoI,EAAQ,CAClD,IAAMgC,EAAKlC,EAAgBlI,GACrBwK,EAAKtC,EAAgBlI,EAAI,GAC/BD,GAAUsF,KAAKutB,MAAMxoB,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9DJ,EAAKC,EACLG,EAAKC,EAEP,OAAOzK,mgBCCTo1D,GAAA,SAAAhyD,GAME,SAAAiyD,EAAY/uD,EAAa87B,GAAzB,IAAA7+B,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAK+xD,cAAgB,KAMrB/xD,EAAKgyD,uBAAwB,EAM7BhyD,EAAKkiC,WAAY,EAMjBliC,EAAKmiC,mBAAoB,OAENz2B,IAAfmzB,GAA6B3hC,MAAMC,QAAQ4F,EAAY,IAMzD/C,EAAK4+B,eAED77B,EAEF87B,GATF7+B,EAAK2+B,mBACHE,EAC8B97B,KA8PtC,OAlSyBkvD,GAAAH,EAAAjyD,GAqDvBiyD,EAAAn2D,UAAAu2D,iBAAA,SAAiB/wD,GACV1F,KAAKmJ,gBAGR7H,EAAOtB,KAAKmJ,gBAAiBzD,GAF7B1F,KAAKmJ,gBAAkBzD,EAAWqC,QAIpC/H,KAAKmV,WAQPkhD,EAAAn2D,UAAAogC,MAAA,WACE,IAAMo2B,EAAa,IAAIL,EACrBr2D,KAAKmJ,gBAAgBpB,QACrB/H,KAAKoiC,QAGP,OADAs0B,EAAW//C,gBAAgB3W,MACpB02D,GAUTL,EAAAn2D,UAAAygC,eAAA,SAAeh7B,EAAGC,EAAGg7B,EAAcC,GACjC,OAAIA,EAAqB74B,EAAyBhI,KAAKyY,YAAa9S,EAAGC,GAC9Di7B,GAEL7gC,KAAK0mC,mBAAqB1mC,KAAKoV,gBACjCpV,KAAKymC,UAAYngC,KAAKutB,KACpBiQ,GACE9jC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACL,IAGJrJ,KAAK0mC,kBAAoB1mC,KAAKoV,eAEzB8uB,GACLlkC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACLrJ,KAAKymC,WACL,EACA9gC,EACAC,EACAg7B,EACAC,KAeJw1B,EAAAn2D,UAAAy2D,eAAA,SAAejtD,GACb,OAAOq+B,GACL/nC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACLK,IAkBJ2sD,EAAAn2D,UAAA02D,iBAAA,SAAiB52C,EAAG62C,GAClB,GACE72D,KAAKoiC,QAAUvD,IACf7+B,KAAKoiC,QAAUvD,GAEf,OAAO,KAET,IAAMk3B,OAAkC9lD,IAApB4mD,GAAgCA,EACpD,OAAOf,GACL91D,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACL2W,EACA+1C,IASJM,EAAAn2D,UAAA0iC,eAAA,WACE,OAAOgD,GACL5lC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,SAcTgtD,EAAAn2D,UAAA42D,gBAAA,SAAgBhmB,EAAU/R,GACxB,OAAOi2B,GACLh1D,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACLynC,EACA/R,EACA/+B,KAAKqJ,SASTgtD,EAAAn2D,UAAAipB,UAAA,WACE,OAAOgtC,GACLn2D,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,SAOTgtD,EAAAn2D,UAAA62D,gBAAA,WAKE,OAJI/2D,KAAKu2D,uBAAyBv2D,KAAKoV,gBACrCpV,KAAKs2D,cAAgBt2D,KAAK82D,gBAAgB,GAAK92D,KAAKs2D,eACpDt2D,KAAKu2D,sBAAwBv2D,KAAKoV,eAE7BpV,KAAKs2D,eAQdD,EAAAn2D,UAAA+iC,8BAAA,SAA8B9C,GAC5B,IAAM4E,EAA4B,GAUlC,OATAA,EAA0B/jC,OAAS8jC,GACjC9kC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACL82B,EACA4E,EACA,GAEK,IAAIsxB,EAAWtxB,EAA2BlG,KAQnDw3B,EAAAn2D,UAAAyhC,QAAA,WACE,OAAO7N,IASTuiC,EAAAn2D,UAAA0hC,iBAAA,SAAiBr6B,GACf,OAAO0gC,GACLjoC,KAAKmJ,gBACL,EACAnJ,KAAKmJ,gBAAgBnI,OACrBhB,KAAKqJ,OACL9B,IAUJ8uD,EAAAn2D,UAAAijC,eAAA,SAAe77B,EAAa87B,GAC1BpjC,KAAKqjC,UAAUD,EAAY97B,EAAa,GACnCtH,KAAKmJ,kBACRnJ,KAAKmJ,gBAAkB,IAEzBnJ,KAAKmJ,gBAAgBnI,OAASyjC,GAC5BzkC,KAAKmJ,gBACL,EACA7B,EACAtH,KAAKqJ,QAEPrJ,KAAKmV,WAETkhD,EAlSA,CAAyBxvB,GAAA5hC,SAoSzB+xD,GAAeZ,0gBClSfa,GAAA,SAAA7yD,GAQE,SAAA8yD,EAAY5vD,EAAa87B,EAAYwB,GAArC,IAAArgC,EACEH,EAAAM,KAAA1E,OAAOA,KAoBP,GAdAuE,EAAKmlC,MAAQ,GAMbnlC,EAAKkiC,WAAY,EAMjBliC,EAAKmiC,mBAAoB,EAErBjlC,MAAMC,QAAQ4F,EAAY,IAC5B/C,EAAK4+B,eAED77B,EAEF87B,QAEG,QAAmBnzB,IAAfmzB,GAA4BwB,EACrCrgC,EAAK2+B,mBACHE,EAC8B97B,GAEhC/C,EAAKmlC,MAAQ9E,MACR,CAKL,IAJA,IAAIxC,EAAS79B,EAAKw+B,YACZo0B,EAAgD7vD,EAChD6B,EAAkB,GAClB86B,EAAO,GACJhjC,EAAI,EAAGwG,EAAK0vD,EAAYn2D,OAAQC,EAAIwG,IAAMxG,EAAG,CACpD,IAAMy1D,EAAaS,EAAYl2D,GACrB,IAANA,IACFmhC,EAASs0B,EAAW3zB,aAEtBzhC,EAAO6H,EAAiButD,EAAWn0B,sBACnC0B,EAAK93B,KAAKhD,EAAgBnI,QAE5BuD,EAAK2+B,mBAAmBd,EAAQj5B,GAChC5E,EAAKmlC,MAAQzF,WAiRnB,OAzU8BmzB,GAAAF,EAAA9yD,GAiE5B8yD,EAAAh3D,UAAAm3D,iBAAA,SAAiBX,GACV12D,KAAKmJ,gBAGR7H,EAAOtB,KAAKmJ,gBAAiButD,EAAWn0B,qBAAqBx6B,SAF7D/H,KAAKmJ,gBAAkButD,EAAWn0B,qBAAqBx6B,QAIzD/H,KAAK0pC,MAAMv9B,KAAKnM,KAAKmJ,gBAAgBnI,QACrChB,KAAKmV,WAQP+hD,EAAAh3D,UAAAogC,MAAA,WACE,IAAMg3B,EAAkB,IAAIJ,EAC1Bl3D,KAAKmJ,gBAAgBpB,QACrB/H,KAAKoiC,OACLpiC,KAAK0pC,MAAM3hC,SAGb,OADAuvD,EAAgB3gD,gBAAgB3W,MACzBs3D,GAUTJ,EAAAh3D,UAAAygC,eAAA,SAAeh7B,EAAGC,EAAGg7B,EAAcC,GACjC,OAAIA,EAAqB74B,EAAyBhI,KAAKyY,YAAa9S,EAAGC,GAC9Di7B,GAEL7gC,KAAK0mC,mBAAqB1mC,KAAKoV,gBACjCpV,KAAKymC,UAAYngC,KAAKutB,KACpBmQ,GACEhkC,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,OACL,IAGJrJ,KAAK0mC,kBAAoB1mC,KAAKoV,eAEzBovB,GACLxkC,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,OACLrJ,KAAKymC,WACL,EACA9gC,EACAC,EACAg7B,EACAC,KA0BJq2B,EAAAh3D,UAAA02D,iBAAA,SAAiB52C,EAAG62C,EAAiBU,GACnC,GACGv3D,KAAKoiC,QAAUvD,IACd7+B,KAAKoiC,QAAUvD,IACe,IAAhC7+B,KAAKmJ,gBAAgBnI,OAErB,OAAO,KAET,IAAM+0D,OAAkC9lD,IAApB4mD,GAAgCA,EAC9CW,OAAkCvnD,IAApBsnD,GAAgCA,EACpD,OHjCE,SACJpuD,EACAC,EACA66B,EACA56B,EACA2W,EACA+1C,EACAyB,GAEA,GAAIA,EACF,OAAO1B,GACL3sD,EACAC,EACA66B,EAAKA,EAAKjjC,OAAS,GACnBqI,EACA2W,EACA+1C,GAGJ,IAAIrwD,EACJ,GAAIsa,EAAI7W,EAAgBE,EAAS,GAC/B,OAAI0sD,IACFrwD,EAAayD,EAAgBpB,MAAM,EAAGsB,IAC3BA,EAAS,GAAK2W,EAClBta,GAEA,KAGX,GAAIyD,EAAgBA,EAAgBnI,OAAS,GAAKgf,EAChD,OAAI+1C,IACFrwD,EAAayD,EAAgBpB,MAAMoB,EAAgBnI,OAASqI,IACjDA,EAAS,GAAK2W,EAClBta,GAEA,KAGX,IAAK,IAAIzE,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACjB,GAAImI,GAAUhI,EAAd,CAGA,GAAI4e,EAAI7W,EAAgBC,EAASC,EAAS,GACxC,OAAO,KACF,GAAI2W,GAAK7W,EAAgB/H,EAAM,GACpC,OAAO00D,GACL3sD,EACAC,EACAhI,EACAiI,EACA2W,GACA,GAGJ5W,EAAShI,GAEX,OAAO,KGxBEq2D,CACLz3D,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,OACL2W,EACA+1C,EACAyB,IASJN,EAAAh3D,UAAA0iC,eAAA,WACE,OAAOkD,GACL9lC,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,SAOT6tD,EAAAh3D,UAAAkqC,QAAA,WACE,OAAOpqC,KAAK0pC,OASdwtB,EAAAh3D,UAAAw3D,cAAA,SAAc5jD,GACZ,OAAIA,EAAQ,GAAK9T,KAAK0pC,MAAM1oC,QAAU8S,EAC7B,KAEF,IAAI6jD,GAAA1yD,QACTjF,KAAKmJ,gBAAgBpB,MACT,IAAV+L,EAAc,EAAI9T,KAAK0pC,MAAM51B,EAAQ,GACrC9T,KAAK0pC,MAAM51B,IAEb9T,KAAKoiC,SAST80B,EAAAh3D,UAAA03D,eAAA,WAOE,IANA,IAAMzuD,EAAkBnJ,KAAKmJ,gBACvB86B,EAAOjkC,KAAK0pC,MACZtH,EAASpiC,KAAKoiC,OAEd+0B,EAAc,GAChB/tD,EAAS,EACJnI,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACXy1D,EAAa,IAAIiB,GAAA1yD,QACrBkE,EAAgBpB,MAAMqB,EAAQhI,GAC9BghC,GAEF+0B,EAAYhrD,KAAKuqD,GACjBttD,EAAShI,EAEX,OAAO+1D,GAMTD,EAAAh3D,UAAA23D,iBAAA,WAME,IALA,IAAMC,EAAY,GACZ3uD,EAAkBnJ,KAAKmJ,gBACzBC,EAAS,EACP66B,EAAOjkC,KAAK0pC,MACZrgC,EAASrJ,KAAKqJ,OACXpI,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GAQjBK,EAAOw2D,EAPU9C,GACf7rD,EACAC,EACAhI,EACAiI,EACA,KAGFD,EAAShI,EAEX,OAAO02D,GAQTZ,EAAAh3D,UAAA+iC,8BAAA,SAA8B9C,GAC5B,IAAM4E,EAA4B,GAC5BS,EAAiB,GAWvB,OAVAT,EAA0B/jC,OAASukC,GACjCvlC,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,OACL82B,EACA4E,EACA,EACAS,GAEK,IAAI0xB,EACTnyB,EACAlG,GACA2G,IASJ0xB,EAAAh3D,UAAAyhC,QAAA,WACE,OAAO7N,IASTojC,EAAAh3D,UAAA0hC,iBAAA,SAAiBr6B,GACf,OpC5PE,SACJ4B,EACAC,EACA66B,EACA56B,EACA9B,GAEA,IAAK,IAAItG,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,GACEgnC,GAAqB9+B,EAAiBC,EAAQ66B,EAAKhjC,GAAIoI,EAAQ9B,GAE/D,OAAO,EAET6B,EAAS66B,EAAKhjC,GAEhB,OAAO,EoC6OE82D,CACL/3D,KAAKmJ,gBACL,EACAnJ,KAAK0pC,MACL1pC,KAAKqJ,OACL9B,IAUJ2vD,EAAAh3D,UAAAijC,eAAA,SAAe77B,EAAa87B,GAC1BpjC,KAAKqjC,UAAUD,EAAY97B,EAAa,GACnCtH,KAAKmJ,kBACRnJ,KAAKmJ,gBAAkB,IAEzB,IAAM86B,EAAOS,GACX1kC,KAAKmJ,gBACL,EACA7B,EACAtH,KAAKqJ,OACLrJ,KAAK0pC,OAEP1pC,KAAKmJ,gBAAgBnI,OAAyB,IAAhBijC,EAAKjjC,OAAe,EAAIijC,EAAKA,EAAKjjC,OAAS,GACzEhB,KAAKmV,WAET+hD,EAzUA,CAA8BrwB,GAAA5hC,SA2U9B+yD,GAAef,4CCnSf,IAiKAgB,GAjKA,WACE,SAAAC,IAKEl4D,KAAKm4D,oBAAiBloD,EAMtBjQ,KAAKo4D,8BAA2BnoD,EAMhCjQ,KAAKq4D,oBAAsB,KA6I/B,OAnIEH,EAAAh4D,UAAAo4D,eAAA,SAAe7xD,EAAQoiB,GACrB,IAAIllB,EACJ,GAAIklB,EAAa,CACf,IAAIsvC,EAAiBtvC,EAAYsvC,eAC7B/9B,GAAcvR,EAAYsvC,gBAC1Bn4D,KAAKu4D,eAAe9xD,GAEtBoiB,EAAYthB,QACZ4wD,GACAA,EAAeliC,aAAezB,GAAMH,cAEpC8jC,EAAiB/9B,GAAc+9B,IAChBzhC,eAAe7N,EAAYthB,QAE5C5D,EAAU,CACRw0D,eAAgBA,EAChBK,kBAAmB3vC,EAAY2vC,mBAGnC,OAAOx4D,KAAKy4D,aAAa90D,IAY3Bu0D,EAAAh4D,UAAAu4D,aAAA,SAAa90D,GACX,OAAOgO,GACL,CACEwmD,eAAgBn4D,KAAKm4D,eACrBK,kBAAmBx4D,KAAKo4D,0BAE1Bz0D,IAQJu0D,EAAAh4D,UAAAyhC,QAAA,WACE,OAAOz/B,KAWTg2D,EAAAh4D,UAAAw4D,YAAA,SAAYjyD,EAAQoiB,GAClB,OAAO3mB,KAWTg2D,EAAAh4D,UAAAy4D,aAAA,SAAalyD,EAAQoiB,GACnB,OAAO3mB,KAWTg2D,EAAAh4D,UAAA04D,aAAA,SAAanyD,EAAQoiB,GACnB,OAAO3mB,KAUTg2D,EAAAh4D,UAAAq4D,eAAA,SAAe9xD,GACb,OAAOvE,KAWTg2D,EAAAh4D,UAAA24D,aAAA,SAAa95C,EAAS8J,GACpB,OAAO3mB,KAWTg2D,EAAAh4D,UAAA44D,cAAA,SAAc9b,EAAUn0B,GACtB,OAAO3mB,KAWTg2D,EAAAh4D,UAAA64D,cAAA,SAAc/5C,EAAU6J,GACtB,OAAO3mB,KAEXg2D,EA/JA,GAyKM,SAAUc,GAA6Bh6C,EAAUi6C,EAAOpwC,GAC5D,IAOIqwC,EAPEV,EAAoB3vC,EACtBuR,GAAcvR,EAAY2vC,mBAC1B,KACEL,EAAiBtvC,EACnBuR,GAAcvR,EAAYsvC,gBAC1B,KAeJ,GAPEe,EAJAV,GACAL,IACCh9B,GAAqBq9B,EAAmBL,IAE1Bc,EAAQj6C,EAASshB,QAAUthB,GAAU5Z,UAClD6zD,EAAQT,EAAoBL,EAC5Bc,EAAQd,EAAiBK,GAGbx5C,EAGdi6C,GACApwC,QACuD5Y,IAA1B4Y,EAAahb,SAC1C,CACA,IAAMsrD,EAAQ7yD,KAAKyH,IACjB,GAC6B8a,EAAahb,UAaxCqrD,IAAgBl6C,IAClBk6C,EAAcl6C,EAASshB,SAEzB44B,EAAY34B,gBATM,SAAUj5B,GAC1B,IAAK,IAAIrG,EAAI,EAAGwG,EAAKH,EAAYtG,OAAQC,EAAIwG,IAAMxG,EACjDqG,EAAYrG,GAAKqF,KAAK0H,MAAM1G,EAAYrG,GAAKk4D,GAASA,EAExD,OAAO7xD,KAOX,OAAO4xD,ECjRT,IAAAE,GACgB,cADhBA,GAEQ,OAFRA,GAGQ,OAHRA,GAIO,MCqBD,SAAUC,GAAgBC,EAAcC,GAC5C,OAAOC,KAAcC,gBAAgBH,EAAcC,GAW/C,SAAUG,GAAkB3yD,EAAM4yD,GACtC,OAAOC,GAAmB7yD,EAAM4yD,EAAqB,IAAI7yD,KAAK,IAY1D,SAAU8yD,GAAmB7yD,EAAM4yD,EAAqBE,GAC5D,GACE9yD,EAAK+yD,UAAYC,KAAKC,oBACtBjzD,EAAK+yD,UAAYC,KAAKE,UAElBN,EACFE,EAAY1tD,KAAK5J,OAAOwE,EAAKmzD,WAAW5/B,QAAO,gBAAkB,KAEjEu/B,EAAY1tD,KAAKpF,EAAKmzD,eAEnB,CACL,IAAIn5D,OAAC,EACL,IAAKA,EAAIgG,EAAKkgB,WAAYlmB,EAAGA,EAAIA,EAAEo5D,YACjCP,GAAmB74D,EAAG44D,EAAqBE,GAG/C,OAAOA,EAOH,SAAUO,GAAWloD,GACzB,MAAO,oBAAqBA,EAmBxB,SAAUmoD,GAAMC,GACpB,OAAO,IAAIC,WAAYC,gBAAgBF,EAAK,mBAyCxC,SAAUG,GAAgBC,EAAaxmD,GAC3C,OAAA,SAKYnN,EAAM4zD,GACd,IAAM/yD,EAAQ8yD,EAAYh2D,UACXuL,IAAbiE,EAAyBA,EAAWlU,KACpC+G,EACA4zD,QAEY1qD,IAAVrI,GAEA+yD,EAAYA,EAAY35D,OAAS,GAE7BmL,KAAKvE,IAiFb,SAAUgzD,GAAyBF,EAAaG,EAAc3mD,GAClE,OAAA,SAKYnN,EAAM4zD,GACd,IAAM/yD,EAAQ8yD,EAAYh2D,UACXuL,IAAbiE,EAAyBA,EAAWlU,KACpC+G,EACA4zD,QAEY1qD,IAAVrI,IAEA+yD,EAAYA,EAAY35D,OAAS,QAGhBiP,IAAjB4qD,EAA6BA,EAAe9zD,EAAK+zD,WAChClzD,IAerB,SAAUmzD,GAAkBC,EAAY9mD,GAC5C,OAAO,SAAUnN,EAAMa,EAAO+yD,GAC5BK,EAAWt2D,UACIuL,IAAbiE,EAAyBA,EAAWlU,KACpC+G,EACAa,EACA+yD,GAGAA,EAAYA,EAAY35D,OAAS,GAET+F,KACf8H,YAAY9H,IAgBrB,SAAUk0D,GAAoBD,EAAY9mD,GAC9C,IAAIgnD,EAAeC,EACnB,OAAO,SAAUp0D,EAAMa,EAAO+yD,GAC5B,QAAsB1qD,IAAlBirD,EAA6B,CAC/BA,EAAgB,GAChB,IAAME,EAAc,GACpBA,EAAYr0D,EAAK+zD,WAAaE,EAC9BE,EAAcn0D,EAAKuyD,cAAgB8B,EACnCD,EAAcE,GAAsBt0D,EAAK+zD,WAE3CQ,GAAUJ,EAAeC,EAAavzD,EAAO+yD,IAiB3C,SAAUU,GAAsBE,EAAcC,GAClD,IAAMC,EAAgBF,EACtB,OAAA,SAOY3zD,EAAO+yD,EAAae,GAC5B,IAGM30D,EAFJ4zD,EAAYA,EAAY35D,OAAS,GAEd+F,KACjB40D,EAAWF,EAOf,YANiBxrD,IAAb0rD,IACFA,EAAWD,GAKNrC,QADgBppD,IAArBurD,EAAiCA,EAAmBz0D,EAAKuyD,aACCqC,IAY3D,IAAMC,GAA+BP,KAatC,SAAUQ,GAAa3pD,EAAQ4pD,GAGnC,IAFA,IAAM96D,EAAS86D,EAAY96D,OACrB+6D,EAAW,IAAIt6D,MAAMT,GAClBC,EAAI,EAAGA,EAAID,IAAUC,EAC5B86D,EAAS96D,GAAKiR,EAAO4pD,EAAY76D,IAEnC,OAAO86D,EAaH,SAAUC,GAAgBC,EAAeC,EAAWC,GAIxD,IACIl7D,EAAGwG,EADD20D,OAAkCnsD,IAApBksD,EAAgCA,EAAkB,GAEtE,IAAKl7D,EAAI,EAAGwG,EAAKw0D,EAAcj7D,OAAQC,EAAIwG,IAAMxG,EAC/Cm7D,EAAYH,EAAch7D,IAAMi7D,EAElC,OAAOE,EAWH,SAAUC,GAAUC,EAAWv1D,EAAM4zD,EAAazmD,GACtD,IAAInT,EACJ,IAAKA,EAAIgG,EAAKw1D,kBAAmBx7D,EAAGA,EAAIA,EAAEy7D,mBAAoB,CAC5D,IAAMC,EAAUH,EAAUv7D,EAAEu4D,cAC5B,QAAgBrpD,IAAZwsD,EAAuB,CACzB,IAAMC,EAASD,EAAQ17D,EAAE+5D,gBACV7qD,IAAXysD,GACFA,EAAOh4D,KAAKwP,EAAUnT,EAAG45D,KAiB3B,SAAUgC,GACdzqD,EACAoqD,EACAv1D,EACA4zD,EACAzmD,GAIA,OAFAymD,EAAYxuD,KAAK+F,GACjBmqD,GAAUC,EAAWv1D,EAAM4zD,EAAazmD,GACfymD,EAAYvxC,MAyBjC,SAAUkyC,GACdJ,EACAC,EACA9oD,EACAsoD,EACAiC,EACA1oD,GAIA,IAFA,IACItM,EAAOb,EADL/F,QAAuBiP,IAAb2sD,EAAyBA,EAAWvqD,GAAQrR,OAEnDC,EAAI,EAAGA,EAAID,IAAUC,OAEdgP,KADdrI,EAAQyK,EAAOpR,UAQAgP,KANblJ,EAAOo0D,EAAYz2D,UACJuL,IAAbiE,EAAyBA,EAAWlU,KACpC4H,EACA+yD,OACa1qD,IAAb2sD,EAAyBA,EAAS37D,QAAKgP,KAGvCirD,EAAcn0D,EAAKuyD,cAAcvyD,EAAK+zD,WAAWp2D,KAC/CwP,EACAnN,EACAa,EACA+yD,GA8BJ,SAAUkC,GACd3qD,EACAgpD,EACAC,EACA9oD,EACAsoD,EACAiC,EACA1oD,GAWA,OATAymD,EAAYxuD,KAAK+F,GACjBopD,GACEJ,EACAC,EACA9oD,EACAsoD,EACAiC,EACA1oD,GAEiCymD,EAAYvxC,MAGjD,IAAI0zC,QAAiB7sD,EAuBrB,IAAI8sD,QAAY9sD,EAiBV,SAAUupD,KAId,YAHkBvpD,IAAd8sD,IAA+C,oBAAb/1D,WACpC+1D,GAAY/1D,SAASg2D,eAAeC,eAAe,GAAI,GAAI,OAEtDF,ieCxSTG,GApRA,SAAA94D,GACE,SAAA+4D,IAAA,IAAA54D,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAK64D,qBDyhBgBntD,IAAnB6sD,IAAyD,oBAAlBO,gBACzCP,GAAiB,IAAIO,eAEhBP,MClRT,OAlRyBQ,GAAAH,EAAA/4D,GAcvB+4D,EAAAj9D,UAAAyhC,QAAA,WACE,OAAOy3B,IAWT+D,EAAAj9D,UAAAw4D,YAAA,SAAYjyD,EAAQoiB,GAClB,GAAKpiB,EAEE,CAAA,GAAsB,iBAAXA,EAAqB,CACrC,IAAM6oB,EAAM+qC,GAAM5zD,GAClB,OAAOzG,KAAKu9D,wBAAwBjuC,EAAKzG,GACpC,OAAIuxC,GAAW3zD,GACbzG,KAAKu9D,wBACe92D,EACzBoiB,GAGK7oB,KAAKw9D,oBACc/2D,EACxBoiB,GAZF,OAAO,MAsBXs0C,EAAAj9D,UAAAq9D,wBAAA,SAAwBjuC,EAAKzG,GAC3B,IAAMm0B,EAAWh9C,KAAKy9D,yBAAyBnuC,EAAKzG,GACpD,OAAIm0B,EAASh8C,OAAS,EACbg8C,EAAS,GAET,MASXmgB,EAAAj9D,UAAAs9D,oBAAA,SAAoBz2D,EAAM8hB,GACxB,OAAO,MAWTs0C,EAAAj9D,UAAAy4D,aAAA,SAAalyD,EAAQoiB,GACnB,GAAKpiB,EAEE,CAAA,GAAsB,iBAAXA,EAAqB,CACrC,IAAM6oB,EAAM+qC,GAAM5zD,GAClB,OAAOzG,KAAKy9D,yBAAyBnuC,EAAKzG,GACrC,OAAIuxC,GAAW3zD,GACbzG,KAAKy9D,yBACeh3D,EACzBoiB,GAGK7oB,KAAK09D,qBACcj3D,EACxBoiB,GAZF,MAAO,IAuBXs0C,EAAAj9D,UAAAu9D,yBAAA,SAAyBnuC,EAAKzG,GAG5B,IADA,IAAMm0B,EAAW,GACRj8C,EAAIuuB,EAAIrI,WAAYlmB,EAAGA,EAAIA,EAAEo5D,YAChCp5D,EAAE+4D,UAAYC,KAAK4D,cACrBr8D,EACE07C,EACAh9C,KAAK09D,qBAA6C38D,EAAI8nB,IAI5D,OAAOm0B,GAUTmgB,EAAAj9D,UAAAw9D,qBAAA,SAAqB32D,EAAM8hB,GACzB,OAAO3mB,KAUTi7D,EAAAj9D,UAAA04D,aAAA,SAAanyD,EAAQoiB,GACnB,GAAKpiB,EAEE,CAAA,GAAsB,iBAAXA,EAAqB,CACrC,IAAM6oB,EAAM+qC,GAAM5zD,GAClB,OAAOzG,KAAK49D,yBAAyBtuC,EAAKzG,GACrC,OAAIuxC,GAAW3zD,GACbzG,KAAK49D,yBACen3D,EACzBoiB,GAGK7oB,KAAK69D,qBACcp3D,EACxBoiB,GAZF,OAAO,MAuBXs0C,EAAAj9D,UAAA09D,yBAAA,SAAyBtuC,EAAKzG,GAC5B,OAAO,MASTs0C,EAAAj9D,UAAA29D,qBAAA,SAAqB92D,EAAM8hB,GACzB,OAAO,MAUTs0C,EAAAj9D,UAAAq4D,eAAA,SAAe9xD,GACb,GAAKA,EAEE,CAAA,GAAsB,iBAAXA,EAAqB,CACrC,IAAM6oB,EAAM+qC,GAAM5zD,GAClB,OAAOzG,KAAK89D,2BAA2BxuC,GAClC,OAAI8qC,GAAW3zD,GACbzG,KAAK89D,2BAAoDr3D,GAEzDzG,KAAK+9D,uBAA+Ct3D,GAP3D,OAAO,MAgBX02D,EAAAj9D,UAAA49D,2BAAA,SAA2BxuC,GACzB,OAAOtvB,KAAKm4D,gBAQdgF,EAAAj9D,UAAA69D,uBAAA,SAAuBh3D,GACrB,OAAO/G,KAAKm4D,gBAUdgF,EAAAj9D,UAAA24D,aAAA,SAAa95C,EAAS8J,GACpB,IAAM9hB,EAAO/G,KAAKg+D,iBAAiBj/C,EAAS8J,GAC5C,OAAO7oB,KAAKo9D,eAAea,kBAAkBl3D,IAS/Co2D,EAAAj9D,UAAA89D,iBAAA,SAAiBj/C,EAAS8J,GACxB,OAAO,MAWTs0C,EAAAj9D,UAAA44D,cAAA,SAAc9b,EAAUn0B,GACtB,IAAM9hB,EAAO/G,KAAKk+D,kBAAkBlhB,EAAUn0B,GAC9C,OAAO7oB,KAAKo9D,eAAea,kBAAkBl3D,IAQ/Co2D,EAAAj9D,UAAAg+D,kBAAA,SAAkBlhB,EAAUn0B,GAC1B,OAAO,MAUTs0C,EAAAj9D,UAAA64D,cAAA,SAAc/5C,EAAU6J,GACtB,IAAM9hB,EAAO/G,KAAKm+D,kBAAkBn/C,EAAU6J,GAC9C,OAAO7oB,KAAKo9D,eAAea,kBAAkBl3D,IAQ/Co2D,EAAAj9D,UAAAi+D,kBAAA,SAAkBn/C,EAAU6J,GAC1B,OAAO,MAEXs0C,EAlRA,CAAyBlF,ICenB,SAAUmG,GAAar3D,GAC3B,IAAMqI,EAAIsqD,GAAkB3yD,GAAM,GAC5Bs3D,EAAWhvB,KAAKivB,MAAMlvD,GAC5B,OAAOsV,MAAM25C,QAAYpuD,EAAYouD,EAAW,IAO5C,SAAUE,GAAYx3D,GAC1B,IAUMiZ,EAVA5Q,EAAIsqD,GAAkB3yD,GAAM,GAClC,OASMiZ,EAAI,4CAA4CxQ,KAT7BJ,IAWhB8xC,WAAWlhC,EAAE,SAEpB,EAQE,SAAUw+C,GAAoBz3D,GAClC,IASMiZ,EATA5Q,EAAIsqD,GAAkB3yD,GAAM,GAClC,OAQMiZ,EAAI,gBAAgBxQ,KARUJ,IAU3BM,SAASsQ,EAAE,GAAI,SAEtB,EAQE,SAAUy+C,GAAW13D,GACzB,OAAO2yD,GAAkB3yD,GAAM,GAAO23D,OA6ClC,SAAUC,GAAqB53D,EAAMiW,GACzC,IAAM4hD,EAAS5hD,EAAQ6hD,cACvB93D,EAAK8H,YAAY2qD,KAAc/T,eAAemZ,IAO1C,SAAUE,GAAgC/3D,EAAMg4D,GACpD,IAAMH,EAASG,EAAmBjjB,WAClC/0C,EAAK8H,YAAY2qD,KAAc/T,eAAemZ,IAO1C,SAAUI,GAAoBj4D,EAAM63D,GACxC73D,EAAK8H,YAAY2qD,KAAc/T,eAAemZ,keC7G1CK,GAAiB,CACrB,KACA,oCACA,qCAeIC,GAAiB,CACrBC,IAAOC,GACPC,IAAOC,GACPC,IAAOC,IAQHC,GAAczD,GAAgBiD,GAAgB,CAClDE,IAAO1E,GAAgB2E,IACvBC,IAAO5E,GAAgB6E,IACvBC,IAAO9E,GAAgB+E,MAQnBE,GAAe1D,GAAgBiD,GAAgB,CACnDx7C,KAAQm3C,GAAyB6D,GAAY,YAC7CptD,KAAQupD,GAAyB6D,GAAY,cAQzCkB,GAAkB3D,GAAgBiD,GAAgB,CACtDE,IAAOpE,IA4uBT,SAAkBh0D,EAAMgY,EAAS47C,GAC/B,IAAMh3D,EACJg3D,EAAY,GAERxjD,EAAa4H,EAAQ5I,gBACrB6K,EAAU,CAACja,KAAMA,GACvBia,EAAoB,WAAI7J,EACxB,IAAM6H,EAAWD,EAAQ0sC,cACzB,GAAIzsC,EAAS2iB,WAAa7N,GAA0B,CAClD,IAAM4iC,EACJsC,GAA6Bh6C,GAAU,EAAMrb,GAE/Cqd,EAAwB,eAAI01C,EAAW3zB,YACvC5rB,EAAkB,MAAIu/C,EAAW9zB,iBAEnC,IAAMngB,EAAak4C,EAAYA,EAAY35D,OAAS,GAAG+F,KACjD+0D,EAAc8D,GAAan9C,EAAW62C,cACtCjnD,EAASwpD,GAAa1kD,EAAY2kD,GACxCe,GACE77C,EACA6+C,GACAjE,GACAvpD,EACAsoD,EACAmB,MAnwBFuD,IAAOtE,IA4wBT,SAAkBh0D,EAAMgY,EAAS47C,GAC/B,IAAMh3D,EACJg3D,EAAY,GAERxjD,EAAa4H,EAAQ5I,gBAErB6K,EAAU,CAACja,KAAMA,GACvBia,EAAoB,WAAI7J,EACxB,IAAM6H,EAAWD,EAAQ0sC,cACzB,GAAIzsC,EAAS2iB,WAAa7N,GAAgC,CACxD,IAAMwjC,EACJ0B,GAA6Bh6C,GAAU,EAAMrb,GAE/CwT,EAAmB,OAAImgD,EAAgBM,iBAEzC,IAAMn1C,EAAak4C,EAAYA,EAAY35D,OAAS,GAAG+F,KACjD+0D,EAAcgE,GAAar9C,EAAW62C,cACtCjnD,EAASwpD,GAAa1kD,EAAY2kD,GACxCe,GACE77C,EACA++C,GACAnE,GACAvpD,EACAsoD,EACAmB,MAnyBFyD,IAAOxE,IA+zBT,SAAkBh0D,EAAMgY,EAAS47C,GAC/B,IAAMh3D,EACJg3D,EAAY,GAER35C,EAAU25C,EAAYA,EAAY35D,OAAS,GACjDggB,EAAoB,WAAIjC,EAAQ5I,gBAChC,IAAM6I,EAAWD,EAAQ0sC,cACzB,GAAIzsC,EAAS2iB,WAAa7N,GAAoB,CAC5C,IAAMuD,EACJ2hC,GAA6Bh6C,GAAU,EAAMrb,GAE/Cqd,EAAwB,eAAIqW,EAAM0L,YAClCi9B,GAAaj5D,EAAMswB,EAAMuL,iBAAkB+3B,SAxyB/CsF,GAAA,SAAA77D,GAIE,SAAA87D,EAAYr3C,GAAZ,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,KAED2D,EAAUklB,GAA4B,UAK5CtkB,EAAK4zD,eAAiB/9B,GAAc,aAMpC71B,EAAK47D,gBAAkBx8D,EAAQy8D,iBAsGnC,OAxHkBC,GAAAH,EAAA97D,GAyBhB87D,EAAAhgE,UAAAogE,sBAAA,SAAsBtjB,GACfA,IACHA,EAAW,IAEb,IAAK,IAAI/7C,EAAI,EAAGwG,EAAKu1C,EAASh8C,OAAQC,EAAIwG,IAAMxG,EAAG,CACjD,IAAM8d,EAAUi+B,EAAS/7C,GACzB,GAAIjB,KAAKmgE,gBAAiB,CACxB,IAAMI,EAAiBxhD,EAAQjb,IAAI,oBAAsB,KACzD9D,KAAKmgE,gBAAgBphD,EAASwhD,GAEhCxhD,EAAQhO,IAAI,uBAAmBd,KASnCiwD,EAAAhgE,UAAAs9D,oBAAA,SAAoBz2D,EAAM8hB,GACxB,IAAKroB,EAASy+D,GAAgBl4D,EAAKuyD,cACjC,OAAO,KAET,IAAMkH,EAAgBtB,GAAen4D,EAAK+zD,WAC1C,IAAK0F,EACH,OAAO,KAET,IAAMzhD,EAAUyhD,EAAcz5D,EAAM,CAClC/G,KAAKs4D,eAAevxD,EAAM8hB,KAE5B,OAAK9J,GAGL/e,KAAKsgE,sBAAsB,CAACvhD,IACrBA,GAHE,MAWXmhD,EAAAhgE,UAAAw9D,qBAAA,SAAqB32D,EAAM8hB,GACzB,IAAKroB,EAASy+D,GAAgBl4D,EAAKuyD,cACjC,MAAO,GAET,GAAsB,OAAlBvyD,EAAK+zD,UAAoB,CAE3B,IAAM9d,EAAW2f,GAAgB,GAAI8C,GAAa14D,EAAM,CACtD/G,KAAKs4D,eAAevxD,EAAM8hB,KAE5B,OAAIm0B,GACFh9C,KAAKsgE,sBAAsBtjB,GACpBA,GAEA,GAGX,MAAO,IAaTkjB,EAAAhgE,UAAAg+D,kBAAA,SAAkBlhB,EAAUn0B,GAC1BA,EAAc7oB,KAAKy4D,aAAa5vC,GAEhC,IAAM43C,EAAMpH,GAAgB,oCAAqC,OAmBjE,OAjBAoH,EAAIC,eADa,gCACY,YH/M/B,6CGgNED,EAAIC,eHhNN,4CGkNI,qBArLJ,+EAwLED,EAAI7d,aAAa,UAAW,OAC5B6d,EAAI7d,aAAa,UAAW,cAE5Bia,GAEG,CAAC91D,KAAM05D,GACRd,GACAgB,GACA3jB,EACA,CAACn0B,IAEI43C,GAEXP,EAxHA,CAAkBU,GAAA37D,SA+HZ47D,GAAc7E,GAAgBiD,GAAgB,CAClDt6D,KAAQi2D,GAAyB6D,IACjCqC,IAAOlG,GAAyB6D,IAChCsC,KAAQnG,GAAyB6D,IACjC7tD,IAAOgqD,GAAyB6D,IAChCuC,KAAQC,GACRrkD,OAAUg+C,GAAyB4D,IACnC0C,WAAcC,GACd9vD,KAAQupD,GAAyB6D,IACjC2C,MAmWF,SAAoBr6D,EAAM4zD,GACxB,IAAMtoD,EAASsqD,GAAgB,GAAI0E,GAAet6D,EAAM4zD,GACxD,GAAItoD,EAAQ,CACV,IAAMivD,EACJ3G,EAAYA,EAAY35D,OAAS,GAE7BmI,EACJm4D,EAA2B,gBAEvBC,EACJD,EAAyB,cAE3BE,GAAiBr4D,EAAiBo4D,EAAex6D,EAAMsL,OAvWrDgvD,GAAgBrF,GAAgBiD,GAAgB,CACpDwC,IAAO7G,GAAyB2D,IAChC9e,KAAQmb,GAAyBwD,MAQ7BsD,GAAc1F,GAAgBiD,GAAgB,CAClDt6D,KAAQi2D,GAAyB6D,IACjCqC,IAAOlG,GAAyB6D,IAChCsC,KAAQnG,GAAyB6D,IACjC7tD,IAAOgqD,GAAyB6D,IAChCuC,KAAQC,GACRrkD,OAAUg+C,GAAyB4D,IACnCntD,KAAQupD,GAAyB6D,IACjCyC,WAAcC,GACdQ,OAgXF,SAAqB56D,EAAM4zD,GACzB,IAAMtoD,EAAgCsoD,EAAYA,EAAY35D,OAAS,GACvEq7D,GAAUuF,GAAgB76D,EAAM4zD,GAChC,IAAMxxD,EAEHkJ,EAAwB,gBACgBA,EAAa,KACnDlG,KAAKhD,EAAgBnI,WA/WtB4gE,GAAiB5F,GAAgBiD,GAAgB,CACrD4C,MAmVF,SAAoB96D,EAAM4zD,GACxB,IAAMtoD,EAASsqD,GAAgB,GAAImF,GAAe/6D,EAAM4zD,GACxD,GAAItoD,EAAQ,CACV,IAAM0vD,EACJpH,EAAYA,EAAY35D,OAAS,GAE7BmI,EACJ44D,EAA2B,gBAEvBR,EACJQ,EAAyB,cAE3BP,GAAiBr4D,EAAiBo4D,EAAex6D,EAAMsL,OAvVrDyvD,GAAgB9F,GAAgBiD,GAAgB,CACpDwC,IAAO7G,GAAyB2D,IAChC9e,KAAQmb,GAAyBwD,MAQ7B4D,GAAchG,GAAgBiD,GAAgB,CAClDwC,IAAO7G,GAAyB2D,IAChC9e,KAAQmb,GAAyBwD,IACjC6D,OAAUrH,GAAyB2D,IACnC2D,YAAetH,GAAyB2D,IACxC55D,KAAQi2D,GAAyB6D,IACjCqC,IAAOlG,GAAyB6D,IAChCsC,KAAQnG,GAAyB6D,IACjC7tD,IAAOgqD,GAAyB6D,IAChCuC,KAAQC,GACRkB,IAAOvH,GAAyB6D,IAChCptD,KAAQupD,GAAyB6D,IACjC2D,IAAOxH,GAAyB6D,IAChC4D,IAAOzH,GAAyB4D,IAChC8D,KAAQ1H,GAAyB2D,IACjCgE,KAAQ3H,GAAyB2D,IACjCiE,KAAQ5H,GAAyB2D,IACjCkE,cAAiB7H,GAAyB2D,IAC1CmE,OAAU9H,GAAyB4D,IACnC0C,WAAcC,KAOVwB,GAAgB,CAAC,OAAQ,QAOzBC,GAAmB5G,GAAgBiD,GAAgB,CACvDx7C,KAAQs3C,GAAkBiE,IAC1B3tD,KAAQ0pD,GAAkBiE,MAQtBY,GAAe5D,GAAgBiD,GAAgB,CACnD,OACA,MACA,OACA,MACA,OACA,SACA,OACA,UAQIY,GAAkB7D,GAAgBiD,GAAgB,CACtDt6D,KAAQo2D,GAAkBiE,IAC1B8B,IAAO/F,GAAkBiE,IACzB+B,KAAQhG,GAAkBiE,IAC1BpuD,IAAOmqD,GAAkBiE,IACzBgC,KAAQjG,GAAkB8H,IAC1BjmD,OAAUm+C,GAAkB+D,IAC5BztD,KAAQ0pD,GAAkBiE,IAC1BoC,MAASnG,GAAoBF,GAAkBiF,OAQ3C8C,GAAsB9G,GAAgBiD,GAAgB,CAAC,MAAO,SAO9Da,GAAe9D,GAAgBiD,GAAgB,CACnD,OACA,MACA,OACA,MACA,OACA,SACA,OACA,WAQIc,GAAkB/D,GAAgBiD,GAAgB,CACtDt6D,KAAQo2D,GAAkBiE,IAC1B8B,IAAO/F,GAAkBiE,IACzB+B,KAAQhG,GAAkBiE,IAC1BpuD,IAAOmqD,GAAkBiE,IACzBgC,KAAQjG,GAAkB8H,IAC1BjmD,OAAUm+C,GAAkB+D,IAC5BztD,KAAQ0pD,GAAkBiE,IAC1B2C,OAAU1G,GAAoBF,IAiehC,SAAqBh0D,EAAM2vD,EAAYiE,GAErC,IAAM35C,EAAU,CAACja,KAAMA,GACvBia,EAAwB,eAAI01C,EAAW3zB,YACvC/hB,EAAoB,WAAI,GACxB67C,GACE77C,EACA+hD,GACAC,GACAtM,EAAW9zB,iBACX+3B,SApeEqI,GAAsB3H,GAAsB,SAO5C0H,GAAqB/G,GAAgBiD,GAAgB,CACzD4C,MAAS9G,GAAkBiF,MAQvBiD,GAAoBjH,GAAgBiD,GAAgB,CACxD,MACA,OACA,SACA,cACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,gBACA,WAQIiE,GAAuBlH,GAAgBiD,GAAgB,CAC3DwC,IAAO1G,GAAkB4D,IACzBlf,KAAQsb,ID/WJ,SAAgCh0D,EAAMs3D,GAC1C,IAAM8E,EAAO,IAAI9zB,KAAgB,IAAXgvB,GAChBO,EACJuE,EAAKC,iBACL,IACAzmD,GAAUwmD,EAAKE,cAAgB,EAAG,GAClC,IACA1mD,GAAUwmD,EAAKG,aAAc,GAC7B,IACA3mD,GAAUwmD,EAAKI,cAAe,GAC9B,IACA5mD,GAAUwmD,EAAKK,gBAAiB,GAChC,IACA7mD,GAAUwmD,EAAKM,gBAAiB,GAChC,IACF18D,EAAK8H,YAAY2qD,KAAc/T,eAAemZ,OCiW9CqD,OAAUlH,GAAkB4D,IAC5BuD,YAAenH,GAAkB4D,IACjCh6D,KAAQo2D,GAAkBiE,IAC1B8B,IAAO/F,GAAkBiE,IACzB+B,KAAQhG,GAAkBiE,IAC1BpuD,IAAOmqD,GAAkBiE,IACzBgC,KAAQjG,GAAkB8H,IAC1BV,IAAOpH,GAAkBiE,IACzB3tD,KAAQ0pD,GAAkBiE,IAC1BoD,IAAOrH,GAAkBiE,IACzBqD,IAAOtH,GAAkB+D,IACzBwD,KAAQvH,GAAkB4D,IAC1B4D,KAAQxH,GAAkB4D,IAC1B6D,KAAQzH,GAAkB4D,IAC1B8D,cAAiB1H,GAAkB4D,IACnC+D,OAAU3H,GAAkB+D,MAOxB4E,GAA4B,CAChC38B,MAAS,MACTsvB,WAAc,MACda,gBAAmB,OASrB,SAASyJ,GAAiB/4D,EAAO+yD,EAAae,GAC5C,IAAM18C,EAAmCpX,EAAO6jD,cAChD,GAAIzsC,EAAU,CACZ,IAAM28C,EAAW+H,GAA0B1kD,EAAS2iB,WACpD,GAAIg6B,EAEF,OAAOtC,GADYsB,EAAYA,EAAY35D,OAAS,GAAG+F,KACrBuyD,aAAcqC,IAYtD,SAAS6F,GAAiBr4D,EAAiBo4D,EAAex6D,EAAMsL,GAmB9D,OAlBAlJ,EAAgBgD,KACd+0C,WAAWn6C,EAAK48D,aAAa,QAC7BziB,WAAWn6C,EAAK48D,aAAa,SAE3B,QAAStxD,GACXlJ,EAAgBgD,KAA4BkG,EAAY,YACjDA,EAAY,IACnBkvD,EAAcqC,MAAO,GAErBz6D,EAAgBgD,KAAK,GAEnB,SAAUkG,GACZlJ,EAAgBgD,KAA4BkG,EAAa,aAClDA,EAAa,KACpBkvD,EAAcsC,MAAO,GAErB16D,EAAgBgD,KAAK,GAEhBhD,EAYT,SAAS26D,GAAmBvC,EAAep4D,EAAiB86B,GAC1D,IAAI7B,EAASvD,GACTx1B,EAAS,EAWb,GAVIk4D,EAAcqC,MAAQrC,EAAcsC,MACtCzhC,EAASvD,GACTx1B,EAAS,GACAk4D,EAAcqC,MACvBxhC,EAASvD,GACTx1B,EAAS,GACAk4D,EAAcsC,OACvBzhC,EAASvD,GACTx1B,EAAS,GAEI,IAAXA,EAAc,CAChB,IAAK,IAAIpI,EAAI,EAAGwG,EAAK0B,EAAgBnI,OAAS,EAAGC,EAAIwG,EAAIxG,IACvDkI,EAAgBlI,EAAIoI,GAAUF,EAAoB,EAAJlI,GAC9CkI,EAAgBlI,EAAIoI,EAAS,GAAKF,EAAoB,EAAJlI,EAAQ,GACtDsgE,EAAcqC,OAChBz6D,EAAgBlI,EAAIoI,EAAS,GAAKF,EAAoB,EAAJlI,EAAQ,IAExDsgE,EAAcsC,OAChB16D,EAAgBlI,EAAIoI,EAAS,GAAKF,EAAoB,EAAJlI,EAAQ,IAI9D,GADAkI,EAAgBnI,OAAUmI,EAAgBnI,OAAS,EAAKqI,EACpD46B,EACF,IAAShjC,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,EAAIxG,IACxCgjC,EAAKhjC,GAAMgjC,EAAKhjC,GAAK,EAAKoI,EAIhC,OAAO+4B,EAOT,SAAS6+B,GAAUl6D,EAAM4zD,GACvB,IAAMtoD,EAAgCsoD,EAAYA,EAAY35D,OAAS,GACjE+iE,EAAOh9D,EAAK48D,aAAa,QAClB,OAATI,IACF1xD,EAAa,KAAI0xD,GAEnB1H,GAAUqD,GAAc34D,EAAM4zD,GAOhC,SAASwG,GAAgBp6D,EAAM4zD,GACSA,EAAYA,EAAY35D,OAAS,GAC/C,gBAAI+F,EA8D9B,SAASq4D,GAAQr4D,EAAM4zD,GACrB,IAAMh3D,EACJg3D,EAAY,GAERtoD,EAASsqD,GACb,CACExzD,gBAAmB,GACnBo4D,cAAiB,IAEnBV,GACA95D,EACA4zD,GAEF,GAAKtoD,EAAL,CAGA,IAAMlJ,EAEHkJ,EAAwB,uBACpBA,EAAwB,gBAC/B,IAAMkvD,EAA8ClvD,EAAsB,qBACnEA,EAAsB,cAC7B,IAAM+vB,EAAS0hC,GAAmBvC,EAAep4D,GAC3C6V,EAAW,IAAI24C,GAAA1yD,QAAWkE,EAAiBi5B,GACjD42B,GAA6Bh6C,GAAU,EAAOrb,GAC9C,IAAMob,EAAU,IAAIilD,GAAA/+D,QAAQ+Z,GAE5B,OADAD,EAAQ9I,cAAc5D,GAAQ,GACvB0M,GAQT,SAASugD,GAAQv4D,EAAM4zD,GACrB,IAAMh3D,EACJg3D,EAAY,GAERtoD,EAASsqD,GACb,CACExzD,gBAAmB,GACnB86B,KAAQ,GACRs9B,cAAiB,IAEnBG,GACA36D,EACA4zD,GAEF,GAAKtoD,EAAL,CAGA,IAAMlJ,EAEHkJ,EAAwB,uBACpBA,EAAwB,gBAC/B,IAAM4xB,EAAqC5xB,EAAa,YACjDA,EAAa,KACpB,IAAMkvD,EAA8ClvD,EAAsB,qBACnEA,EAAsB,cAC7B,IAAM+vB,EAAS0hC,GAAmBvC,EAAep4D,EAAiB86B,GAC5DjlB,EAAW,IAAIilD,GAAAh/D,QAAgBkE,EAAiBi5B,EAAQ6B,GAC9D+0B,GAA6Bh6C,GAAU,EAAOrb,GAC9C,IAAMob,EAAU,IAAIilD,GAAA/+D,QAAQ+Z,GAE5B,OADAD,EAAQ9I,cAAc5D,GAAQ,GACvB0M,GAQT,SAASygD,GAAQz4D,EAAM4zD,GACrB,IAAMh3D,EACJg3D,EAAY,GAERtoD,EAASsqD,GAAgB,GAAIqF,GAAaj7D,EAAM4zD,GACtD,GAAKtoD,EAAL,CAGA,IAAMkvD,EAA8C,GAC9Cj6D,EAAck6D,GAAiB,GAAID,EAAex6D,EAAMsL,GACxD+vB,EAAS0hC,GAAmBvC,EAAej6D,GAC3C0X,EAAW,IAAIwrB,GAAAvlC,QAAMqC,EAAa86B,GACxC42B,GAA6Bh6C,GAAU,EAAOrb,GAC9C,IAAMob,EAAU,IAAIilD,GAAA/+D,QAAQ+Z,GAE5B,OADAD,EAAQ9I,cAAc5D,GAAQ,GACvB0M,GAQT,SAAS8jD,GAAU97D,EAAMa,EAAO+yD,GAC9B5zD,EAAK67C,aAAa,OAAQh7C,GAC1B,IACMuP,EADUwjD,EAAYA,EAAY35D,OAAS,GACV,WACjCggE,EAAO,CAAC7pD,EAAqB,SAAGA,EAAqB,UAC3D0lD,GACoD,CAAC91D,KAAMA,GACzD67D,GACAhH,GACAoF,EACArG,EACAgI,IASJ,SAAS3C,GAAaj5D,EAAMrB,EAAYi1D,GACtC,IAAM35C,EAAU25C,EAAYA,EAAY35D,OAAS,GAE3Cs4D,EADat4C,EAAQja,KACKuyD,aAC1BniD,EAAa6J,EAAoB,WAKvC,OAHAja,EAAK25D,eAAe,KAAM,MAAOn+D,OAAOmD,EAAW,KACnDqB,EAAK25D,eAAe,KAAM,MAAOn+D,OAAOmD,EAAW,KAC5Bsb,EAAwB,gBAE7C,KAAK6d,GACmB,IAAlBn5B,EAAW,KACbyR,EAAiB,KAAIzR,EAAW,IAGpC,KAAKm5B,GACmB,IAAlBn5B,EAAW,KACbyR,EAAgB,IAAIzR,EAAW,IAEjC,MACF,KAAKm5B,GACmB,IAAlBn5B,EAAW,KACbyR,EAAiB,KAAIzR,EAAW,IAMtC,IAAMo2D,EACa,SAAjB/0D,EAAK40D,SACDmH,GAAoBxJ,GACpB2J,GAAkB3J,GAClBjnD,EAASwpD,GAAa1kD,EAAY2kD,GACxCe,GAEG,CAAC91D,KAAMA,EAAMoQ,WAAcA,GAC5B+rD,GACAtH,GACAvpD,EACAsoD,EACAmB,OA8GJoI,GAAejE,8rBCnnBfkE,GAhPA,SAAA//D,GAME,SAAAggE,EAAYC,EAAWlsD,EAAO0Q,GAA9B,IAAAtkB,EACEH,EAAAM,KAAA1E,OAAOA,KAED2D,EAAUklB,GAA4B,UAK5CtkB,EAAK8/D,UAAYA,EAMjB9/D,EAAK4T,MAAQA,EAQb5T,EAAK+/D,YAAc,KAQnB//D,EAAK+K,IAAM,GAMX/K,EAAKggE,iBACoBt0D,IAAvBtM,EAAQ6gE,WAA2B,IAAM7gE,EAAQ6gE,WAOnDjgE,EAAKkgE,kBAAoB,GAKzBlgE,EAAKizD,cAAgB7zD,EAAQ6zD,cAuLjC,OA9OmBkN,GAAAN,EAAAhgE,GA6DjBggE,EAAAlkE,UAAAiV,QAAA,WACEnV,KAAKkT,cAAcc,KAMrBowD,EAAAlkE,UAAAykE,QAAA,aAKAP,EAAAlkE,UAAAoyB,OAAA,WACE,OAAOtyB,KAAKsP,IAAM,IAAMtP,KAAKqkE,WAS/BD,EAAAlkE,UAAA0kE,eAAA,WACE,IAAK5kE,KAAKskE,YAER,OAAOtkE,KAET,IAAI+yB,EAAO/yB,KAAKskE,YAMhB,EAAG,CACD,GAAIvxC,EAAKzX,YAAc2W,GAIrB,OADAjyB,KAAKukE,YAAc,EACZxxC,EAETA,EAAOA,EAAKuxC,kBACLvxC,GAGT,OAAO/yB,MAOTokE,EAAAlkE,UAAA2kE,oBAAA,WACE,GAAK7kE,KAAKskE,YAAV,CAIA,IAAIvxC,EAAO/yB,KAAKskE,YAKZ16C,EAAO5pB,KAEX,EAAG,CACD,GAAI+yB,EAAKzX,YAAc2W,GAAkB,CAIvCc,EAAKuxC,YAAc,KACnB,MACSvxC,EAAKzX,YAAc2W,GAG5BrI,EAAOmJ,EACEA,EAAKzX,YAAc2W,GAG5BrI,EAAK06C,YAAcvxC,EAAKuxC,YAExB16C,EAAOmJ,EAETA,EAAOnJ,EAAK06C,kBACLvxC,KAQXqxC,EAAAlkE,UAAA4kE,aAAA,WACE,OAAO9kE,KAAKqkE,WAMdD,EAAAlkE,UAAAob,SAAA,WACE,OAAOtb,KAAKmY,OAWdisD,EAAAlkE,UAAA6kE,SAAA,SAAS5sD,GACP,GAAInY,KAAKmY,QAAU8Z,IAAmBjyB,KAAKmY,MAAQA,EACjD,MAAM,IAAIhW,MAAM,gCAElBnC,KAAKmY,MAAQA,EACbnY,KAAKmV,WAUPivD,EAAAlkE,UAAAmzB,KAAA,WACEnxB,KASFkiE,EAAAlkE,UAAA8kE,SAAA,SAASp6C,EAAI60B,GACX,IAAKz/C,KAAKukE,YACR,OAAO,EAGT,IAAIl8B,EAAQroC,KAAKykE,kBAAkB75C,GACnC,GAAKyd,GAGE,IAAc,IAAVA,EACT,OAAO,OAHPA,EAAQoX,EACRz/C,KAAKykE,kBAAkB75C,GAAMyd,EAK/B,IAAM6H,EAAQuP,EAAOpX,EAAQ,IAAO,GACpC,OAAI6H,GAASlwC,KAAKukE,YACT,EAEFnmC,GAAO8R,EAAQlwC,KAAKukE,cAU7BH,EAAAlkE,UAAA+kE,aAAA,SAAar6C,GACX,QAAK5qB,KAAKukE,cAG4B,IAA/BvkE,KAAKykE,kBAAkB75C,IAOhCw5C,EAAAlkE,UAAAglE,cAAA,SAAct6C,GACR5qB,KAAKukE,cACPvkE,KAAKykE,kBAAkB75C,IAAM,IAGnCw5C,EA9OA,CAAmB5uD,GAAAvQ,ikBCqBnBkgE,GAvFA,SAAA/gE,GAOE,SAAAghE,EAAY79D,EAAQmD,EAAY+uC,EAAYthC,GAA5C,IAAA5T,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAKgD,OAASA,EAMdhD,EAAKi1C,YAAcC,EAMnBl1C,EAAKmG,WAAaA,EAMlBnG,EAAK4T,MAAQA,IAqDjB,OArFwBktD,GAAAD,EAAAhhE,GAsCtBghE,EAAAllE,UAAAiV,QAAA,WACEnV,KAAKkT,cAAcc,KAMrBoxD,EAAAllE,UAAAuY,UAAA,WACE,OAAOzY,KAAKuH,QAOd69D,EAAAllE,UAAAolE,SAAA,WACE,OAAOpjE,KAMTkjE,EAAAllE,UAAAqlE,cAAA,WACE,OAAOvlE,KAAKw5C,aAMd4rB,EAAAllE,UAAAkuC,cAAA,WACE,OAA8BpuC,KAAK0K,YAMrC06D,EAAAllE,UAAAob,SAAA,WACE,OAAOtb,KAAKmY,OAOditD,EAAAllE,UAAAmzB,KAAA,WACEnxB,KAEJkjE,EArFA,CAAwB5vD,GAAAvQ,SCHxBugE,GACQ,EADRA,GAEW,EAFXA,GAGU,EAHVA,GAIS,4dCqJH,SAAUC,GAAYC,EAAOC,EAAaC,GAC9C,IAAMC,EAAuCH,EACzCI,GAAY,EACZC,GAAW,EACXC,GAAS,EAEP/6C,EAAe,CACnB1W,GAAWsxD,EAAK7xD,IAAgB,WAC9BgyD,GAAS,EACJD,GACHJ,QA2BN,OAtBIE,EAAIj1D,KAAOtN,GACbyiE,GAAW,EACXF,EACGriE,SACAi4C,MAAK,WACAqqB,GACFH,OAGHM,OAAM,SAAU/hE,GACX4hE,IACEE,EACFL,IAEAC,SAKR36C,EAAa9e,KAAKoI,GAAWsxD,EAAK7xD,GAAiB4xD,IAG9C,WACLE,GAAY,EACZ76C,EAAalL,QAAQvL,MA3KzB,SAAApQ,GASE,SAAA8hE,EACE3+D,EACAmD,EACA+uC,EACA7oC,EACAC,EACAs1D,GANF,IAAA5hE,EAQEH,EAAAM,KAAA1E,KAAMuH,EAAQmD,EAAY+uC,EAAY+rB,KAAgBxlE,YAMtDuE,EAAK6hE,KAAOx1D,EAMZrM,EAAK8hE,OAAS,IAAI9iE,MACE,OAAhBsN,IACFtM,EAAK8hE,OAAOx1D,YAAcA,GAO5BtM,EAAK+hE,UAAY,KAMjB/hE,EAAK4T,MAAQqtD,GAMbjhE,EAAKgiE,mBAAqBJ,IAlDHK,GAAAN,EAAA9hE,GAyDzB8hE,EAAAhmE,UAAAolE,SAAA,WACE,OAAOtlE,KAAKqmE,QAQdH,EAAAhmE,UAAAumE,kBAAA,WACEzmE,KAAKmY,MAAQqtD,GACbxlE,KAAK0mE,iBACL1mE,KAAKmV,WAQP+wD,EAAAhmE,UAAAymE,iBAAA,gBAC0B12D,IAApBjQ,KAAK0K,aACP1K,KAAK0K,WAAaN,GAAUpK,KAAKuH,QAAUvH,KAAKqmE,OAAOn6D,QAEzDlM,KAAKmY,MAAQqtD,GACbxlE,KAAK0mE,iBACL1mE,KAAKmV,WASP+wD,EAAAhmE,UAAAmzB,KAAA,WACMrzB,KAAKmY,OAASqtD,IAAmBxlE,KAAKmY,OAASqtD,KACjDxlE,KAAKmY,MAAQqtD,GACbxlE,KAAKmV,UACLnV,KAAKumE,mBAAmBvmE,KAAMA,KAAKomE,MACnCpmE,KAAKsmE,UAAYb,GACfzlE,KAAKqmE,OACLrmE,KAAK2mE,iBAAiBvyD,KAAKpU,MAC3BA,KAAKymE,kBAAkBryD,KAAKpU,SAQlCkmE,EAAAhmE,UAAA0mE,SAAA,SAASlB,GACP1lE,KAAKqmE,OAASX,EACd1lE,KAAK0K,WAAaN,GAAUpK,KAAKuH,QAAUvH,KAAKqmE,OAAOn6D,QAQzDg6D,EAAAhmE,UAAAwmE,eAAA,WACM1mE,KAAKsmE,YACPtmE,KAAKsmE,YACLtmE,KAAKsmE,UAAY,OAzHvB,CAA2BO,GAAA5hE,2eCqI3B6hE,GAzJA,SAAA1iE,GASE,SAAA2iE,EACE1C,EACAlsD,EACAvH,EACAC,EACAm2D,EACAn+C,GANF,IAAAtkB,EAQEH,EAAAM,KAAA1E,KAAMqkE,EAAWlsD,EAAO0Q,IAAY7oB,YAMpCuE,EAAK0iE,aAAep2D,EAQpBtM,EAAK6hE,KAAOx1D,EAEZrM,EAAK+K,IAAMsB,EAMXrM,EAAK8hE,OAAS,IAAI9iE,MACE,OAAhBsN,IACFtM,EAAK8hE,OAAOx1D,YAAcA,GAO5BtM,EAAK+hE,UAAY,KAMjB/hE,EAAK2iE,kBAAoBF,IAsF7B,OA5IwBG,GAAAJ,EAAA3iE,GA8DtB2iE,EAAA7mE,UAAAolE,SAAA,WACE,OAAOtlE,KAAKqmE,QAOdU,EAAA7mE,UAAA0mE,SAAA,SAASj/C,GACP3nB,KAAKqmE,OAAS1+C,EACd3nB,KAAKmY,MAAQ8Z,GACbjyB,KAAK0mE,iBACL1mE,KAAKmV,WAQP4xD,EAAA7mE,UAAAumE,kBAAA,WAgEF,IACQW,EAhEJpnE,KAAKmY,MAAQ8Z,GACbjyB,KAAK0mE,iBACL1mE,KAAKqmE,SA8DDe,EAAMvlD,GAAsB,EAAG,IACjCwlD,UAAY,gBAChBD,EAAIE,SAAS,EAAG,EAAG,EAAG,GACfF,EAAIllD,QAhETliB,KAAKmV,WAQP4xD,EAAA7mE,UAAAymE,iBAAA,WACE,IAAMjB,EAAyC1lE,KAAKqmE,OAChDX,EAAM6B,cAAgB7B,EAAM8B,cAC9BxnE,KAAKmY,MAAQ8Z,GAEbjyB,KAAKmY,MAAQ8Z,GAEfjyB,KAAK0mE,iBACL1mE,KAAKmV,WAOP4xD,EAAA7mE,UAAAmzB,KAAA,WACMrzB,KAAKmY,OAAS8Z,KAChBjyB,KAAKmY,MAAQ8Z,GACbjyB,KAAKqmE,OAAS,IAAI9iE,MACQ,OAAtBvD,KAAKinE,eACPjnE,KAAKqmE,OAAOx1D,YAAc7Q,KAAKinE,eAG/BjnE,KAAKmY,OAAS8Z,KAChBjyB,KAAKmY,MAAQ8Z,GACbjyB,KAAKmV,UACLnV,KAAKknE,kBAAkBlnE,KAAMA,KAAKomE,MAClCpmE,KAAKsmE,UAAYmB,GAAAC,YACf1nE,KAAKqmE,OACLrmE,KAAK2mE,iBAAiBvyD,KAAKpU,MAC3BA,KAAKymE,kBAAkBryD,KAAKpU,SAUlC+mE,EAAA7mE,UAAAwmE,eAAA,WACM1mE,KAAKsmE,YACPtmE,KAAKsmE,YACLtmE,KAAKsmE,UAAY,OAGvBS,EA5IA,CAAwBY,GAAA1iE,kDCCjB,ICUH2iE,GCueJC,GAzcA,WASE,SAAAC,EACEjmC,EACAkmC,EACAC,EACAC,EACAC,EACAC,GAMAnoE,KAAKooE,YAAcvmC,EAMnB7hC,KAAKqoE,YAAcN,EAGnB,IAAIO,EAAoB,GAClBC,EAAe5sC,GAAa37B,KAAKqoE,YAAaroE,KAAKooE,aAOzDpoE,KAAKwoE,cAAgB,SAAUnjE,GAC7B,IAAMiK,EAAMjK,EAAE,GAAK,IAAMA,EAAE,GAI3B,OAHKijE,EAAkBh5D,KACrBg5D,EAAkBh5D,GAAOi5D,EAAaljE,IAEjCijE,EAAkBh5D,IAO3BtP,KAAKyoE,iBAAmBR,EAMxBjoE,KAAK0oE,uBAAyBR,EAAiBA,EAM/CloE,KAAK2oE,WAAa,GAOlB3oE,KAAK4oE,iBAAkB,EAMvB5oE,KAAK6oE,kBACH7oE,KAAKooE,YAAY3qD,cACfwqD,KACAjoE,KAAKooE,YAAY3vD,aACnBtO,GAAS89D,IAAoB99D,GAASnK,KAAKooE,YAAY3vD,aAMzDzY,KAAK8oE,kBAAoB9oE,KAAKooE,YAAY3vD,YACtCtO,GAASnK,KAAKooE,YAAY3vD,aAC1B,KAMJzY,KAAK+oE,kBAAoB/oE,KAAKqoE,YAAY5vD,YACtCtO,GAASnK,KAAKqoE,YAAY5vD,aAC1B,KAEJ,IAAMuwD,EAAqBj/D,GAAWi+D,GAChCiB,EAAsBn/D,GAAYk+D,GAClCkB,EAAyBr/D,GAAem+D,GACxCmB,EAAwBv/D,GAAco+D,GACtCoB,EAAgBppE,KAAKwoE,cAAcQ,GACnCK,EAAiBrpE,KAAKwoE,cAAcS,GACpCK,EAAoBtpE,KAAKwoE,cAAcU,GACvCK,EAAmBvpE,KAAKwoE,cAAcW,GAYtCK,EArIc,IAuIjBrB,EACG7hE,KAAKkD,IACH,EACAlD,KAAK8H,KACHvB,GACE7C,GAAQg+D,IACLG,EACCA,EADD,UAOT,GAcN,GAZAnoE,KAAKypE,SACHT,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGExpE,KAAK4oE,gBAAiB,CACxB,IAAIc,EAAY5gE,EAAAA,EAChB9I,KAAK2oE,WAAW5oD,SAAQ,SAAU4pD,EAAU1oE,EAAGR,GAC7CipE,EAAYpjE,KAAKiD,IACfmgE,EACAC,EAASljE,OAAO,GAAG,GACnBkjE,EAASljE,OAAO,GAAG,GACnBkjE,EAASljE,OAAO,GAAG,OAMvBzG,KAAK2oE,WAAW5oD,QACd,SAAU4pD,GACR,GACErjE,KAAKkD,IACHmgE,EAASljE,OAAO,GAAG,GACnBkjE,EAASljE,OAAO,GAAG,GACnBkjE,EAASljE,OAAO,GAAG,IAEnBijE,EACF1pE,KAAK8oE,kBAAoB,EACzB,CACA,IAAMc,EAAc,CAClB,CAACD,EAASljE,OAAO,GAAG,GAAIkjE,EAASljE,OAAO,GAAG,IAC3C,CAACkjE,EAASljE,OAAO,GAAG,GAAIkjE,EAASljE,OAAO,GAAG,IAC3C,CAACkjE,EAASljE,OAAO,GAAG,GAAIkjE,EAASljE,OAAO,GAAG,KAEzCmjE,EAAY,GAAG,GAAKF,EAAY1pE,KAAK8oE,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM5pE,KAAK8oE,mBAExBc,EAAY,GAAG,GAAKF,EAAY1pE,KAAK8oE,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM5pE,KAAK8oE,mBAExBc,EAAY,GAAG,GAAKF,EAAY1pE,KAAK8oE,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM5pE,KAAK8oE,mBAM5B,IAAMrgE,EAAOnC,KAAKiD,IAChBqgE,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJtjE,KAAKkD,IAChBogE,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAENnhE,EAAOzI,KAAK8oE,kBAAoB,IACzCa,EAASljE,OAASmjE,KAGtBx1D,KAAKpU,OAIXsoE,EAAoB,GA0PxB,OA7OER,EAAA5nE,UAAA2pE,aAAA,SAAavpE,EAAGC,EAAG8E,EAAGykE,EAAMC,EAAMC,GAChChqE,KAAK2oE,WAAWx8D,KAAK,CACnB1F,OAAQ,CAACqjE,EAAMC,EAAMC,GACrBnpE,OAAQ,CAACP,EAAGC,EAAG8E,MAoBnByiE,EAAA5nE,UAAAupE,SAAA,SAASnpE,EAAGC,EAAG8E,EAAGC,EAAGwkE,EAAMC,EAAMC,EAAMC,EAAMT,GAC3C,IAAMU,EAAmB7iE,EAAe,CAACyiE,EAAMC,EAAMC,EAAMC,IACrDE,EAAkBnqE,KAAK8oE,kBACzB3+D,GAAS+/D,GAAoBlqE,KAAK8oE,kBAClC,KACEsB,EAA0CpqE,KAAK8oE,kBAI/CuB,EACJrqE,KAAKooE,YAAY3qD,YACjB0sD,EAAkB,IAClBA,EAAkB,EAEhBG,GAAmB,EAEvB,GAAId,EAAiB,EAAG,CACtB,GAAIxpE,KAAKqoE,YAAYhyC,YAAcr2B,KAAK+oE,kBAItCuB,EADEngE,GAFuB9C,EAAe,CAAC/G,EAAGC,EAAG8E,EAAGC,KAEnBtF,KAAK+oE,kBA5QjB,KA8QuBuB,GAEvCD,GAAUrqE,KAAKooE,YAAY/xC,YAAc8zC,IAC5CG,EACEH,EAlRiB,KAkRuBG,GAI9C,MAAKA,GAAoBtqE,KAAKyoE,kBAE1B8B,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,MAErBr+D,GAAWq+D,EAAkBlqE,KAAKyoE,kBAP3C,CAcA,IAAI+B,EAAc,EAElB,KAAKF,GAEAC,SAAST,EAAK,KACdS,SAAST,EAAK,KACdS,SAASR,EAAK,KACdQ,SAASR,EAAK,KACdQ,SAASP,EAAK,KACdO,SAASP,EAAK,KACdO,SAASN,EAAK,KACdM,SAASN,EAAK,KAEf,GAAIT,EAAiB,EACnBc,GAAmB,OASnB,GACiB,IANjBE,GACID,SAAST,EAAK,KAAQS,SAAST,EAAK,IAAU,EAAJ,IAC1CS,SAASR,EAAK,KAAQQ,SAASR,EAAK,IAAU,EAAJ,IAC1CQ,SAASP,EAAK,KAAQO,SAASP,EAAK,IAAU,EAAJ,IAC1CO,SAASN,EAAK,KAAQM,SAASN,EAAK,IAAU,EAAJ,KAG7B,GAAfO,GACe,GAAfA,GACe,GAAfA,EAEA,OAMR,GAAIhB,EAAiB,EAAG,CACtB,IAAKc,EAAkB,CACrB,IAAM7/D,EAAS,EAAEnK,EAAE,GAAK+E,EAAE,IAAM,GAAI/E,EAAE,GAAK+E,EAAE,IAAM,GAC7ColE,EAAYzqE,KAAKwoE,cAAc/9D,GAEjCxC,OAAE,EACN,GAAIoiE,EAKFpiE,GAHGwF,GAAOq8D,EAAK,GAAIM,GACf38D,GAAOu8D,EAAK,GAAII,IAClB,EACqB38D,GAAOg9D,EAAU,GAAIL,QAE5CniE,GAAM6hE,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE3C,IAAMviE,GAAM4hE,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE/CH,EAD8BriE,EAAKA,EAAKC,EAAKA,EACFlI,KAAK0oE,uBAElD,GAAI4B,EAAkB,CACpB,GAAIhkE,KAAKspB,IAAItvB,EAAE,GAAK+E,EAAE,KAAOiB,KAAKspB,IAAItvB,EAAE,GAAK+E,EAAE,IAAK,CAElD,IAAMqlE,EAAK,EAAEnqE,EAAE,GAAK8E,EAAE,IAAM,GAAI9E,EAAE,GAAK8E,EAAE,IAAM,GACzCslE,EAAQ3qE,KAAKwoE,cAAckC,GAC3BE,EAAK,EAAEtlE,EAAE,GAAKhF,EAAE,IAAM,GAAIgF,EAAE,GAAKhF,EAAE,IAAM,GACzCuqE,EAAQ7qE,KAAKwoE,cAAcoC,GAEjC5qE,KAAKypE,SACHnpE,EACAC,EACAmqE,EACAE,EACAd,EACAC,EACAY,EACAE,EACArB,EAAiB,GAEnBxpE,KAAKypE,SACHmB,EACAF,EACArlE,EACAC,EACAulE,EACAF,EACAX,EACAC,EACAT,EAAiB,OAEd,CAEL,IAAMsB,EAAK,EAAExqE,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzCwqE,EAAQ/qE,KAAKwoE,cAAcsC,GAC3BE,EAAK,EAAE3lE,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzC2lE,EAAQjrE,KAAKwoE,cAAcwC,GAEjChrE,KAAKypE,SACHnpE,EACAwqE,EACAE,EACA1lE,EACAwkE,EACAiB,EACAE,EACAhB,EACAT,EAAiB,GAEnBxpE,KAAKypE,SACHqB,EACAvqE,EACA8E,EACA2lE,EACAD,EACAhB,EACAC,EACAiB,EACAzB,EAAiB,GAGrB,QAIJ,GAAIa,EAAQ,CACV,IAAKrqE,KAAK6oE,kBACR,OAEF7oE,KAAK4oE,iBAAkB,EAOE,IAAR,GAAd4B,IACHxqE,KAAK6pE,aAAavpE,EAAG+E,EAAGC,EAAGwkE,EAAME,EAAMC,GAEd,IAAR,GAAdO,IACHxqE,KAAK6pE,aAAavpE,EAAG+E,EAAG9E,EAAGupE,EAAME,EAAMD,GAErCS,IAEyB,IAAR,GAAdA,IACHxqE,KAAK6pE,aAAatpE,EAAG+E,EAAGhF,EAAGypE,EAAME,EAAMH,GAEd,IAAR,EAAdU,IACHxqE,KAAK6pE,aAAatpE,EAAG+E,EAAGD,EAAG0kE,EAAME,EAAMD,MAU7ClC,EAAA5nE,UAAAgrE,sBAAA,WACE,IAAM3jE,ErHnSD,CAACuB,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,GqH4SrC,OAPA9I,KAAK2oE,WAAW5oD,SAAQ,SAAU4pD,EAAU1oE,EAAGR,GAC7C,IAAMmQ,EAAM+4D,EAASljE,OACrBiB,GAAiBH,EAAQqJ,EAAI,IAC7BlJ,GAAiBH,EAAQqJ,EAAI,IAC7BlJ,GAAiBH,EAAQqJ,EAAI,OAGxBrJ,GAMTugE,EAAA5nE,UAAAirE,aAAA,WACE,OAAOnrE,KAAK2oE,YAEhBb,EAvcA,GCzCasD,GAA2B,CACtCC,uBAAuB,EACvBC,yBAAyB,GAOdC,GAA0B,CACrCF,uBAAuB,EACvBC,yBAAyB,GFY3B,SAASE,GAAiBpE,EAAKqE,EAAIC,EAAIC,EAAIC,GACzCxE,EAAIyE,YACJzE,EAAI0E,OAAO,EAAG,GACd1E,EAAI2E,OAAON,EAAIC,GACftE,EAAI2E,OAAOJ,EAAIC,GACfxE,EAAI4E,YACJ5E,EAAIrhD,OACJqhD,EAAI6E,OACJ7E,EAAIE,SAAS,EAAG,EAAGhhE,KAAKkD,IAAIiiE,EAAIE,GAAM,EAAGrlE,KAAKkD,IAAIkiE,EAAIE,IACtDxE,EAAI7gD,UAWN,SAAS2lD,GAA8B3qE,EAAM6H,GAE3C,OACE9C,KAAKspB,IAAIruB,EAAc,EAAT6H,GAAc,KAAO,GACnC9C,KAAKspB,IAAIruB,EAAc,EAAT6H,EAAa,GAAK,QAAc,EA2C5C,SAAU+iE,GACdtqC,EACAkmC,EACAl4B,EACAE,GAEA,IAAMH,EAAehU,GAAUiU,EAAck4B,EAAYlmC,GAGrDiO,EAAmBvV,GACrBwtC,EACAh4B,EACAF,GAGIu8B,EAAsBrE,EAAW7xC,wBACXjmB,IAAxBm8D,IACFt8B,GAAoBs8B,GAEtB,IAAMC,EAAsBxqC,EAAW3L,wBACXjmB,IAAxBo8D,IACFv8B,GAAoBu8B,GAOtB,IAAMC,EAAezqC,EAAWppB,YAChC,IAAK6zD,GAAgBnkE,EAAmBmkE,EAAc18B,GAAe,CACnE,IAAM28B,EACJhyC,GAAmBsH,EAAYiO,EAAkBF,GACjDE,EACEy6B,SAASgC,IAAuBA,EAAqB,IACvDz8B,GAAoBy8B,GAIxB,OAAOz8B,EAmEH,SAAU08B,GACdvgE,EACAC,EACAutC,EACA3J,EACAw8B,EACAv8B,EACAi4B,EACAyE,EACAC,EACAC,EACAC,EACArV,GAEA,IAAMv2C,EAAUa,GACdvb,KAAK0H,MAAMyrC,EAAaxtC,GACxB3F,KAAK0H,MAAMyrC,EAAavtC,IAO1B,GAJKqrD,GACH5lD,GAAOqP,EAASoqD,IAGK,IAAnBsB,EAAQ1rE,OACV,OAAOggB,EAAQkB,OAKjB,SAAS2qD,EAAWjlE,GAClB,OAAOtB,KAAK0H,MAAMpG,EAAQ6xC,GAAcA,EAH1Cz4B,EAAQ8E,MAAM2zB,EAAYA,GAM1Bz4B,EAAQ8rD,yBAA2B,UAEnC,IAAMC,EpH3CC,CAACjkE,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,GoH4CvC4jE,EAAQ3sD,SAAQ,SAAUnP,EAAK3P,EAAGR,GpH8E9B,IAAiB6H,EAASC,EAATD,EoH7EZykE,GpH6EqBxkE,EoH7EHqI,EAAIrJ,QpH8EnB,GAAKe,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,OoHrFvB,IAAMykE,EAAqB7iE,GAAS4iE,GAC9BE,EAAsB7iE,GAAU2iE,GAChCG,EAAgBrrD,GACpBvb,KAAK0H,MAAOyrC,EAAauzB,EAAsBl9B,GAC/CxpC,KAAK0H,MAAOyrC,EAAawzB,EAAuBn9B,IAG7CynB,GACH5lD,GAAOu7D,EAAe9B,IAGxB,IAAM+B,EAAc1zB,EAAa3J,EAEjC48B,EAAQ3sD,SAAQ,SAAUnP,EAAK3P,EAAGR,GAChC,IAAM2sE,EAAOx8D,EAAIrJ,OAAO,GAAKwlE,EAAiB,GACxCM,IAASz8D,EAAIrJ,OAAO,GAAKwlE,EAAiB,IAC1CO,EAAWnjE,GAASyG,EAAIrJ,QACxBgmE,EAAYnjE,GAAUwG,EAAIrJ,QAG5BqJ,EAAI80D,MAAMz5D,MAAQ,GAAK2E,EAAI80D,MAAMx5D,OAAS,GAC5CghE,EAAc5mD,UACZ1V,EAAI80D,MACJiH,EACAA,EACA/7D,EAAI80D,MAAMz5D,MAAQ,EAAI0gE,EACtB/7D,EAAI80D,MAAMx5D,OAAS,EAAIygE,EACvBS,EAAOD,EACPE,EAAOF,EACPG,EAAWH,EACXI,EAAYJ,MAKlB,IAAMK,EAAgBzjE,GAAWi+D,GAuJjC,OArJAyE,EAActB,eAAeprD,SAAQ,SAAU4pD,EAAU1oE,EAAGR,GAqB1D,IAAMgG,EAASkjE,EAASljE,OAClB5F,EAAS8oE,EAAS9oE,OACpBsK,EAAK1E,EAAO,GAAG,GACjB8E,EAAK9E,EAAO,GAAG,GACb2E,EAAK3E,EAAO,GAAG,GACjB+E,EAAK/E,EAAO,GAAG,GACb4E,EAAK5E,EAAO,GAAG,GACjBgF,EAAKhF,EAAO,GAAG,GAEXgnE,EAAKZ,GAAYhsE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,GACpD29B,EAAKb,IACPhsE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,GAEjC07B,EAAKoB,GAAYhsE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,GACpD27B,EAAKmB,IACPhsE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,GAEjC47B,EAAKkB,GAAYhsE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,GACpD67B,EAAKiB,IACPhsE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,GAMjC49B,EAAwBxiE,EACxByiE,EAAwBriE,EAC9BJ,EAAK,EACLI,EAAK,EAML,IAMMsiE,EnHlOJ,SAA4BnnE,GAGhC,IAFA,IAAM3F,EAAI2F,EAAI1F,OAELC,EAAI,EAAGA,EAAIF,EAAGE,IAAK,CAI1B,IAFA,IAAI6sE,EAAS7sE,EACT8sE,EAAQznE,KAAKspB,IAAIlpB,EAAIzF,GAAGA,IACnByM,EAAIzM,EAAI,EAAGyM,EAAI3M,EAAG2M,IAAK,CAC9B,IAAMsgE,EAAW1nE,KAAKspB,IAAIlpB,EAAIgH,GAAGzM,IAC7B+sE,EAAWD,IACbA,EAAQC,EACRF,EAASpgE,GAIb,GAAc,IAAVqgE,EACF,OAAO,KAIT,IAAM1sE,EAAMqF,EAAIonE,GAChBpnE,EAAIonE,GAAUpnE,EAAIzF,GAClByF,EAAIzF,GAAKI,EAGT,IAAK,IAAIme,EAAIve,EAAI,EAAGue,EAAIze,EAAGye,IAEzB,IADA,IAAMyuD,GAAQvnE,EAAI8Y,GAAGve,GAAKyF,EAAIzF,GAAGA,GACxBo+B,EAAIp+B,EAAGo+B,EAAIt+B,EAAI,EAAGs+B,IACrBp+B,GAAKo+B,EACP34B,EAAI8Y,GAAG6f,GAAK,EAEZ34B,EAAI8Y,GAAG6f,IAAM4uC,EAAOvnE,EAAIzF,GAAGo+B,GAQnC,IADA,IAAM15B,EAAI,IAAIlE,MAAMV,GACXuL,EAAIvL,EAAI,EAAGuL,GAAK,EAAGA,IAAK,CAC/B3G,EAAE2G,GAAK5F,EAAI4F,GAAGvL,GAAK2F,EAAI4F,GAAGA,GAC1B,IAAK,IAAI0T,EAAI1T,EAAI,EAAG0T,GAAK,EAAGA,IAC1BtZ,EAAIsZ,GAAGjf,IAAM2F,EAAIsZ,GAAG1T,GAAK3G,EAAE2G,GAG/B,OAAO3G,EmHqLeuoE,CANI,CACtB,CANF9iE,GAAMuiE,EACNniE,GAAMoiE,EAKK,EAAG,EAAGnC,EAAKgC,GACpB,CALFpiE,GAAMsiE,EACNliE,GAAMmiE,EAIK,EAAG,EAAGjC,EAAK8B,GACpB,CAAC,EAAG,EAAGriE,EAAII,EAAIkgE,EAAKgC,GACpB,CAAC,EAAG,EAAGriE,EAAII,EAAImgE,EAAK8B,KAGtB,GAAKG,EAAL,CAOA,GAHA7sD,EAAQ+E,OACR/E,EAAQ6qD,YAtRZ,WACE,QAAiC57D,IAA7B23D,GAAwC,CAC1C,IAAMR,EAAMpgE,SAASC,cAAc,UAAUmb,WAAW,MACxDglD,EAAI0F,yBAA2B,UAC/B1F,EAAIC,UAAY,wBAChBmE,GAAiBpE,EAAK,EAAG,EAAG,EAAG,GAC/BoE,GAAiBpE,EAAK,EAAG,EAAG,EAAG,GAC/B,IAAM7lE,EAAO6lE,EAAI+G,aAAa,EAAG,EAAG,EAAG,GAAG5sE,KAC1CqmE,GACEsE,GAA8B3qE,EAAM,IACpC2qE,GAA8B3qE,EAAM,IACpC2qE,GAA8B3qE,EAAM,GAGxC,OAAOqmE,GA0QDwG,KAAgC7W,EAAiB,CAEnDv2C,EAAQ8qD,OAAOL,EAAIC,GAKnB,IAHA,IACM2C,EAAKZ,EAAKhC,EACV6C,EAAKZ,EAAKhC,EACP6C,EAAO,EAAGA,EAHL,EAGmBA,IAE/BvtD,EAAQ+qD,OACNN,EAAKoB,GAAa0B,EAAO,GAAKF,EANpB,GAOV3C,EAAKmB,EAAY0B,EAAOD,EAAO,IAGrBE,GAARD,GACFvtD,EAAQ+qD,OACNN,EAAKoB,GAAa0B,EAAO,GAAKF,EAZtB,GAaR3C,EAAKmB,GAAa0B,EAAO,GAAKD,EAAO,IAK3CttD,EAAQ+qD,OAAOJ,EAAIC,QAEnB5qD,EAAQ8qD,OAAOL,EAAIC,GACnB1qD,EAAQ+qD,OAAO0B,EAAIC,GACnB1sD,EAAQ+qD,OAAOJ,EAAIC,GAGrB5qD,EAAQirD,OAERjrD,EAAQ5b,UACNyoE,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZJ,EACAC,GAGF1sD,EAAQmF,UACN4mD,EAAiB,GAAKY,EACtBZ,EAAiB,GAAKa,GAGxB5sD,EAAQ8E,MACNgqB,EAAmB2J,GAClB3J,EAAmB2J,GAGtBz4B,EAAQsF,UAAU4mD,EAAchrD,OAAQ,EAAG,GAC3ClB,EAAQuF,cAGNqmD,IACF5rD,EAAQ+E,OAER/E,EAAQ8rD,yBAA2B,cACnC9rD,EAAQytD,YAAc,QACtBztD,EAAQ0tD,UAAY,EAEpBjC,EAActB,eAAeprD,SAAQ,SAAU4pD,EAAU1oE,EAAGR,GAC1D,IAAMI,EAAS8oE,EAAS9oE,OAClB4sE,GAAM5sE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,EACzC29B,IAAO7sE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,EAC1C07B,GAAM5qE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,EACzC27B,IAAO7qE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,EAC1C47B,GAAM9qE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,EACzC67B,IAAO/qE,EAAO,GAAG,GAAK2sE,EAAc,IAAMz9B,EAEhD/uB,EAAQ6qD,YACR7qD,EAAQ8qD,OAAOL,EAAIC,GACnB1qD,EAAQ+qD,OAAO0B,EAAIC,GACnB1sD,EAAQ+qD,OAAOJ,EAAIC,GACnB5qD,EAAQgrD,YACRhrD,EAAQ2tD,YAGV3tD,EAAQuF,WAEHvF,EAAQkB,qeG5EjB0sD,GAtUA,SAAAxqE,GAgBE,SAAAyqE,EACEhtC,EACAitC,EACA/G,EACAgH,EACA1K,EACA2K,EACAv1B,EACAkzB,EACAsC,EACAC,EACAtC,EACArV,GAZF,IAAAhzD,EAcEH,EAAAM,KAAA1E,KAAMqkE,EAAWpyC,GAAgB,CAACulC,cAAeD,KAAiBv3D,KAMlEuE,EAAK4qE,kBAAmCl/D,IAApB28D,GAAgCA,EAMpDroE,EAAKi1C,YAAcC,EAMnBl1C,EAAK6qE,QAAUzC,EAMfpoE,EAAK8qE,QAAU,KAMf9qE,EAAK+qE,gBAAkBR,EAMvBvqE,EAAKgrE,gBAAkBR,EAMvBxqE,EAAKirE,kBAAoBR,GAAsC3K,EAM/D9/D,EAAKkrE,aAAe,GAMpBlrE,EAAKmrE,qBAAuB,KAM5BnrE,EAAKorE,SAAW,EAEhB,IAAM3H,EAAe+G,EAAea,mBAClCrrE,EAAKirE,mBAEDK,EAAkBtrE,EAAKgrE,gBAAgB92D,YACzCwvD,EAAkB1jE,EAAK+qE,gBAAgB72D,YAErCq3D,EAAsBD,EACxBlkE,GAAgBq8D,EAAc6H,GAC9B7H,EAEJ,GAAqC,IAAjCh+D,GAAQ8lE,UAGVvrE,EAAK4T,MAAQ8Z,KAIf,IAAM89C,EAAmBluC,EAAWppB,YAChCs3D,IAIA9H,EAHGA,EAGet8D,GAAgBs8D,EAAiB8H,GAFjCA,GAMtB,IAAMhgC,EAAmBg/B,EAAe3gC,cACtC7pC,EAAKirE,kBAAkB,IAGnB1/B,EHEJ,SACJjO,EACAkmC,EACAC,EACAj4B,GAEA,IAAMF,EAAexlC,GAAU29D,GAC3Bl4B,EAAmBq8B,GACrBtqC,EACAkmC,EACAl4B,EACAE,GAeF,QAZKw6B,SAASz6B,IAAqBA,GAAoB,IACrDrmC,GAAcu+D,GAAc,SAAUz9D,GAOpC,OANAulC,EAAmBq8B,GACjBtqC,EACAkmC,EACAx9D,EACAwlC,GAEKw6B,SAASz6B,IAAqBA,EAAmB,KAIrDA,EG5BoBkgC,CACvBnuC,EACAkmC,EACA+H,EACA//B,GAGF,IAAKw6B,SAASz6B,IAAqBA,GAAoB,SAGrDvrC,EAAK4T,MAAQ8Z,KAIf,IAAMg+C,OACmBhgE,IAAvBi/D,EAAmCA,EJ3JV,GI0K3B,GATA3qE,EAAK2rE,eAAiB,IAAIrI,GACxBhmC,EACAkmC,EACA+H,EACA7H,EACAn4B,EAAmBmgC,EACnBlgC,GAGgD,IAA9CxrC,EAAK2rE,eAAe/E,eAAenqE,cAErCuD,EAAK4T,MAAQ8Z,KAIf1tB,EAAKorE,SAAWb,EAAeqB,kBAAkBrgC,GACjD,IAAIw8B,EAAe/nE,EAAK2rE,eAAehF,wBAmBvC,GAjBIjD,IACEpmC,EAAWpkB,YACb6uD,EAAa,GAAK7/D,GAChB6/D,EAAa,GACbrE,EAAgB,GAChBA,EAAgB,IAElBqE,EAAa,GAAK7/D,GAChB6/D,EAAa,GACbrE,EAAgB,GAChBA,EAAgB,KAGlBqE,EAAe3gE,GAAgB2gE,EAAcrE,IAI5Cj+D,GAAQsiE,GAEN,CAML,IALA,IAAM8D,EAActB,EAAeuB,0BACjC/D,EACA/nE,EAAKorE,UAGEW,EAAOF,EAAY3nE,KAAM6nE,GAAQF,EAAYznE,KAAM2nE,IAC1D,IAAK,IAAIC,EAAOH,EAAY1nE,KAAM6nE,GAAQH,EAAYxnE,KAAM2nE,IAAQ,CAClE,IAAMx9C,EAAOk8C,EAAgB1qE,EAAKorE,SAAUW,EAAMC,EAAM92B,GACpD1mB,GACFxuB,EAAKkrE,aAAatjE,KAAK4mB,GAKI,IAA7BxuB,EAAKkrE,aAAazuE,SACpBuD,EAAK4T,MAAQ8Z,SAjBf1tB,EAAK4T,MAAQ8Z,YAiJnB,OApUyBu+C,GAAA3B,EAAAzqE,GA6MvByqE,EAAA3uE,UAAAolE,SAAA,WACE,OAAOtlE,KAAKqvE,SAMdR,EAAA3uE,UAAAuwE,WAAA,WACE,IAAM/D,EAAU,GAahB,GAZA1sE,KAAKyvE,aAAa1vD,QAChB,SAAUgT,EAAM9xB,EAAGR,GACbsyB,GAAQA,EAAKzX,YAAc2W,IAC7By6C,EAAQvgE,KAAK,CACX5E,OAAQvH,KAAKsvE,gBAAgBM,mBAAmB78C,EAAKsxC,WACrDqB,MAAO3yC,EAAKuyC,cAGhBlxD,KAAKpU,OAETA,KAAKyvE,aAAazuE,OAAS,EAEJ,IAAnB0rE,EAAQ1rE,OACVhB,KAAKmY,MAAQ8Z,OACR,CACL,IAAMilB,EAAIl3C,KAAKwvE,kBAAkB,GAC3B5kE,EAAO5K,KAAKuvE,gBAAgBmB,YAAYx5B,GACxCjrC,EAAwB,iBAATrB,EAAoBA,EAAOA,EAAK,GAC/CsB,EAAyB,iBAATtB,EAAoBA,EAAOA,EAAK,GAChDmlC,EAAmB/vC,KAAKuvE,gBAAgBnhC,cAAc8I,GACtDpH,EAAmB9vC,KAAKsvE,gBAAgBlhC,cAC5CpuC,KAAK2vE,UAGD3H,EAAehoE,KAAKuvE,gBAAgBK,mBACxC5vE,KAAKwvE,mBAGPxvE,KAAKqvE,QAAU7C,GACbvgE,EACAC,EACAlM,KAAKw5C,YACL1J,EACA9vC,KAAKsvE,gBAAgB72D,YACrBs3B,EACAi4B,EACAhoE,KAAKkwE,eACLxD,EACA1sE,KAAKovE,QACLpvE,KAAKmvE,aACLnvE,KAAKw3D,aAGPx3D,KAAKmY,MAAQ8Z,GAEfjyB,KAAKmV,WAMP05D,EAAA3uE,UAAAmzB,KAAA,WACE,GAAIrzB,KAAKmY,OAAS8Z,GAAgB,CAChCjyB,KAAKmY,MAAQ8Z,GACbjyB,KAAKmV,UAEL,IAAIw7D,EAAa,EAEjB3wE,KAAK0vE,qBAAuB,GAC5B1vE,KAAKyvE,aAAa1vD,QAChB,SAAUgT,EAAM9xB,EAAGR,GACjB,IAAMmwE,EAAQ79C,EAAKzX,WACnB,GAAIs1D,GAAS3+C,IAAkB2+C,GAAS3+C,GAAmB,CACzD0+C,IAEA,IAAME,EAAkB58D,GACtB8e,EACA/e,IACA,SAAUzO,GACR,IAAM4S,EAAQ4a,EAAKzX,WAEjBnD,GAAS8Z,IACT9Z,GAAS8Z,IACT9Z,GAAS8Z,KAETzd,GAAcq8D,GAEK,MADnBF,IAEE3wE,KAAK8wE,mBACL9wE,KAAKywE,iBAIXzwE,MAEFA,KAAK0vE,qBAAqBvjE,KAAK0kE,KAEjCz8D,KAAKpU,OAGU,IAAf2wE,EACF5hD,WAAW/uB,KAAKywE,WAAWr8D,KAAKpU,MAAO,GAEvCA,KAAKyvE,aAAa1vD,SAAQ,SAAUgT,EAAM9xB,EAAGR,GAC7BsyB,EAAKzX,YACN2W,IACXc,EAAKM,YAUfw7C,EAAA3uE,UAAA4wE,iBAAA,WACE9wE,KAAK0vE,qBAAqB3vD,QAAQvL,IAClCxU,KAAK0vE,qBAAuB,MAEhCb,EApUA,CAAyBlH,GAAA1iE,kDCJzB,IA2PA8rE,GA3PA,WAIE,SAAAC,EAAYC,GAMVjxE,KAAKkxE,mBACmBjhE,IAAtBghE,EAAkCA,EAAoB,KAMxDjxE,KAAKmxE,OAAS,EAMdnxE,KAAKoxE,SAAW,GAMhBpxE,KAAKqxE,QAAU,KAMfrxE,KAAKsxE,QAAU,KAsNnB,OAhNEN,EAAA9wE,UAAAsQ,eAAA,WACE,OAAOxQ,KAAKkxE,cAAgB,GAAKlxE,KAAKkxB,WAAalxB,KAAKkxE,eAO1DF,EAAA9wE,UAAAqxE,YAAA,SAAYC,GACV,KAAOxxE,KAAKwQ,kBACVxQ,KAAKopB,OAOT4nD,EAAA9wE,UAAAqQ,MAAA,WACEvQ,KAAKmxE,OAAS,EACdnxE,KAAKoxE,SAAW,GAChBpxE,KAAKqxE,QAAU,KACfrxE,KAAKsxE,QAAU,MAOjBN,EAAA9wE,UAAAuxE,YAAA,SAAYniE,GACV,OAAOtP,KAAKoxE,SAAS/hE,eAAeC,IAStC0hE,EAAA9wE,UAAA6f,QAAA,SAAQva,GAEN,IADA,IAAIksE,EAAQ1xE,KAAKqxE,QACVK,GACLlsE,EAAEksE,EAAMC,OAAQD,EAAME,KAAM5xE,MAC5B0xE,EAAQA,EAAMG,OASlBb,EAAA9wE,UAAA4D,IAAA,SAAIwL,EAAKuZ,GACP,IAAM6oD,EAAQ1xE,KAAKoxE,SAAS9hE,GAE5B,OADAzK,OAAiBoL,IAAVyhE,EAAqB,IACxBA,IAAU1xE,KAAKsxE,UAERI,IAAU1xE,KAAKqxE,SACxBrxE,KAAKqxE,QAAgCrxE,KAAKqxE,QAAQQ,MAClD7xE,KAAKqxE,QAAQS,MAAQ,OAErBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,OAE5BH,EAAMG,MAAQ,KACdH,EAAMI,MAAQ9xE,KAAKsxE,QACnBtxE,KAAKsxE,QAAQO,MAAQH,EACrB1xE,KAAKsxE,QAAUI,GAXNA,EAAMC,QAoBjBX,EAAA9wE,UAAAypB,OAAA,SAAOra,GACL,IAAMoiE,EAAQ1xE,KAAKoxE,SAAS9hE,GAkB5B,OAjBAzK,OAAiBoL,IAAVyhE,EAAqB,IACxBA,IAAU1xE,KAAKsxE,SACjBtxE,KAAKsxE,QAAgCI,EAAMI,MACvC9xE,KAAKsxE,UACPtxE,KAAKsxE,QAAQO,MAAQ,OAEdH,IAAU1xE,KAAKqxE,SACxBrxE,KAAKqxE,QAAgCK,EAAMG,MACvC7xE,KAAKqxE,UACPrxE,KAAKqxE,QAAQS,MAAQ,QAGvBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,cAErB7xE,KAAKoxE,SAAS9hE,KACnBtP,KAAKmxE,OACAO,EAAMC,QAMfX,EAAA9wE,UAAAgxB,SAAA,WACE,OAAOlxB,KAAKmxE,QAMdH,EAAA9wE,UAAAgW,QAAA,WACE,IAEIw7D,EAFE79D,EAAO,IAAIpS,MAAMzB,KAAKmxE,QACxBlwE,EAAI,EAER,IAAKywE,EAAQ1xE,KAAKsxE,QAASI,EAAOA,EAAQA,EAAMI,MAC9Cj+D,EAAK5S,KAAOywE,EAAME,KAEpB,OAAO/9D,GAMTm9D,EAAA9wE,UAAA6xE,UAAA,WACE,IAEIL,EAFEr/D,EAAS,IAAI5Q,MAAMzB,KAAKmxE,QAC1BlwE,EAAI,EAER,IAAKywE,EAAQ1xE,KAAKsxE,QAASI,EAAOA,EAAQA,EAAMI,MAC9Cz/D,EAAOpR,KAAOywE,EAAMC,OAEtB,OAAOt/D,GAMT2+D,EAAA9wE,UAAA8xE,SAAA,WACE,OAAOhyE,KAAKqxE,QAAQM,QAMtBX,EAAA9wE,UAAA+xE,YAAA,WACE,OAAOjyE,KAAKqxE,QAAQO,MAOtBZ,EAAA9wE,UAAAgyE,aAAA,WACE,OAAOlyE,KAAKsxE,QAAQM,MAMtBZ,EAAA9wE,UAAAkpB,IAAA,WACE,IAAMsoD,EAAQ1xE,KAAKqxE,QAUnB,cATOrxE,KAAKoxE,SAASM,EAAME,MACvBF,EAAMG,QACRH,EAAMG,MAAMC,MAAQ,MAEtB9xE,KAAKqxE,QAAgCK,EAAMG,MACtC7xE,KAAKqxE,UACRrxE,KAAKsxE,QAAU,QAEftxE,KAAKmxE,OACAO,EAAMC,QAOfX,EAAA9wE,UAAAo6B,QAAA,SAAQhrB,EAAK1H,GACX5H,KAAK8D,IAAIwL,GACTtP,KAAKoxE,SAAS9hE,GAAKqiE,OAAS/pE,GAO9BopE,EAAA9wE,UAAA6Q,IAAA,SAAIzB,EAAK1H,GACP/C,IAASyK,KAAOtP,KAAKoxE,UAAW,IAChC,IAAMM,EAAQ,CACZE,KAAMtiE,EACNuiE,MAAO,KACPC,MAAO9xE,KAAKsxE,QACZK,OAAQ/pE,GAEL5H,KAAKsxE,QAGRtxE,KAAKsxE,QAAQO,MAAQH,EAFrB1xE,KAAKqxE,QAAUK,EAIjB1xE,KAAKsxE,QAAUI,EACf1xE,KAAKoxE,SAAS9hE,GAAOoiE,IACnB1xE,KAAKmxE,QAQTH,EAAA9wE,UAAA8Q,QAAA,SAAQpG,GACN5K,KAAKkxE,cAAgBtmE,GAEzBomE,EAzPA,GCLM,SAAUmB,GAAej7B,EAAGvxC,EAAGC,EAAGwsE,GACtC,YAAsBniE,IAAlBmiE,GACFA,EAAc,GAAKl7B,EACnBk7B,EAAc,GAAKzsE,EACnBysE,EAAc,GAAKxsE,EACZwsE,GAEA,CAACl7B,EAAGvxC,EAAGC,GAUZ,SAAUysE,GAAUn7B,EAAGvxC,EAAGC,GAC9B,OAAOsxC,EAAI,IAAMvxC,EAAI,IAAMC,EAQvB,SAAU0sE,GAAOjO,GACrB,OAAOgO,GAAUhO,EAAU,GAAIA,EAAU,GAAIA,EAAU,keCHzDkO,GApCA,SAAAnuE,GAAA,SAAAouE,mDAkCA,OAlCwBC,GAAAD,EAAApuE,GAItBouE,EAAAtyE,UAAAqxE,YAAA,SAAY7wB,GACV,KAAO1gD,KAAKwQ,kBAAkB,CAE5B,GADaxQ,KAAKgyE,WACT1/C,WAAYouB,EACnB,MAEA1gD,KAAKopB,MAAMu7C,YAQjB6N,EAAAtyE,UAAAwyE,mBAAA,WACE,GAAwB,IAApB1yE,KAAKkxB,WAAT,CAGA,IACMmzC,EDqCJ,SAAkB/0D,GACtB,OAAOA,EAAI7K,MAAM,KAAKoL,IAAIC,QCtCN6iE,CADN3yE,KAAKkyE,gBAEXh7B,EAAImtB,EAAU,GACpBrkE,KAAK+f,QACH,SAAUgT,GACJA,EAAKsxC,UAAU,KAAOntB,IACxBl3C,KAAK2pB,OAAO2oD,GAAOv/C,EAAKsxC,YACxBtxC,EAAK4xC,YAEPvwD,KAAKpU,SAGbwyE,EAlCA,CAAwBzB,6CCCxB,IAAA6B,GAMiB,gBANjBA,GAce,cAdfA,GAqBiB,+mBCmMjB,SAASC,GAAkBC,GACzB,OAAKA,EAGDrxE,MAAMC,QAAQoxE,GACT,SAAUj3D,GACf,OAAOi3D,GAIoB,mBAApBA,EACFA,EAGF,SAAUj3D,GACf,MAAO,CAACi3D,IAbD,SAiBXC,GAnMA,SAAA3uE,GAIE,SAAA4uE,EAAYrvE,GAAZ,IAAAY,EACEH,EAAAM,KAAA1E,OAAOA,KAMPuE,EAAKiZ,WAAa4c,GAAcz2B,EAAQ6Z,YAMxCjZ,EAAK0uE,cAAgBJ,GAAkBlvE,EAAQ4/C,cAM/Ch/C,EAAK2uE,8BACiCjjE,IAApCtM,EAAQwvE,yBACJxvE,EAAQwvE,wBAQd5uE,EAAK45C,SAAU,EAMf55C,EAAKsT,YACe5H,IAAlBtM,EAAQwU,MAAsBxU,EAAQwU,MAAQ6B,GAMhDzV,EAAK6uE,YAA2BnjE,IAAlBtM,EAAQ0vE,OAAsB1vE,EAAQ0vE,MAMpD9uE,EAAK+uE,eAAiB3vE,EAAQ6zD,YAM9BjzD,EAAKgvE,aAAe,KAMpBhvE,EAAKivE,aAAe,KAEpB,IAAMnwE,EAAOkB,SAKbA,EAAKkvE,aAAe,IAAI/3D,SAAQ,SAAUC,EAAS+3D,GACjDrwE,EAAKkwE,aAAe53D,EACpBtY,EAAKmwE,aAAeE,OAgG1B,OAzKqBC,GAAAX,EAAA5uE,GAkFnB4uE,EAAA9yE,UAAAojD,gBAAA,WACE,OAAOtjD,KAAKizE,eAOdD,EAAA9yE,UAAAsjD,2BAAA,WACE,OAAOxjD,KAAKkzE,0BAQdF,EAAA9yE,UAAAgvC,cAAA,WACE,OAAOlvC,KAAKwd,YAOdw1D,EAAA9yE,UAAAuyC,eAAA,WACE,OAAOvwC,KAMT8wE,EAAA9yE,UAAA29C,QAAA,WACE,OAAO79C,KAAKyzE,cAQdT,EAAA9yE,UAAAob,SAAA,WACE,OAAOtb,KAAK6X,QAMdm7D,EAAA9yE,UAAA0f,SAAA,WACE,OAAO5f,KAAKozE,QAMdJ,EAAA9yE,UAAA0zE,eAAA,WACE,OAAO5zE,KAAKszE,cAOdN,EAAA9yE,UAAA2zE,QAAA,WACE7zE,KAAKmV,WAUP69D,EAAA9yE,UAAA4zE,gBAAA,SAAgBvwB,GACdvjD,KAAKizE,cAAgBJ,GAAkBtvB,GACvCvjD,KAAKmV,WAOP69D,EAAA9yE,UAAA6kE,SAAA,SAAS5sD,GACPnY,KAAK6X,OAASM,EACdnY,KAAKmV,WAET69D,EAzKA,CAAqBl5D,GAAA7U,SCvCrB8uE,GAAA,WAOE,SAAAC,EAAYvrE,EAAME,EAAMD,EAAME,GAI5B5I,KAAKyI,KAAOA,EAKZzI,KAAK2I,KAAOA,EAKZ3I,KAAK0I,KAAOA,EAKZ1I,KAAK4I,KAAOA,EAiGhB,OA1FEorE,EAAA9zE,UAAA8+C,SAAA,SAASqlB,GACP,OAAOrkE,KAAK8gC,WAAWujC,EAAU,GAAIA,EAAU,KAOjD2P,EAAA9zE,UAAA+zE,kBAAA,SAAkBC,GAChB,OACEl0E,KAAKyI,MAAQyrE,EAAUzrE,MACvByrE,EAAUvrE,MAAQ3I,KAAK2I,MACvB3I,KAAK0I,MAAQwrE,EAAUxrE,MACvBwrE,EAAUtrE,MAAQ5I,KAAK4I,MAS3BorE,EAAA9zE,UAAA4gC,WAAA,SAAWn7B,EAAGC,GACZ,OAAO5F,KAAKyI,MAAQ9C,GAAKA,GAAK3F,KAAK2I,MAAQ3I,KAAK0I,MAAQ9C,GAAKA,GAAK5F,KAAK4I,MAOzEorE,EAAA9zE,UAAAi0E,OAAA,SAAOD,GACL,OACEl0E,KAAKyI,MAAQyrE,EAAUzrE,MACvBzI,KAAK0I,MAAQwrE,EAAUxrE,MACvB1I,KAAK2I,MAAQurE,EAAUvrE,MACvB3I,KAAK4I,MAAQsrE,EAAUtrE,MAO3BorE,EAAA9zE,UAAAmpB,OAAA,SAAO6qD,GACDA,EAAUzrE,KAAOzI,KAAKyI,OACxBzI,KAAKyI,KAAOyrE,EAAUzrE,MAEpByrE,EAAUvrE,KAAO3I,KAAK2I,OACxB3I,KAAK2I,KAAOurE,EAAUvrE,MAEpBurE,EAAUxrE,KAAO1I,KAAK0I,OACxB1I,KAAK0I,KAAOwrE,EAAUxrE,MAEpBwrE,EAAUtrE,KAAO5I,KAAK4I,OACxB5I,KAAK4I,KAAOsrE,EAAUtrE,OAO1BorE,EAAA9zE,UAAAk0E,UAAA,WACE,OAAOp0E,KAAK4I,KAAO5I,KAAK0I,KAAO,GAMjCsrE,EAAA9zE,UAAAq+C,QAAA,WACE,MAAO,CAACv+C,KAAKq0E,WAAYr0E,KAAKo0E,cAMhCJ,EAAA9zE,UAAAm0E,SAAA,WACE,OAAOr0E,KAAK2I,KAAO3I,KAAKyI,KAAO,GAOjCurE,EAAA9zE,UAAAo0E,WAAA,SAAWJ,GACT,OACEl0E,KAAKyI,MAAQyrE,EAAUvrE,MACvB3I,KAAK2I,MAAQurE,EAAUzrE,MACvBzI,KAAK0I,MAAQwrE,EAAUtrE,MACvB5I,KAAK4I,MAAQsrE,EAAUxrE,MAG7BsrE,EA3HA,GAqIM,SAAUO,GAAe9rE,EAAME,EAAMD,EAAME,EAAMsrE,GACrD,YAAkBjkE,IAAdikE,GACFA,EAAUzrE,KAAOA,EACjByrE,EAAUvrE,KAAOA,EACjBurE,EAAUxrE,KAAOA,EACjBwrE,EAAUtrE,KAAOA,EACVsrE,GAEA,IAAIH,GAAUtrE,EAAME,EAAMD,EAAME,OAI3C4rE,GAAeT,GCvITU,GAAe,CAAC,EAAG,EAAG,GA6C5BC,GAAA,WAIE,SAAAC,EAAYhxE,GvIsLR,IAAmBlD,EAAem0E,EAChCC,EuI/JA3nC,EACJ,GApBAltC,KAAKyX,aAA8BxH,IAApBtM,EAAQ8T,QAAwB9T,EAAQ8T,QAAU,EAMjEzX,KAAKmtC,aAAexpC,EAAQypC,YAC5BvoC,GvI0KqBpE,EuIxKjBT,KAAKmtC,avIwK2BynC,GuIpKhC,EvIqKAC,EuIxKA,SAAUv0E,EAAGC,GACX,OAAOA,EAAID,IvIuKSD,EACrBI,EAAIq0E,OAAM,SAAUC,EAAYjhE,GACrC,GAAc,IAAVA,EACF,OAAO,EAET,IAAMkhE,EAAMH,EAAQp0E,EAAIqT,EAAQ,GAAIihE,GACpC,QAASC,EAAM,GAAMJ,GAAsB,IAARI,OuIzKjC,KAKGrxE,EAAQsxE,QACX,IAAK,IAAIh0E,EAAI,EAAGwG,EAAKzH,KAAKmtC,aAAansC,OAAS,EAAGC,EAAIwG,IAAMxG,EAC3D,GAAKisC,GAGH,GAAIltC,KAAKmtC,aAAalsC,GAAKjB,KAAKmtC,aAAalsC,EAAI,KAAOisC,EAAY,CAClEA,OAAaj9B,EACb,YAJFi9B,EAAaltC,KAAKmtC,aAAalsC,GAAKjB,KAAKmtC,aAAalsC,EAAI,GAchEjB,KAAKitC,YAAcC,EAMnBltC,KAAK0X,QAAU1X,KAAKmtC,aAAansC,OAAS,EAM1ChB,KAAKk1E,aAA6BjlE,IAAnBtM,EAAQwxE,OAAuBxxE,EAAQwxE,OAAS,KAM/Dn1E,KAAKo1E,SAAW,UACQnlE,IAApBtM,EAAQsxE,UACVj1E,KAAKo1E,SAAWzxE,EAAQsxE,QACxBpwE,EAAO7E,KAAKo1E,SAASp0E,QAAUhB,KAAKmtC,aAAansC,OAAQ,KAG3D,IAAMuG,EAAS5D,EAAQ4D,YAER0I,IAAX1I,GAAyBvH,KAAKk1E,SAAYl1E,KAAKo1E,WACjDp1E,KAAKk1E,QAAUnrE,GAAWxC,IAG5B1C,GACI7E,KAAKk1E,SAAWl1E,KAAKo1E,UAAcp1E,KAAKk1E,UAAYl1E,KAAKo1E,SAC3D,IAOFp1E,KAAKq1E,WAAa,UACQplE,IAAtBtM,EAAQ2xE,YACVt1E,KAAKq1E,WAAa1xE,EAAQ2xE,UAC1BzwE,EAAO7E,KAAKq1E,WAAWr0E,QAAUhB,KAAKmtC,aAAansC,OAAQ,KAO7DhB,KAAKu1E,eACkBtlE,IAArBtM,EAAQ6xE,SACJ7xE,EAAQ6xE,SACPx1E,KAAKq1E,WAEN,KtDrJuB,IsDsJ7BxwE,GACI7E,KAAKu1E,WAAav1E,KAAKq1E,YACtBr1E,KAAKu1E,YAAcv1E,KAAKq1E,WAC3B,IAOFr1E,KAAKm1B,aAAqBllB,IAAX1I,EAAuBA,EAAS,KAM/CvH,KAAKy1E,gBAAkB,KAMvBz1E,KAAK01E,SAAW,CAAC,EAAG,GAMpB11E,KAAK21E,WAAa,CAAC,EAAG,EAAG,EAAG,QAEN1lE,IAAlBtM,EAAQiyE,MACV51E,KAAKy1E,gBAAkB9xE,EAAQiyE,MAAM/lE,KAAI,SAAUjF,EAAMssC,GACvD,IAAMg9B,EAAY,IAAIM,GACpBluE,KAAKiD,IAAI,EAAGqB,EAAK,IACjBtE,KAAKkD,IAAIoB,EAAK,GAAK,GAAG,GACtBtE,KAAKiD,IAAI,EAAGqB,EAAK,IACjBtE,KAAKkD,IAAIoB,EAAK,GAAK,GAAG,IAExB,GAAIrD,EAAQ,CACV,IAAMsuE,EAAsB71E,KAAKqwE,0BAA0B9oE,EAAQ2vC,GACnEg9B,EAAUzrE,KAAOnC,KAAKkD,IAAIqsE,EAAoBptE,KAAMyrE,EAAUzrE,MAC9DyrE,EAAUvrE,KAAOrC,KAAKiD,IAAIssE,EAAoBltE,KAAMurE,EAAUvrE,MAC9DurE,EAAUxrE,KAAOpC,KAAKkD,IAAIqsE,EAAoBntE,KAAMwrE,EAAUxrE,MAC9DwrE,EAAUtrE,KAAOtC,KAAKiD,IAAIssE,EAAoBjtE,KAAMsrE,EAAUtrE,MAEhE,OAAOsrE,IACNl0E,MACMuH,GACTvH,KAAK81E,qBAAqBvuE,GA0chC,OA9bEotE,EAAAz0E,UAAA61E,iBAAA,SAAiBxuE,EAAQ6S,EAAM1Q,GAE7B,IADA,IAAMwqE,EAAYl0E,KAAKqwE,0BAA0B9oE,EAAQ6S,GAChDnZ,EAAIizE,EAAUzrE,KAAMhB,EAAKysE,EAAUvrE,KAAM1H,GAAKwG,IAAMxG,EAC3D,IAAK,IAAIue,EAAI00D,EAAUxrE,KAAMm8B,EAAKqvC,EAAUtrE,KAAM4W,GAAKqlB,IAAMrlB,EAC3D9V,EAAS,CAAC0Q,EAAMnZ,EAAGue,KAYzBm1D,EAAAz0E,UAAA81E,gCAAA,SACE3R,EACA36D,EACAusE,EACApuE,GAEA,IAAelC,EAAGC,EACdswE,EAAkB,KAClBh/B,EAAImtB,EAAU,GAAK,EAOvB,IANyB,IAArBrkE,KAAKitC,aACPtnC,EAAI0+D,EAAU,GACdz+D,EAAIy+D,EAAU,IAEd6R,EAAkBl2E,KAAK4vE,mBAAmBvL,EAAWx8D,GAEhDqvC,GAAKl3C,KAAKyX,SAAS,CAYxB,GAAI/N,EAASwtC,EAXY,IAArBl3C,KAAKitC,YAGKsnC,GAFZ5uE,EAAIW,KAAK4H,MAAMvI,EAAI,GAEoBA,EADvCC,EAAIU,KAAK4H,MAAMtI,EAAI,GAC0BA,EAAGqwE,GAEpCj2E,KAAKqwE,0BACf6F,EACAh/B,EACA++B,IAIF,OAAO,IAEP/+B,EAEJ,OAAO,GAQTy9B,EAAAz0E,UAAAuY,UAAA,WACE,OAAOzY,KAAKm1B,SAQdw/C,EAAAz0E,UAAA2Y,WAAA,WACE,OAAO7Y,KAAK0X,SAQdi9D,EAAAz0E,UAAA0Y,WAAA,WACE,OAAO5Y,KAAKyX,SASdk9D,EAAAz0E,UAAAi2E,UAAA,SAAUj/B,GACR,OAAIl3C,KAAKk1E,QACAl1E,KAAKk1E,QAELl1E,KAAKo1E,SAASl+B,IAUzBy9B,EAAAz0E,UAAAkuC,cAAA,SAAc8I,GACZ,OAAOl3C,KAAKmtC,aAAa+J,IAQ3By9B,EAAAz0E,UAAAuyC,eAAA,WACE,OAAOzyC,KAAKmtC,cASdwnC,EAAAz0E,UAAAk2E,2BAAA,SAA2B/R,EAAW4R,EAAepuE,GACnD,GAAIw8D,EAAU,GAAKrkE,KAAK0X,QAAS,CAC/B,GAAyB,IAArB1X,KAAKitC,YAAmB,CAC1B,IAAMxkC,EAAsB,EAAf47D,EAAU,GACjB37D,EAAsB,EAAf27D,EAAU,GACvB,OAAOkQ,GACL9rE,EACAA,EAAO,EACPC,EACAA,EAAO,EACPutE,GAGJ,IAAMC,EAAkBl2E,KAAK4vE,mBAC3BvL,EACAx8D,GAAc7H,KAAK21E,YAErB,OAAO31E,KAAKqwE,0BACV6F,EACA7R,EAAU,GAAK,EACf4R,GAGJ,OAAO,MASTtB,EAAAz0E,UAAAm2E,6BAAA,SAA6BhS,EAAWntB,EAAG++B,GACzC,GAAI/+B,EAAIl3C,KAAK0X,SAAWw/B,EAAIl3C,KAAKyX,QAC/B,OAAO,KAGT,IAAM6+D,EAAajS,EAAU,GACvBkS,EAAalS,EAAU,GACvBmS,EAAanS,EAAU,GAE7B,GAAIntB,IAAMo/B,EACR,OAAO/B,GACLgC,EACAC,EACAD,EACAC,EACAP,GAIJ,GAAIj2E,KAAKitC,YAAa,CACpB,IAAMn/B,EAASxH,KAAKyH,IAAI/N,KAAKitC,YAAaiK,EAAIo/B,GACxC7tE,EAAOnC,KAAK4H,MAAMqoE,EAAazoE,GAC/BpF,EAAOpC,KAAK4H,MAAMsoE,EAAa1oE,GACrC,OAAIopC,EAAIo/B,EACC/B,GAAwB9rE,EAAMA,EAAMC,EAAMA,EAAMutE,GAKlD1B,GAAwB9rE,EAFlBnC,KAAK4H,MAAMJ,GAAUyoE,EAAa,IAAM,EAEV7tE,EAD9BpC,KAAK4H,MAAMJ,GAAU0oE,EAAa,IAAM,EACEP,GAGzD,IAAMC,EAAkBl2E,KAAK4vE,mBAAmBvL,EAAWrkE,KAAK21E,YAChE,OAAO31E,KAAKqwE,0BAA0B6F,EAAiBh/B,EAAG++B,IAU5DtB,EAAAz0E,UAAAu2E,mBAAA,SAAmBv/B,EAAGg9B,EAAWrsE,GAC/B,IAAMstE,EAASn1E,KAAKm2E,UAAUj/B,GACxBxsC,EAAa1K,KAAKouC,cAAc8I,GAChCs+B,EAAWt9B,GAAOl4C,KAAK0wE,YAAYx5B,GAAIl3C,KAAK01E,UAC5CjtE,EAAO0sE,EAAO,GAAKjB,EAAUzrE,KAAO+sE,EAAS,GAAK9qE,EAClD/B,EAAOwsE,EAAO,IAAMjB,EAAUvrE,KAAO,GAAK6sE,EAAS,GAAK9qE,EAG9D,OAAO3B,GAAeN,EAFT0sE,EAAO,GAAKjB,EAAUxrE,KAAO8sE,EAAS,GAAK9qE,EAEtB/B,EADrBwsE,EAAO,IAAMjB,EAAUtrE,KAAO,GAAK4sE,EAAS,GAAK9qE,EAChB7C,IAUhD8sE,EAAAz0E,UAAAmwE,0BAAA,SAA0B9oE,EAAQ2vC,EAAG++B,GACnC,IAAM5R,EAAYoQ,GAClBz0E,KAAK02E,uBAAuBnvE,EAAO,GAAIA,EAAO,GAAI2vC,GAAG,EAAOmtB,GAC5D,IAAM57D,EAAO47D,EAAU,GACjB37D,EAAO27D,EAAU,GAEvB,OADArkE,KAAK02E,uBAAuBnvE,EAAO,GAAIA,EAAO,GAAI2vC,GAAG,EAAMmtB,GACpDkQ,GACL9rE,EACA47D,EAAU,GACV37D,EACA27D,EAAU,GACV4R,IAQJtB,EAAAz0E,UAAAy2E,mBAAA,SAAmBtS,GACjB,IAAM8Q,EAASn1E,KAAKm2E,UAAU9R,EAAU,IAClC35D,EAAa1K,KAAKouC,cAAci2B,EAAU,IAC1CmR,EAAWt9B,GAAOl4C,KAAK0wE,YAAYrM,EAAU,IAAKrkE,KAAK01E,UAC7D,MAAO,CACLP,EAAO,IAAM9Q,EAAU,GAAK,IAAOmR,EAAS,GAAK9qE,EACjDyqE,EAAO,IAAM9Q,EAAU,GAAK,IAAOmR,EAAS,GAAK9qE,IAYrDiqE,EAAAz0E,UAAA0vE,mBAAA,SAAmBvL,EAAWx8D,GAC5B,IAAMstE,EAASn1E,KAAKm2E,UAAU9R,EAAU,IAClC35D,EAAa1K,KAAKouC,cAAci2B,EAAU,IAC1CmR,EAAWt9B,GAAOl4C,KAAK0wE,YAAYrM,EAAU,IAAKrkE,KAAK01E,UACvDjtE,EAAO0sE,EAAO,GAAK9Q,EAAU,GAAKmR,EAAS,GAAK9qE,EAChDhC,EAAOysE,EAAO,IAAM9Q,EAAU,GAAK,GAAKmR,EAAS,GAAK9qE,EAG5D,OAAO3B,GAAeN,EAAMC,EAFfD,EAAO+sE,EAAS,GAAK9qE,EACrBhC,EAAO8sE,EAAS,GAAK9qE,EACY7C,IAchD8sE,EAAAz0E,UAAA02E,kCAAA,SAAkClxE,EAAYgF,EAAY0nE,GACxD,OAAOpyE,KAAK62E,gCACVnxE,EAAW,GACXA,EAAW,GACXgF,GACA,EACA0nE,IAiBJuC,EAAAz0E,UAAA22E,gCAAA,SACElxE,EACAC,EACA8E,EACAosE,EACA1E,GAEA,IAAMl7B,EAAIl3C,KAAKmwE,kBAAkBzlE,GAC3Bob,EAAQpb,EAAa1K,KAAKouC,cAAc8I,GACxCi+B,EAASn1E,KAAKm2E,UAAUj/B,GACxBs+B,EAAWt9B,GAAOl4C,KAAK0wE,YAAYx5B,GAAIl3C,KAAK01E,UAE9Ca,EAAczwD,GAASngB,EAAIwvE,EAAO,IAAOzqE,EAAa8qE,EAAS,GAC/DgB,EAAc1wD,GAASqvD,EAAO,GAAKvvE,GAAM8E,EAAa8qE,EAAS,GAUnE,OARIsB,GACFP,EAAapoE,GAAKooE,EA5fP,GA4f+B,EAC1CC,EAAaroE,GAAKqoE,EA7fP,GA6f+B,IAE1CD,EAAatoE,GAAMsoE,EA/fR,GAggBXC,EAAavoE,GAAMuoE,EAhgBR,IAmgBNrE,GAAwBj7B,EAAGq/B,EAAYC,EAAYpE,IAkB5DuC,EAAAz0E,UAAAw2E,uBAAA,SAAuB/wE,EAAGC,EAAGsxC,EAAG4/B,EAA2B1E,GACzD,IAAM+C,EAASn1E,KAAKm2E,UAAUj/B,GACxBxsC,EAAa1K,KAAKouC,cAAc8I,GAChCs+B,EAAWt9B,GAAOl4C,KAAK0wE,YAAYx5B,GAAIl3C,KAAK01E,UAE9Ca,GAAc5wE,EAAIwvE,EAAO,IAAMzqE,EAAa8qE,EAAS,GACrDgB,GAAcrB,EAAO,GAAKvvE,GAAK8E,EAAa8qE,EAAS,GAUzD,OARIsB,GACFP,EAAapoE,GAAKooE,EA9hBP,GA8hB+B,EAC1CC,EAAaroE,GAAKqoE,EA/hBP,GA+hB+B,IAE1CD,EAAatoE,GAAMsoE,EAjiBR,GAkiBXC,EAAavoE,GAAMuoE,EAliBR,IAqiBNrE,GAAwBj7B,EAAGq/B,EAAYC,EAAYpE,IAW5DuC,EAAAz0E,UAAA62E,yBAAA,SAAyBrxE,EAAYwxC,EAAGk7B,GACtC,OAAOpyE,KAAK02E,uBACVhxE,EAAW,GACXA,EAAW,GACXwxC,GACA,EACAk7B,IAQJuC,EAAAz0E,UAAA82E,uBAAA,SAAuB3S,GACrB,OAAOrkE,KAAKmtC,aAAak3B,EAAU,KAWrCsQ,EAAAz0E,UAAAwwE,YAAA,SAAYx5B,GACV,OAAIl3C,KAAKu1E,UACAv1E,KAAKu1E,UAELv1E,KAAKq1E,WAAWn+B,IAQ3By9B,EAAAz0E,UAAA+2E,iBAAA,SAAiB//B,GACf,OAAKl3C,KAAKy1E,gBAKDz1E,KAAKy1E,gBAAgBv+B,GAJrBl3C,KAAKm1B,QACRn1B,KAAKqwE,0BAA0BrwE,KAAKm1B,QAAS+hB,GAC7C,MAuBRy9B,EAAAz0E,UAAAiwE,kBAAA,SAAkBzlE,EAAY+rC,GAM5B,OAAOhqC,GALG7L,EACRZ,KAAKmtC,aACLziC,EACA+rC,GAAiB,GAEHz2C,KAAKyX,QAASzX,KAAK0X,UAOrCi9D,EAAAz0E,UAAA41E,qBAAA,SAAqBvuE,GAGnB,IAFA,IAAMvG,EAAShB,KAAKmtC,aAAansC,OAC3Bk2E,EAAiB,IAAIz1E,MAAMT,GACxBk2C,EAAIl3C,KAAKyX,QAASy/B,EAAIl2C,IAAUk2C,EACvCggC,EAAehgC,GAAKl3C,KAAKqwE,0BAA0B9oE,EAAQ2vC,GAE7Dl3C,KAAKy1E,gBAAkByB,GAE3BvC,EA/lBA,GAimBAwC,GAAezC,GC1oBT,SAAU0C,GAAiB55D,GAC/B,IAAIiZ,EAAWjZ,EAAW+Y,qBAK1B,OAJKE,IACHA,EAqIE,SACJjZ,EACA65D,EACAC,EACAC,GAGA,OAvGI,SAA0BhwE,EAAQ8vE,EAAaC,EAAcC,GACjE,IAAMhtE,OAAwB0F,IAAfsnE,EAA2BA,EAAapwE,EAEjDimC,EAAcoqC,GAAsBjwE,EAAQ8vE,EAAaC,GAE/D,OAAO,IAAIH,GAAS,CAClB5vE,OAAQA,EACR4tE,OAAQ7qE,GAAU/C,EAAQgD,GAC1B6iC,YAAaA,EACbooC,SAAU8B,IA8FLG,CADQC,GAAqBl6D,GACL65D,EAAaC,EAAcC,GA5I7CI,CAAoBn6D,GAC/BA,EAAWgZ,mBAAmBC,IAEzBA,EA8FT,SAAS+gD,GACPjwE,EACA8vE,EACAC,EACAM,GAiBA,IAfA,IAAMlgE,OAA0BzH,IAAhBonE,EAA4BA,EvDxHd,GuD0HxBnrE,EAAS9B,GAAU7C,GACnB0E,EAAQ9B,GAAS5C,GAEjBiuE,EAAWt9B,QACEjoC,IAAjBqnE,EAA6BA,EvDxHA,KuD0HzB//D,EACJqgE,EAAoB,EAChBA,EACAtxE,KAAKkD,IAAIyC,EAAQupE,EAAS,GAAItpE,EAASspE,EAAS,IAEhDx0E,EAAS0W,EAAU,EACnB01B,EAAc,IAAI3rC,MAAMT,GACrBk2C,EAAI,EAAGA,EAAIl2C,IAAUk2C,EAC5B9J,EAAY8J,GAAK3/B,EAAgBjR,KAAKyH,IAAI,EAAGmpC,GAE/C,OAAO9J,EA4BH,SAAUsqC,GAAqBl6D,GAEnC,IAAIjW,GADJiW,EAAa4c,GAAc5c,IACH/E,YACxB,IAAKlR,EAAQ,CACX,IAAMswE,EACH,IAAMtjD,GAAgBC,GAAMP,SAAYzW,EAAW0Y,mBACtD3uB,EAASwB,IAAgB8uE,GAAOA,EAAMA,EAAMA,GAE9C,OAAOtwE,geClITuwE,GAAA,SAAA1zE,GAIE,SAAA2zE,EAAYp0E,GAAZ,IAAAY,EACEH,EAAAM,KAAA1E,KAAM,CACJujD,aAAc5/C,EAAQ4/C,aACtB4vB,wBAAyBxvE,EAAQwvE,wBACjC31D,WAAY7Z,EAAQ6Z,WACpBrF,MAAOxU,EAAQwU,MACfk7D,MAAO1vE,EAAQ0vE,MACf7b,YAAa7zD,EAAQ6zD,eACrBx3D,KAKFuE,EAAKoQ,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAMLxQ,EAAKyzE,aAA6B/nE,IAAnBtM,EAAQs0E,QAAuBt0E,EAAQs0E,OAMtD1zE,EAAK2zE,qBACwBjoE,IAA3BtM,EAAQw0E,eAA+Bx0E,EAAQw0E,eAAiB,EAKlE5zE,EAAKkyB,cAAgCxmB,IAArBtM,EAAQ8yB,SAAyB9yB,EAAQ8yB,SAAW,YAGhElyB,EAAKkyB,UACPyhB,GAAO3zC,EAAKkyB,SAASi6C,YAAYnsE,EAAKkyB,SAAS7d,cAFhC,CAAC,IAAK,MASvBrU,EAAK6zE,UAAY,IAAIC,GAAApzE,QAAUtB,EAAQuL,WAAa,GAMpD3K,EAAK+zE,QAAU,CAAC,EAAG,GAMnB/zE,EAAKqtE,KAAOjuE,EAAQ2L,KAAO,GAM3B/K,EAAKg0E,YAAc,CACjB/T,WAAY7gE,EAAQ6gE,WACpBhN,YAAa7zD,EAAQ6zD,aAUvBjzD,EAAKi0E,WAAa70E,EAAQ60E,WAAa70E,EAAQ60E,WAAa,IAyOhE,OA/TyBC,GAAAV,EAAA3zE,GA4FvB2zE,EAAA73E,UAAAsQ,eAAA,WACE,OAAOxQ,KAAKo4E,UAAU5nE,kBAOxBunE,EAAA73E,UAAAqxE,YAAA,SAAY/zD,EAAYkjC,GACtB,IAAM03B,EAAYp4E,KAAK04E,0BAA0Bl7D,GAC7C46D,GACFA,EAAU7G,YAAY7wB,IAa1Bq3B,EAAA73E,UAAAy4E,kBAAA,SAAkBn7D,EAAY05B,EAAGg9B,EAAWxqE,GAC1C,IAAM0uE,EAAYp4E,KAAK04E,0BAA0Bl7D,GACjD,IAAK46D,EACH,OAAO,EAKT,IAFA,IACIrlD,EAAM6lD,EAAc5S,EADpB6S,GAAU,EAELlzE,EAAIuuE,EAAUzrE,KAAM9C,GAAKuuE,EAAUvrE,OAAQhD,EAClD,IAAK,IAAIC,EAAIsuE,EAAUxrE,KAAM9C,GAAKsuE,EAAUtrE,OAAQhD,EAClDgzE,EAAevG,GAAUn7B,EAAGvxC,EAAGC,GAC/BogE,GAAS,EACLoS,EAAU3G,YAAYmH,KAIxB5S,GAHAjzC,EACEqlD,EAAUt0E,IAAI80E,IAEFt9D,aAAe2W,MAE3B+zC,GAA4B,IAAnBt8D,EAASqpB,IAGjBizC,IACH6S,GAAU,GAIhB,OAAOA,GAOTd,EAAA73E,UAAA44E,uBAAA,SAAuBt7D,GACrB,OAAO,GAOTu6D,EAAA73E,UAAAoyB,OAAA,WACE,OAAOtyB,KAAK4xE,MAQdmG,EAAA73E,UAAA64E,OAAA,SAAOzpE,GACDtP,KAAK4xE,OAAStiE,IAChBtP,KAAK4xE,KAAOtiE,EACZtP,KAAKmV,YAQT4iE,EAAA73E,UAAA84E,UAAA,SAAUx7D,GACR,OAAOxd,KAAKg4E,SAMdD,EAAA73E,UAAAuyC,eAAA,WACE,OAAKzyC,KAAKy2B,SAGHz2B,KAAKy2B,SAASgc,iBAFZ,MAcXslC,EAAA73E,UAAA+4E,QAAA,SAAQ/hC,EAAGvxC,EAAGC,EAAG6zC,EAAYj8B,GAC3B,OAAOtb,KAQT61E,EAAA73E,UAAAg5E,YAAA,WACE,OAAOl5E,KAAKy2B,UAOdshD,EAAA73E,UAAAi5E,yBAAA,SAAyB37D,GACvB,OAAKxd,KAAKy2B,SAGDz2B,KAAKy2B,SAFL2gD,GAAyB55D,IAWpCu6D,EAAA73E,UAAAw4E,0BAAA,SAA0Bl7D,GAKxB,OAJA3Y,EACEs2B,GAAWn7B,KAAKkvC,gBAAiB1xB,GACjC,IAEKxd,KAAKo4E,WAUdL,EAAA73E,UAAAk5E,kBAAA,SAAkB3/B,GAChB,OAAOz5C,KAAKk4E,iBASdH,EAAA73E,UAAAm5E,iBAAA,SAAiBniC,EAAGuC,EAAYj8B,GAC9B,IvD1QkB5S,EAAMwyB,EAAOyU,EuD0QzBpb,EAAWz2B,KAAKm5E,yBAAyB37D,GACzC26D,EAAiBn4E,KAAKo5E,kBAAkB3/B,GACxC+7B,EAAWt9B,GAAOzhB,EAASi6C,YAAYx5B,GAAIl3C,KAAKs4E,SACtD,OAAsB,GAAlBH,EACK3C,GvD9QS5qE,EuDgRC4qE,EvDhRKp4C,EuDgRK+6C,OvD/QdloE,KADgB4hC,EuDgRc7xC,KAAKs4E,WvD9QlDzmC,EAAW,CAAC,EAAG,IAEjBA,EAAS,GAAMjnC,EAAK,GAAKwyB,EAAQ,GAAO,EACxCyU,EAAS,GAAMjnC,EAAK,GAAKwyB,EAAQ,GAAO,EACjCyU,IuDuRPkmC,EAAA73E,UAAAo5E,+BAAA,SAA+BjV,EAAWkV,GACxC,IAAM/7D,OACevN,IAAnBspE,EAA+BA,EAAiBv5E,KAAKkvC,gBACjDzY,EAAWz2B,KAAKm5E,yBAAyB37D,GAI/C,OAHIxd,KAAK4f,YAAcpC,EAAW6Y,aAChCguC,EDvSA,SAAgB5tC,EAAU4tC,EAAW7mD,GACzC,IAAM05B,EAAImtB,EAAU,GACd55D,EAASgsB,EAASkgD,mBAAmBtS,GACrCvmD,EAAmB45D,GAAqBl6D,GAC9C,GAAKrV,EAAmB2V,EAAkBrT,GAQxC,OAAO45D,EAPP,IAAM3mD,EAAavT,GAAS2T,GACtBH,EAAarX,KAAK8H,MACrB0P,EAAiB,GAAKrT,EAAO,IAAMiT,GAGtC,OADAjT,EAAO,IAAMiT,EAAaC,EACnB8Y,EAASsgD,yBAAyBtsE,EAAQysC,GC6RnCsiC,CAAM/iD,EAAU4tC,EAAW7mD,IPzPvC,SAA2B6mD,EAAW5tC,GAC1C,IAAMygB,EAAImtB,EAAU,GACd1+D,EAAI0+D,EAAU,GACdz+D,EAAIy+D,EAAU,GAEpB,GAAI5tC,EAAS7d,aAAes+B,GAAKA,EAAIzgB,EAAS5d,aAC5C,OAAO,EAET,IAAMq7D,EAAYz9C,EAASwgD,iBAAiB//B,GAC5C,OAAKg9B,GAGIA,EAAUpzC,WAAWn7B,EAAGC,GO+OxB6zE,CAAiBpV,EAAW5tC,GAAY4tC,EAAY,MAO7D0T,EAAA73E,UAAAqQ,MAAA,WACEvQ,KAAKo4E,UAAU7nE,SAGjBwnE,EAAA73E,UAAA2zE,QAAA,WACE7zE,KAAKuQ,QACLnM,EAAAlE,UAAM2zE,QAAOnvE,KAAA1E,OAQf+3E,EAAA73E,UAAAw5E,gBAAA,SAAgBC,EAAWn8D,GACzB,IAAM46D,EAAYp4E,KAAK04E,0BAA0Bl7D,GAC7Cm8D,EAAYvB,EAAUlH,gBACxBkH,EAAUlH,cAAgByI,IAY9B5B,EAAA73E,UAAA05E,QAAA,SAAQ1iC,EAAGvxC,EAAGC,EAAG4X,KACnBu6D,EA/TA,CAAyB8B,GAAA50E,SAsUzB60E,GAAA,SAAA11E,GAKE,SAAA01E,EAAYzoE,EAAM0hB,GAAlB,IAAAxuB,EACEH,EAAAM,KAAA1E,KAAMqR,IAAKrR,YAOXuE,EAAKwuB,KAAOA,IAEhB,OAfqC0lD,GAAAqB,EAAA11E,GAerC01E,EAfA,CAAqC3oE,IAiBrC4oE,GAAejC,GC/XT,SAAUkC,GAAmBC,EAAUxjD,GAC3C,IAAMyjD,EAAM,SACNC,EAAM,SACNC,EAAM,SACNC,EAAU,UAChB,OAAA,SAOYhW,EAAW5qB,EAAYj8B,GAC/B,OAAK6mD,EAGI4V,EACJ3/C,QAAQ4/C,EAAQ7V,EAAU,GAAGvoB,YAC7BxhB,QAAQ6/C,EAAQ9V,EAAU,GAAGvoB,YAC7BxhB,QAAQ8/C,EAAQ/V,EAAU,GAAGvoB,YAC7BxhB,QAAQ+/C,GAAY,WACnB,IAAMnjC,EAAImtB,EAAU,GACdiW,EAAQ7jD,EAASwgD,iBAAiB//B,GAGxC,OAFAryC,EAAOy1E,EAAO,KACJA,EAAMlG,YAAc/P,EAAU,GAAK,GACpCvoB,mBAXb,GAuBF,SAAUy+B,GAAoBC,EAAW/jD,GAG7C,IAFA,IAAMphB,EAAMmlE,EAAUx5E,OAChBy5E,EAAmB,IAAIh5E,MAAM4T,GAC1BpU,EAAI,EAAGA,EAAIoU,IAAOpU,EACzBw5E,EAAiBx5E,GAAK+4E,GAAmBQ,EAAUv5E,GAAIw1B,GAEzD,OAOI,SAAqCgkD,GACzC,OAAgC,IAA5BA,EAAiBz5E,OACZy5E,EAAiB,GAE1B,SAOYpW,EAAW5qB,EAAYj8B,GAC/B,GAAK6mD,EAEE,CACL,IAAMx+C,ERHR,SAAew+C,GACnB,OAAQA,EAAU,IAAMA,EAAU,IAAMA,EAAU,GQElCqW,CAAcrW,GAClBvwD,EAAQrG,GAAOoY,EAAG40D,EAAiBz5E,QACzC,OAAOy5E,EAAiB3mE,GAAOuwD,EAAW5qB,EAAYj8B,KAxBrDm9D,CAA2BF,ieC+KpCG,GAhMA,SAAAx2E,GAIE,SAAAy2E,EAAYl3E,GAAZ,IAAAY,EACEH,EAAAM,KAAA1E,KAAM,CACJujD,aAAc5/C,EAAQ4/C,aACtBr0C,UAAWvL,EAAQuL,UACnB+oE,OAAQt0E,EAAQs0E,OAChBz6D,WAAY7Z,EAAQ6Z,WACpBrF,MAAOxU,EAAQwU,MACfse,SAAU9yB,EAAQ8yB,SAClB0hD,eAAgBx0E,EAAQw0E,eACxB9E,MAAO1vE,EAAQ0vE,MACf7O,WAAY7gE,EAAQ6gE,WACpBhN,YAAa7zD,EAAQ6zD,YACrBloD,IAAK3L,EAAQ2L,IACb6jE,wBAAyBxvE,EAAQwvE,wBACjCqF,WAAY70E,EAAQ60E,cACpBx4E,YAMFuE,EAAKu2E,yBACHv2E,EAAKw2E,kBAAoBF,EAAQ36E,UAAU66E,gBAM7Cx2E,EAAKyiE,iBAAmBrjE,EAAQqjE,iBAE5BrjE,EAAQo3E,kBACVx2E,EAAKw2E,gBAAkBp3E,EAAQo3E,iBAOjCx2E,EAAKy2E,KAAO,KAERr3E,EAAQq3E,KACVz2E,EAAK02E,QAAQt3E,EAAQq3E,MACZr3E,EAAQu3E,KACjB32E,EAAK42E,OAAOx3E,EAAQu3E,KAOtB32E,EAAK62E,iBAAmB,KAwI5B,OA9LsBC,GAAAR,EAAAz2E,GA8DpBy2E,EAAA36E,UAAAo7E,oBAAA,WACE,OAAOt7E,KAAKgnE,kBAQd6T,EAAA36E,UAAAq7E,mBAAA,WACE,OAAO33E,OAAO43E,eAAex7E,MAAM+6E,kBAAoB/6E,KAAK+6E,gBACxD/6E,KAAK+6E,gBAAgB3mE,KAAKpU,MAC1BA,KAAK+6E,iBAUXF,EAAA36E,UAAAu7E,QAAA,WACE,OAAOz7E,KAAKg7E,MAQdH,EAAA36E,UAAAsyB,iBAAA,SAAiBrf,GACf,IAGI9B,EAHE0hB,EAAoD5f,EAAMtS,OAC1D66E,EAAMr5E,EAAO0wB,GACb4oD,EAAY5oD,EAAKzX,WAEnBqgE,GAAa1pD,IACfjyB,KAAKo7E,iBAAiBM,IAAO,EAC7BrqE,EAAOuhE,IACE8I,KAAO17E,KAAKo7E,0BACdp7E,KAAKo7E,iBAAiBM,GAC7BrqE,EACEsqE,GAAa1pD,GACT2gD,GACA+I,GAAa1pD,GACb2gD,QACA3iE,GAEIA,MAARoB,GACFrR,KAAKkT,cAAc,IAAI0oE,GAAAC,gBAAgBxqE,EAAM0hB,KASjD8nD,EAAA36E,UAAA47E,oBAAA,SAAoB9U,GAClBhnE,KAAKo4E,UAAU7nE,QACfvQ,KAAKgnE,iBAAmBA,EACxBhnE,KAAKmV,WASP0lE,EAAA36E,UAAA67E,mBAAA,SAAmBhB,EAAiBzrE,GAClCtP,KAAK+6E,gBAAkBA,EACvB/6E,KAAKo4E,UAAU1F,0BACI,IAARpjE,EACTtP,KAAK+4E,OAAOzpE,GAEZtP,KAAKmV,WAST0lE,EAAA36E,UAAAi7E,OAAA,SAAOD,GACL,IAAMF,EDvFJ,SAAoBE,GACxB,IAAMF,EAAO,GACTl4E,EAAQ,sBAAsB0M,KAAK0rE,GACvC,GAAIp4E,EAAO,CAET,IAAMk5E,EAAgBl5E,EAAM,GAAG+qD,WAAW,GACpCouB,EAAen5E,EAAM,GAAG+qD,WAAW,GACrCD,OAAQ,EACZ,IAAKA,EAAWouB,EAAepuB,GAAYquB,IAAgBruB,EACzDotB,EAAK7uE,KAAK+uE,EAAI5gD,QAAQx3B,EAAM,GAAIP,OAAO25E,aAAatuB,KAEtD,OAAOotB,EAGT,GADAl4E,EAAQ,kBAAkB0M,KAAK0rE,GACpB,CAGT,IADA,IAAMiB,EAAOzsE,SAAS5M,EAAM,GAAI,IACvB7B,EAAIyO,SAAS5M,EAAM,GAAI,IAAK7B,GAAKk7E,EAAMl7E,IAC9C+5E,EAAK7uE,KAAK+uE,EAAI5gD,QAAQx3B,EAAM,GAAI7B,EAAE66C,aAEpC,OAAOk/B,EAGT,OADAA,EAAK7uE,KAAK+uE,GACHF,ECgEQoB,CAAUlB,GACvBl7E,KAAKg7E,KAAOA,EACZh7E,KAAKi7E,QAAQD,IAQfH,EAAA36E,UAAA+6E,QAAA,SAAQD,GACNh7E,KAAKg7E,KAAOA,EACZ,IAAM1rE,EAAM0rE,EAAKl0E,KAAK,MAClB9G,KAAK86E,yBACP96E,KAAK+7E,mBAAmBxB,GAAoBS,EAAMh7E,KAAKy2B,UAAWnnB,GAElEtP,KAAK+4E,OAAOzpE,IAUhBurE,EAAA36E,UAAA66E,gBAAA,SAAgB1W,EAAW5qB,EAAYj8B,KAUvCq9D,EAAA36E,UAAA05E,QAAA,SAAQ1iC,EAAGvxC,EAAGC,GACZ,IAAMgzE,EAAevG,GAAUn7B,EAAGvxC,EAAGC,GACjC5F,KAAKo4E,UAAU3G,YAAYmH,IAC7B54E,KAAKo4E,UAAUt0E,IAAI80E,IAGzBiC,EA9LA,CAAsBe,GAAA32E,meC8BtBo3E,GAAA,SAAAj4E,GAIE,SAAAk4E,EAAY34E,GAAZ,IAAAY,EAAAvE,KACMw3D,OACyBvnD,IAA3BtM,EAAQ44E,gBAA+B54E,EAAQ44E,2BACrBtsE,IAAxBtM,EAAQ6zD,cACVA,EAAc7zD,EAAQ6zD,cAGxBjzD,EAAAH,EAAAM,KAAA1E,KAAM,CACJujD,aAAc5/C,EAAQ4/C,aACtBr0C,UAAWvL,EAAQuL,UACnB+oE,OAAQt0E,EAAQs0E,OAChBz6D,WAAY7Z,EAAQ6Z,WACpBrF,MAAOxU,EAAQwU,MACfse,SAAU9yB,EAAQ8yB,SAClBuwC,iBAAkBrjE,EAAQqjE,iBACtBrjE,EAAQqjE,iBACRwV,GACJrE,eAAgBx0E,EAAQw0E,eACxB4C,gBAAiBp3E,EAAQo3E,gBACzBG,IAAKv3E,EAAQu3E,IACbF,KAAMr3E,EAAQq3E,KACd3H,MAAO1vE,EAAQ0vE,MACf7O,WAAY7gE,EAAQ6gE,WACpBhN,YAAaA,EACbloD,IAAK3L,EAAQ2L,IACb6jE,wBAAyBxvE,EAAQwvE,wBACjCqF,WAAY70E,EAAQ60E,cACrBx4E,MAMI6Q,iBACqBZ,IAAxBtM,EAAQkN,YAA4BlN,EAAQkN,YAAc,KAM5DtM,EAAKk4E,eACmBxsE,IAAtBtM,EAAQ84E,UAA0B94E,EAAQ84E,UAAYC,GAAAz3E,QAMxDV,EAAKo4E,uBAAyB,GAM9Bp4E,EAAKq4E,sBAAwB,GAM7Br4E,EAAKs4E,4BAA8Bl5E,EAAQm5E,2BAM3Cv4E,EAAKw4E,0BAA2B,IAkUpC,OAvYwBC,GAAAV,EAAAl4E,GA2EtBk4E,EAAAp8E,UAAAsQ,eAAA,WAIE,GAAIxQ,KAAKo4E,UAAU5nE,iBACjB,OAAO,EAEP,IAAK,IAAMlB,KAAOtP,KAAK28E,uBACrB,GAAI38E,KAAK28E,uBAAuBrtE,GAAKkB,iBACnC,OAAO,EAIb,OAAO,GAOT8rE,EAAAp8E,UAAAqxE,YAAA,SAAY/zD,EAAYkjC,GAKtB,IAAMu8B,EAAgBj9E,KAAK04E,0BAA0Bl7D,GAKrD,IAAK,IAAMoN,KAHX5qB,KAAKo4E,UAAU7G,YACbvxE,KAAKo4E,WAAa6E,EAAgBv8B,EAAY,IAE/B1gD,KAAK28E,uBAAwB,CAC5C,IAAMvE,EAAYp4E,KAAK28E,uBAAuB/xD,GAC9CwtD,EAAU7G,YAAY6G,GAAa6E,EAAgBv8B,EAAY,MAQnE47B,EAAAp8E,UAAA44E,uBAAA,SAAuBt7D,GACrB,OAEExd,KAAKkvC,iBACL1xB,IACC2d,GAAWn7B,KAAKkvC,gBAAiB1xB,GAE3B,EAEAxd,KAAKk9E,aAOhBZ,EAAAp8E,UAAAg9E,UAAA,WACE,OAAO,GAOTZ,EAAAp8E,UAAAoyB,OAAA,WACE,IAAIhjB,EAAMlL,EAAAlE,UAAMoyB,OAAM5tB,KAAA1E,MAItB,OAHKA,KAAK4zE,mBACRtkE,GAAO,0BAEFA,GAOTgtE,EAAAp8E,UAAA84E,UAAA,SAAUx7D,GACR,QAEExd,KAAKkvC,iBACL1xB,IACC2d,GAAWn7B,KAAKkvC,gBAAiB1xB,KAI3BpZ,EAAAlE,UAAM84E,UAASt0E,KAAA1E,KAACwd,IAQ3B8+D,EAAAp8E,UAAAi5E,yBAAA,SAAyB37D,GAIvB,IAAM2/D,EAAWn9E,KAAKkvC,gBACtB,IAAIlvC,KAAKy2B,UAAc0mD,IAAYhiD,GAAWgiD,EAAU3/D,GAEjD,CACL,IAAM4/D,EAAU/6E,EAAOmb,GAKvB,OAJM4/D,KAAWp9E,KAAK48E,wBACpB58E,KAAK48E,sBAAsBQ,GACzBhG,GAAyB55D,IAEtBxd,KAAK48E,sBAAsBQ,GAPlC,OAAOp9E,KAAKy2B,UAehB6lD,EAAAp8E,UAAAw4E,0BAAA,SAA0Bl7D,GAIxB,IAAM2/D,EAAWn9E,KAAKkvC,gBACtB,IAAKiuC,GAAYhiD,GAAWgiD,EAAU3/D,GACpC,OAAOxd,KAAKo4E,UAEZ,IAAMgF,EAAU/6E,EAAOmb,GAMvB,OALM4/D,KAAWp9E,KAAK28E,yBACpB38E,KAAK28E,uBAAuBS,GAAW,IAAI/E,GAAApzE,QACzCjF,KAAKo4E,UAAUlH,gBAGZlxE,KAAK28E,uBAAuBS,IAcvCd,EAAAp8E,UAAAm9E,YAAA,SAAYnmC,EAAGvxC,EAAGC,EAAG6zC,EAAYj8B,EAAYlO,GAC3C,IAAM+0D,EAAY,CAACntB,EAAGvxC,EAAGC,GACnB03E,EAAet9E,KAAKs5E,+BACxBjV,EACA7mD,GAEI+/D,EAAUD,EACZt9E,KAAK+6E,gBAAgBuC,EAAc7jC,EAAYj8B,QAC/CvN,EACE8iB,EAAO,IAAI/yB,KAAKy8E,UACpBpY,OACYp0D,IAAZstE,EAAwBtrD,GAAiBA,QAC7BhiB,IAAZstE,EAAwBA,EAAU,GAClCv9E,KAAK6Q,YACL7Q,KAAKgnE,iBACLhnE,KAAKu4E,aAIP,OAFAxlD,EAAKzjB,IAAMA,EACXyjB,EAAK/uB,iBAAiBgQ,GAAkBhU,KAAKwyB,iBAAiBpe,KAAKpU,OAC5D+yB,GAWTupD,EAAAp8E,UAAA+4E,QAAA,SAAQuE,EAAGpyE,EAAGI,EAAGiyE,EAAYjgE,GAC3B,IAAM+d,EAAmBv7B,KAAKkvC,gBAC9B,GAEG3T,GACA/d,IACD2d,GAAWI,EAAkB/d,GASxB,CACL,IAAMvO,EAAQjP,KAAK04E,0BAA0Bl7D,GACvC6mD,EAAY,CAACmZ,EAAGpyE,EAAGI,GACrBunB,OAAI,EACF6lD,EAAetG,GAAOjO,GACxBp1D,EAAMwiE,YAAYmH,KACpB7lD,EAAO9jB,EAAMnL,IAAI80E,IAEnB,IAAMtpE,EAAMtP,KAAKsyB,SACjB,GAAIS,GAAQA,EAAKzjB,KAAOA,EACtB,OAAOyjB,EAEP,IAAM+7C,EAAiB9uE,KAAKm5E,yBAAyB59C,GAC/CwzC,EAAiB/uE,KAAKm5E,yBAAyB37D,GAC/CwxD,EAAmBhvE,KAAKs5E,+BAC5BjV,EACA7mD,GAEIkgE,EAAU,IAAIC,GAAA14E,QAClBs2B,EACAuzC,EACAtxD,EACAuxD,EACA1K,EACA2K,EACAhvE,KAAKo5E,kBAAkBqE,GACvBz9E,KAAKk9E,YACL,SAAUhmC,EAAGvxC,EAAGC,EAAG6zC,GACjB,OAAOz5C,KAAK49E,gBAAgB1mC,EAAGvxC,EAAGC,EAAG6zC,EAAYle,IACjDnnB,KAAKpU,MACPA,KAAK68E,4BACL78E,KAAK+8E,yBACL/8E,KAAK4zE,kBAWP,OATA8J,EAAQpuE,IAAMA,EAEVyjB,GACF2qD,EAAQpZ,YAAcvxC,EACtB2qD,EAAQ7Y,sBACR51D,EAAMqrB,QAAQs+C,EAAc8E,IAE5BzuE,EAAM8B,IAAI6nE,EAAc8E,GAEnBA,EAlDT,OAAO19E,KAAK49E,gBACVJ,EACApyE,EACAI,EACAiyE,EACAliD,GAAoB/d,IA2D1B8+D,EAAAp8E,UAAA09E,gBAAA,SAAgB1mC,EAAGvxC,EAAGC,EAAG6zC,EAAYj8B,GACnC,IAAIuV,EAAO,KACL6lD,EAAevG,GAAUn7B,EAAGvxC,EAAGC,GAC/B0J,EAAMtP,KAAKsyB,SACjB,GAAKtyB,KAAKo4E,UAAU3G,YAAYmH,IAK9B,IADA7lD,EAAO/yB,KAAKo4E,UAAUt0E,IAAI80E,IACjBtpE,KAAOA,EAAK,CAInB,IAAMg1D,EAAcvxC,EACpBA,EAAO/yB,KAAKq9E,YAAYnmC,EAAGvxC,EAAGC,EAAG6zC,EAAYj8B,EAAYlO,GAGrDg1D,EAAYhpD,YAAc2W,GAE5Bc,EAAKuxC,YAAcA,EAAYA,YAE/BvxC,EAAKuxC,YAAcA,EAErBvxC,EAAK8xC,sBACL7kE,KAAKo4E,UAAU99C,QAAQs+C,EAAc7lD,SAnBvCA,EAAO/yB,KAAKq9E,YAAYnmC,EAAGvxC,EAAGC,EAAG6zC,EAAYj8B,EAAYlO,GACzDtP,KAAKo4E,UAAUrnE,IAAI6nE,EAAc7lD,GAqBnC,OAAOA,GAQTupD,EAAAp8E,UAAA29E,2BAAA,SAA2BhjE,GACzB,GAEE7a,KAAK+8E,0BAA4BliE,EAFnC,CAOA,IAAK,IAAM+P,KADX5qB,KAAK+8E,yBAA2BliE,EACf7a,KAAK28E,uBACpB38E,KAAK28E,uBAAuB/xD,GAAIra,QAElCvQ,KAAKmV,YAePmnE,EAAAp8E,UAAA49E,yBAAA,SAAyBtgE,EAAYugE,GAEjC,IAAMC,EAAO5jD,GAAc5c,GAC3B,GAAIwgE,EAAM,CACR,IAAMZ,EAAU/6E,EAAO27E,GACjBZ,KAAWp9E,KAAK48E,wBACpB58E,KAAK48E,sBAAsBQ,GAAWW,KAKhDzB,EAvYA,CAAwB2B,GAAAh5E,SA6YxB,SAASu3E,GAAwB0B,EAAWttE,GACQstE,EAAU5Y,WAAY10D,IACtEA,MAGJutE,GAAe9B,6dC/Vf+B,GAjDA,SAAAh6E,GAIE,SAAAi6E,EAAYx1D,GACV,IAAMllB,EAAUklB,GAAe,GAE3B2uC,OACyBvnD,IAA3BtM,EAAQ44E,gBAA+B54E,EAAQ44E,oBACrBtsE,IAAxBtM,EAAQ6zD,cACVA,EAAc7zD,EAAQ6zD,aAGxB,IAAMh6C,OACmBvN,IAAvBtM,EAAQ6Z,WAA2B7Z,EAAQ6Z,WAAa,YAEpDiZ,OACiBxmB,IAArBtM,EAAQ8yB,SACJ9yB,EAAQ8yB,SLKZ,SAAoB5N,GACxB,IAAMy1D,EAAaz1D,GAAe,GAE5BthB,EAAS+2E,EAAW/2E,QAAU6yB,GAAc,aAAa3hB,YAEzD8lE,EAAc,CAClBh3E,OAAQA,EACRkQ,QAAS6mE,EAAW7mE,QACpB+9D,SAAU8I,EAAW9I,SACrBpoC,YAAaoqC,GACXjwE,EACA+2E,EAAW5mE,QACX4mE,EAAW9I,SACX8I,EAAW/mE,gBAGf,OAAO,IAAI4/D,GAASoH,GKpBZC,CAAU,CACRj3E,OAAQmwE,GAAqBl6D,GAC7BjG,cAAe5T,EAAQ4T,cACvBG,QAAS/T,EAAQ+T,QACjBD,QAAS9T,EAAQ8T,QACjB+9D,SAAU7xE,EAAQ6xE,WAG1B,OAAApxE,EAAAM,KAAA1E,KAAM,CACJujD,aAAc5/C,EAAQ4/C,aACtBr0C,UAAWvL,EAAQuL,UACnB2B,YAAalN,EAAQkN,YACrB2mD,YAAaA,EACbygB,OAAQt0E,EAAQs0E,OAChBz6D,WAAYA,EACZs/D,2BAA4Bn5E,EAAQm5E,2BACpCrmD,SAAUA,EACVuwC,iBAAkBrjE,EAAQqjE,iBAC1BmR,eAAgBx0E,EAAQw0E,eACxB4C,gBAAiBp3E,EAAQo3E,gBACzBG,IAAKv3E,EAAQu3E,IACbF,KAAMr3E,EAAQq3E,KACd3H,WAAyBpjE,IAAlBtM,EAAQ0vE,OAAsB1vE,EAAQ0vE,MAC7C7O,WAAY7gE,EAAQ6gE,WACpB2O,wBAAyBxvE,EAAQwvE,wBACjCqF,WAAY70E,EAAQ60E,cACrBx4E,KAEL,OA/CkBy+E,GAAAJ,EAAAj6E,GA+ClBi6E,EA/CA,CAAkBK,GAAAz5E,ohBCzDL05E,GACX,+GAuCF,SAAAv6E,GAIE,SAAAw6E,EAAY/1D,GACV,IAQI06B,EARE5/C,EAAUklB,GAAe,GAE3B2uC,OACyBvnD,IAA3BtM,EAAQ44E,gBAA+B54E,EAAQ44E,oBACrBtsE,IAAxBtM,EAAQ6zD,cACVA,EAAc7zD,EAAQ6zD,aAKtBjU,OAD2BtzC,IAAzBtM,EAAQ4/C,aACK5/C,EAAQ4/C,aAER,CAACo7B,IAGlB,IAAM9tE,OACoBZ,IAAxBtM,EAAQkN,YAA4BlN,EAAQkN,YAAc,YAEtDqqE,OACYjrE,IAAhBtM,EAAQu3E,IACJv3E,EAAQu3E,IACR,uDAEN,OAAA92E,EAAAM,KAAA1E,KAAM,CACJujD,aAAcA,EACd4vB,yBAAyB,EACzBjkE,UAAWvL,EAAQuL,UACnB2B,YAAaA,EACb2mD,YAAaA,EACb9/C,aAA6BzH,IAApBtM,EAAQ+T,QAAwB/T,EAAQ+T,QAAU,GAC3DugE,YAA2BhoE,IAAnBtM,EAAQs0E,QAAuBt0E,EAAQs0E,OAC/C6E,2BAA4Bn5E,EAAQm5E,2BACpC9V,iBAAkBrjE,EAAQqjE,iBAC1BxC,WAAY7gE,EAAQ6gE,WACpB0W,IAAKA,EACL7H,MAAO1vE,EAAQ0vE,MACfmF,WAAY70E,EAAQ60E,cACrBx4E,KA1Ca6+E,GAAAD,EAAAx6E,GAAlB,CAAkB06E,GAAA75E,ieC1CZ85E,GAAe,CACnB,4KAGAC,GAAAC,aAMIC,GAAc,CAClBC,QAAW,CACT39E,UAAW,MACXy2E,QAAQ,GAEV,qBAAsB,CACpBz2E,UAAW,MACXy2E,QAAQ,GAEV,iBAAkB,CAChBz2E,UAAW,MACXy2E,QAAQ,GAEV,gBAAiB,CACfz2E,UAAW,MACXy2E,QAAQ,GAEV,mBAAoB,CAClBz2E,UAAW,MACXy2E,QAAQ,GAEVmH,MAAS,CACP59E,UAAW,MACXy2E,QAAQ,GAEV,eAAgB,CACdz2E,UAAW,MACXy2E,QAAQ,GAEV,eAAgB,CACdz2E,UAAW,MACXy2E,QAAQ,GAEV,cAAe,CACbz2E,UAAW,MACXy2E,QAAQ,GAEV,aAAc,CACZz2E,UAAW,MACXy2E,QAAQ,GAEVoH,WAAc,CACZ79E,UAAW,MACXy2E,QAAQ,IAONqH,GAAiB,CACrBH,QAAW,CACT1nE,QAAS,EACTC,QAAS,IAEX0nE,MAAS,CACP3nE,QAAS,EACTC,QAAS,IAEX2nE,WAAc,CACZ5nE,QAAS,EACTC,QAAS,KAiFb6nE,GA7CA,SAAAn7E,GAIE,SAAAo7E,EAAY77E,GACV,IAAI6zD,OACyBvnD,IAA3BtM,EAAQ44E,gBAA+B54E,EAAQ44E,oBACrBtsE,IAAxBtM,EAAQ6zD,cACVA,EAAc7zD,EAAQ6zD,aAGxB,IAAMv2D,EAAI0C,EAAQyU,MAAMzX,QAAQ,KAC1B8+E,GAAgB,GAALx+E,EAAU0C,EAAQyU,MAAQzU,EAAQyU,MAAMrQ,MAAM,EAAG9G,GAC5Dy+E,EAAiBJ,GAAeG,GAEhCE,EAAcT,GAAYv7E,EAAQyU,OAElC8iE,OACYjrE,IAAhBtM,EAAQu3E,IACJv3E,EAAQu3E,IACR,+CACAv3E,EAAQyU,MACR,gBACAunE,EAAYn+E,UAElB,OAAA4C,EAAAM,KAAA1E,KAAM,CACJujD,aAAcw7B,GACd7vE,UAAWvL,EAAQuL,UACnB2B,YAAa,YACb2mD,YAAaA,EACb9/C,QACqBzH,MAAnBtM,EAAQ+T,QAAuB/T,EAAQ+T,QAAUgoE,EAAehoE,QAClED,QACqBxH,MAAnBtM,EAAQ8T,QAAuB9T,EAAQ8T,QAAUioE,EAAejoE,QAClEwgE,OAAQ0H,EAAY1H,OACpB6E,2BAA4Bn5E,EAAQm5E,2BACpC9V,iBAAkBrjE,EAAQqjE,iBAC1BxC,WAAY7gE,EAAQ6gE,WACpB0W,IAAKA,EACL7H,MAAO1vE,EAAQ0vE,MACfmF,WAAY70E,EAAQ60E,cACrBx4E,KAEL,OA3CqB4/E,GAAAJ,EAAAp7E,GA2CrBo7E,EA3CA,CAAqBV,GAAA75E,yGCtH+C46E,GAA+F,WAAwB,SAASC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,IAAI,SAASjzE,EAAEnM,EAAE2M,EAAEnI,EAAEjF,EAAEulB,GAAG,KAAKvlB,EAAEiF,GAAG,CAAC,GAAGjF,EAAEiF,EAAE,IAAI,CAAC,IAAI0vD,EAAE30D,EAAEiF,EAAE,EAAE6J,EAAE1B,EAAEnI,EAAE,EAAE+G,EAAEhG,KAAKyG,IAAIkoD,GAAGzvD,EAAE,GAAGc,KAAKsG,IAAI,EAAEN,EAAE,GAAG8zE,EAAE,GAAG95E,KAAKutB,KAAKvnB,EAAE9G,GAAGyvD,EAAEzvD,GAAGyvD,IAAI7lD,EAAE6lD,EAAE,EAAE,GAAE,EAAG,GAA+E/nD,EAAEnM,EAAE2M,EAA9EpH,KAAKkD,IAAIjE,EAAEe,KAAK4H,MAAMR,EAAE0B,EAAE5J,EAAEyvD,EAAEmrB,IAAM95E,KAAKiD,IAAIjJ,EAAEgG,KAAK4H,MAAMR,GAAGunD,EAAE7lD,GAAG5J,EAAEyvD,EAAEmrB,IAAcv6D,GAAG,IAAIw6D,EAAEt/E,EAAE2M,GAAGpI,EAAEC,EAAEI,EAAErF,EAAE,IAAIif,EAAExe,EAAEwE,EAAEmI,GAAGmY,EAAE9kB,EAAET,GAAG+/E,GAAG,GAAG9gE,EAAExe,EAAEwE,EAAEjF,GAAGgF,EAAEK,GAAG,CAAC,IAAI4Z,EAAExe,EAAEuE,EAAEK,GAAGL,IAAIK,IAAIkgB,EAAE9kB,EAAEuE,GAAG+6E,GAAG,GAAG/6E,IAAI,KAAKugB,EAAE9kB,EAAE4E,GAAG06E,GAAG,GAAG16E,IAAI,IAAIkgB,EAAE9kB,EAAEwE,GAAG86E,GAAG9gE,EAAExe,EAAEwE,EAAEI,GAAG4Z,EAAExe,IAAI4E,EAAErF,GAAGqF,GAAG+H,IAAInI,EAAEI,EAAE,GAAG+H,GAAG/H,IAAIrF,EAAEqF,EAAE,IAA3Z,CAAgao6E,EAAEC,EAAEC,GAAG,EAAEC,GAAGH,EAAE/+E,OAAO,EAAEm/E,GAAGG,GAAG,SAAS/gE,EAAErS,EAAEjM,EAAEF,GAAG,IAAI2M,EAAER,EAAEjM,GAAGiM,EAAEjM,GAAGiM,EAAEnM,GAAGmM,EAAEnM,GAAG2M,EAAE,SAAS4yE,EAAEpzE,EAAEjM,GAAG,OAAOiM,EAAEjM,GAAE,EAAGiM,EAAEjM,EAAE,EAAE,EAAE,IAAIs/E,EAAE,SAASrzE,QAAG,IAASA,IAAIA,EAAE,GAAGlN,KAAKwgF,YAAYl6E,KAAKkD,IAAI,EAAE0D,GAAGlN,KAAKygF,YAAYn6E,KAAKkD,IAAI,EAAElD,KAAK8H,KAAK,GAAGpO,KAAKwgF,cAAcxgF,KAAKuQ,SAAS,SAASmwE,EAAExzE,EAAEjM,EAAEF,GAAG,IAAIA,EAAE,OAAOE,EAAEN,QAAQuM,GAAG,IAAI,IAAIQ,EAAE,EAAEA,EAAEzM,EAAED,OAAO0M,IAAI,GAAG3M,EAAEmM,EAAEjM,EAAEyM,IAAI,OAAOA,EAAE,OAAM,EAAG,SAASizE,EAAEzzE,EAAEjM,GAAG2/E,EAAE1zE,EAAE,EAAEA,EAAE2a,SAAS7mB,OAAOC,EAAEiM,GAAG,SAAS0zE,EAAE1zE,EAAEjM,EAAEF,EAAE2M,EAAEnI,GAAGA,IAAIA,EAAEs7E,EAAE,OAAOt7E,EAAEkD,KAAK,EAAA,EAAIlD,EAAEmD,KAAK,EAAA,EAAInD,EAAEoD,MAAK,EAAA,EAAKpD,EAAEqD,MAAK,EAAA,EAAK,IAAI,IAAItI,EAAEW,EAAEX,EAAES,EAAET,IAAI,CAAC,IAAIulB,EAAE3Y,EAAE2a,SAASvnB,GAAGwgF,EAAEv7E,EAAE2H,EAAE6zE,KAAKrzE,EAAEmY,GAAGA,GAAG,OAAOtgB,EAAE,SAASu7E,EAAE5zE,EAAEjM,GAAG,OAAOiM,EAAEzE,KAAKnC,KAAKiD,IAAI2D,EAAEzE,KAAKxH,EAAEwH,MAAMyE,EAAExE,KAAKpC,KAAKiD,IAAI2D,EAAExE,KAAKzH,EAAEyH,MAAMwE,EAAEvE,KAAKrC,KAAKkD,IAAI0D,EAAEvE,KAAK1H,EAAE0H,MAAMuE,EAAEtE,KAAKtC,KAAKkD,IAAI0D,EAAEtE,KAAK3H,EAAE2H,MAAMsE,EAAE,SAAS8zE,EAAE9zE,EAAEjM,GAAG,OAAOiM,EAAEzE,KAAKxH,EAAEwH,KAAK,SAASw4E,EAAE/zE,EAAEjM,GAAG,OAAOiM,EAAExE,KAAKzH,EAAEyH,KAAK,SAASw4E,EAAEh0E,GAAG,OAAOA,EAAEvE,KAAKuE,EAAEzE,OAAOyE,EAAEtE,KAAKsE,EAAExE,MAAM,SAAS+iE,EAAEv+D,GAAG,OAAOA,EAAEvE,KAAKuE,EAAEzE,MAAMyE,EAAEtE,KAAKsE,EAAExE,MAAM,SAASy4E,EAAEj0E,EAAEjM,GAAG,OAAOiM,EAAEzE,MAAMxH,EAAEwH,MAAMyE,EAAExE,MAAMzH,EAAEyH,MAAMzH,EAAE0H,MAAMuE,EAAEvE,MAAM1H,EAAE2H,MAAMsE,EAAEtE,KAAK,SAASiwB,EAAE3rB,EAAEjM,GAAG,OAAOA,EAAEwH,MAAMyE,EAAEvE,MAAM1H,EAAEyH,MAAMwE,EAAEtE,MAAM3H,EAAE0H,MAAMuE,EAAEzE,MAAMxH,EAAE2H,MAAMsE,EAAExE,KAAK,SAASm4E,EAAE3zE,GAAG,MAAM,CAAC2a,SAAS3a,EAAEhB,OAAO,EAAE60E,MAAK,EAAGt4E,KAAK,EAAA,EAAIC,KAAK,EAAA,EAAIC,MAAK,EAAA,EAAKC,MAAK,EAAA,GAAM,SAASw4E,EAAEngF,EAAEF,EAAE2M,EAAEnI,EAAEjF,GAAG,IAAI,IAAIulB,EAAE,CAAC9kB,EAAE2M,GAAGmY,EAAE7kB,QAAQ,MAAM0M,EAAEmY,EAAEuD,QAAQroB,EAAE8kB,EAAEuD,QAAQ7jB,GAAG,CAAC,IAAI0vD,EAAEl0D,EAAEuF,KAAK8H,MAAMV,EAAE3M,GAAGwE,EAAE,GAAGA,EAAEu6E,EAAE7+E,EAAEg0D,EAAEl0D,EAAE2M,EAAEpN,GAAGulB,EAAE1Z,KAAKpL,EAAEk0D,EAAEA,EAAEvnD,IAAI,OAAO6yE,EAAErgF,UAAUmhF,IAAI,WAAW,OAAOrhF,KAAKshF,KAAKthF,KAAKuB,KAAK,KAAKg/E,EAAErgF,UAAUqhF,OAAO,SAASr0E,GAAG,IAAIjM,EAAEjB,KAAKuB,KAAKR,EAAE,GAAG,IAAI83B,EAAE3rB,EAAEjM,GAAG,OAAOF,EAAE,IAAI,IAAI2M,EAAE1N,KAAKwhF,OAAOj8E,EAAE,GAAGtE,GAAG,CAAC,IAAI,IAAIX,EAAE,EAAEA,EAAEW,EAAE4mB,SAAS7mB,OAAOV,IAAI,CAAC,IAAIulB,EAAE5kB,EAAE4mB,SAASvnB,GAAG20D,EAAEh0D,EAAE8/E,KAAKrzE,EAAEmY,GAAGA,EAAEgT,EAAE3rB,EAAE+nD,KAAKh0D,EAAE8/E,KAAKhgF,EAAEoL,KAAK0Z,GAAGs7D,EAAEj0E,EAAE+nD,GAAGj1D,KAAKshF,KAAKz7D,EAAE9kB,GAAGwE,EAAE4G,KAAK0Z,IAAI5kB,EAAEsE,EAAE6jB,MAAM,OAAOroB,GAAGw/E,EAAErgF,UAAUuhF,SAAS,SAASv0E,GAAG,IAAIjM,EAAEjB,KAAKuB,KAAK,IAAIs3B,EAAE3rB,EAAEjM,GAAG,OAAM,EAAG,IAAI,IAAIF,EAAE,GAAGE,GAAG,CAAC,IAAI,IAAIyM,EAAE,EAAEA,EAAEzM,EAAE4mB,SAAS7mB,OAAO0M,IAAI,CAAC,IAAInI,EAAEtE,EAAE4mB,SAASna,GAAGpN,EAAEW,EAAE8/E,KAAK/gF,KAAKwhF,OAAOj8E,GAAGA,EAAE,GAAGszB,EAAE3rB,EAAE5M,GAAG,CAAC,GAAGW,EAAE8/E,MAAMI,EAAEj0E,EAAE5M,GAAG,OAAM,EAAGS,EAAEoL,KAAK5G,IAAItE,EAAEF,EAAEqoB,MAAM,OAAM,GAAIm3D,EAAErgF,UAAUmzB,KAAK,SAASnmB,GAAG,IAAIA,IAAIA,EAAElM,OAAO,OAAOhB,KAAK,GAAGkN,EAAElM,OAAOhB,KAAKygF,YAAY,CAAC,IAAI,IAAIx/E,EAAE,EAAEA,EAAEiM,EAAElM,OAAOC,IAAIjB,KAAK0hF,OAAOx0E,EAAEjM,IAAI,OAAOjB,KAAK,IAAIe,EAAEf,KAAK2hF,OAAOz0E,EAAEnF,QAAQ,EAAEmF,EAAElM,OAAO,EAAE,GAAG,GAAGhB,KAAKuB,KAAKsmB,SAAS7mB,OAAO,GAAGhB,KAAKuB,KAAK2K,SAASnL,EAAEmL,OAAOlM,KAAK4hF,WAAW5hF,KAAKuB,KAAKR,OAAO,CAAC,GAAGf,KAAKuB,KAAK2K,OAAOnL,EAAEmL,OAAO,CAAC,IAAIwB,EAAE1N,KAAKuB,KAAKvB,KAAKuB,KAAKR,EAAEA,EAAE2M,EAAE1N,KAAK6hF,QAAQ9gF,EAAEf,KAAKuB,KAAK2K,OAAOnL,EAAEmL,OAAO,GAAE,QAASlM,KAAKuB,KAAKR,EAAE,OAAOf,MAAMugF,EAAErgF,UAAUwhF,OAAO,SAASx0E,GAAG,OAAOA,GAAGlN,KAAK6hF,QAAQ30E,EAAElN,KAAKuB,KAAK2K,OAAO,GAAGlM,MAAMugF,EAAErgF,UAAUqQ,MAAM,WAAW,OAAOvQ,KAAKuB,KAAKs/E,EAAE,IAAI7gF,MAAMugF,EAAErgF,UAAUypB,OAAO,SAASzc,EAAEjM,GAAG,IAAIiM,EAAE,OAAOlN,KAAK,IAAI,IAAIe,EAAE2M,EAAEpN,EAAEulB,EAAE7lB,KAAKuB,KAAK0zD,EAAEj1D,KAAKwhF,OAAOt0E,GAAGkC,EAAE,GAAG9C,EAAE,GAAGuZ,GAAGzW,EAAEpO,QAAQ,CAAC,GAAG6kB,IAAIA,EAAEzW,EAAEga,MAAM1b,EAAE0B,EAAEA,EAAEpO,OAAO,GAAGD,EAAEuL,EAAE8c,MAAM9oB,GAAE,GAAIulB,EAAEk7D,KAAK,CAAC,IAAIv7E,EAAEk7E,EAAExzE,EAAE2Y,EAAEgC,SAAS5mB,GAAG,IAAG,IAAKuE,EAAE,OAAOqgB,EAAEgC,SAAS9T,OAAOvO,EAAE,GAAG4J,EAAEjD,KAAK0Z,GAAG7lB,KAAK8hF,UAAU1yE,GAAGpP,KAAKM,GAAGulB,EAAEk7D,OAAOI,EAAEt7D,EAAEovC,GAAGvnD,GAAG3M,IAAI8kB,EAAEnY,EAAEma,SAAS9mB,GAAGT,GAAE,GAAIulB,EAAE,MAAMzW,EAAEjD,KAAK0Z,GAAGvZ,EAAEH,KAAKpL,GAAGA,EAAE,EAAE2M,EAAEmY,EAAEA,EAAEA,EAAEgC,SAAS,IAAI,OAAO7nB,MAAMugF,EAAErgF,UAAUshF,OAAO,SAASt0E,GAAG,OAAOA,GAAGqzE,EAAErgF,UAAU6hF,YAAY,SAAS70E,EAAEjM,GAAG,OAAOiM,EAAEzE,KAAKxH,EAAEwH,MAAM83E,EAAErgF,UAAU8hF,YAAY,SAAS90E,EAAEjM,GAAG,OAAOiM,EAAExE,KAAKzH,EAAEyH,MAAM63E,EAAErgF,UAAU+hF,OAAO,WAAW,OAAOjiF,KAAKuB,MAAMg/E,EAAErgF,UAAUgiF,SAAS,SAASh1E,GAAG,OAAOlN,KAAKuB,KAAK2L,EAAElN,MAAMugF,EAAErgF,UAAUohF,KAAK,SAASp0E,EAAEjM,GAAG,IAAI,IAAIF,EAAE,GAAGmM,GAAGA,EAAE6zE,KAAK9/E,EAAEkL,KAAKI,MAAMtL,EAAEiM,EAAE2a,UAAU9mB,EAAEoL,KAAKI,MAAMxL,EAAEmM,EAAE2a,UAAU3a,EAAEnM,EAAEqoB,MAAM,OAAOnoB,GAAGs/E,EAAErgF,UAAUyhF,OAAO,SAASz0E,EAAEjM,EAAEF,EAAE2M,GAAG,IAAInI,EAAEsgB,EAAE9kB,EAAEE,EAAE,EAAEg0D,EAAEj1D,KAAKwgF,YAAY,GAAG36D,GAAGovC,EAAE,OAAO0rB,EAAEp7E,EAAEs7E,EAAE3zE,EAAEnF,MAAM9G,EAAEF,EAAE,IAAIf,KAAKwhF,QAAQj8E,EAAEmI,IAAIA,EAAEpH,KAAK8H,KAAK9H,KAAKyG,IAAI8Y,GAAGvf,KAAKyG,IAAIkoD,IAAIA,EAAE3uD,KAAK8H,KAAKyX,EAAEvf,KAAKyH,IAAIknD,EAAEvnD,EAAE,MAAMnI,EAAEs7E,EAAE,KAAKE,MAAK,EAAGx7E,EAAE2G,OAAOwB,EAAE,IAAI0B,EAAE9I,KAAK8H,KAAKyX,EAAEovC,GAAG3oD,EAAE8C,EAAE9I,KAAK8H,KAAK9H,KAAKutB,KAAKohC,IAAImsB,EAAEl0E,EAAEjM,EAAEF,EAAEuL,EAAEtM,KAAK+hF,aAAa,IAAI,IAAIv8E,EAAEvE,EAAEuE,GAAGzE,EAAEyE,GAAG8G,EAAE,CAAC,IAAI8zE,EAAE95E,KAAKiD,IAAI/D,EAAE8G,EAAE,EAAEvL,GAAGqgF,EAAEl0E,EAAE1H,EAAE46E,EAAEhxE,EAAEpP,KAAKgiF,aAAa,IAAI,IAAIhiE,EAAExa,EAAEwa,GAAGogE,EAAEpgE,GAAG5Q,EAAE,CAAC,IAAI/J,EAAEiB,KAAKiD,IAAIyW,EAAE5Q,EAAE,EAAEgxE,GAAG76E,EAAEsiB,SAAS1b,KAAKnM,KAAK2hF,OAAOz0E,EAAE8S,EAAE3a,EAAEqI,EAAE,KAAK,OAAOizE,EAAEp7E,EAAEvF,KAAKwhF,QAAQj8E,GAAGg7E,EAAErgF,UAAUiiF,eAAe,SAASj1E,EAAEjM,EAAEF,EAAE2M,GAAG,KAAKA,EAAEvB,KAAKlL,IAAIA,EAAE8/E,MAAMrzE,EAAE1M,OAAO,IAAID,GAAG,CAAC,IAAI,IAAIwE,EAAE,EAAA,EAAIjF,EAAE,EAAA,EAAIulB,OAAE,EAAOovC,EAAE,EAAEA,EAAEh0D,EAAE4mB,SAAS7mB,OAAOi0D,IAAI,CAAC,IAAI7lD,EAAEnO,EAAE4mB,SAASotC,GAAG3oD,EAAE40E,EAAE9xE,GAAGgxE,GAAGpgE,EAAE9S,EAAE7H,EAAE+J,GAAG9I,KAAKkD,IAAInE,EAAEsD,KAAKqX,EAAErX,MAAMrC,KAAKiD,IAAIlE,EAAEoD,KAAKuX,EAAEvX,QAAQnC,KAAKkD,IAAInE,EAAEuD,KAAKoX,EAAEpX,MAAMtC,KAAKiD,IAAIlE,EAAEqD,KAAKsX,EAAEtX,OAAO4D,GAAG8zE,EAAE9/E,GAAGA,EAAE8/E,EAAE76E,EAAE+G,EAAE/G,EAAE+G,EAAE/G,EAAEsgB,EAAEzW,GAAGgxE,IAAI9/E,GAAGgM,EAAE/G,IAAIA,EAAE+G,EAAEuZ,EAAEzW,GAAGnO,EAAE4kB,GAAG5kB,EAAE4mB,SAAS,GAAG,IAAI7H,EAAE3a,EAAE,OAAOpE,GAAGs/E,EAAErgF,UAAU2hF,QAAQ,SAAS30E,EAAEjM,EAAEF,GAAG,IAAI2M,EAAE3M,EAAEmM,EAAElN,KAAKwhF,OAAOt0E,GAAG3H,EAAE,GAAGjF,EAAEN,KAAKmiF,eAAez0E,EAAE1N,KAAKuB,KAAKN,EAAEsE,GAAG,IAAIjF,EAAEunB,SAAS1b,KAAKe,GAAG4zE,EAAExgF,EAAEoN,GAAGzM,GAAG,GAAGsE,EAAEtE,GAAG4mB,SAAS7mB,OAAOhB,KAAKwgF,aAAaxgF,KAAKoiF,OAAO78E,EAAEtE,GAAGA,IAAIjB,KAAKqiF,oBAAoB30E,EAAEnI,EAAEtE,IAAIs/E,EAAErgF,UAAUkiF,OAAO,SAASl1E,EAAEjM,GAAG,IAAIF,EAAEmM,EAAEjM,GAAGyM,EAAE3M,EAAE8mB,SAAS7mB,OAAOuE,EAAEvF,KAAKygF,YAAYzgF,KAAKsiF,iBAAiBvhF,EAAEwE,EAAEmI,GAAG,IAAImY,EAAE7lB,KAAKuiF,kBAAkBxhF,EAAEwE,EAAEmI,GAAGunD,EAAE4rB,EAAE9/E,EAAE8mB,SAAS9T,OAAO8R,EAAE9kB,EAAE8mB,SAAS7mB,OAAO6kB,IAAIovC,EAAE/oD,OAAOnL,EAAEmL,OAAO+oD,EAAE8rB,KAAKhgF,EAAEggF,KAAKJ,EAAE5/E,EAAEf,KAAKwhF,QAAQb,EAAE1rB,EAAEj1D,KAAKwhF,QAAQvgF,EAAEiM,EAAEjM,EAAE,GAAG4mB,SAAS1b,KAAK8oD,GAAGj1D,KAAK4hF,WAAW7gF,EAAEk0D,IAAIsrB,EAAErgF,UAAU0hF,WAAW,SAAS10E,EAAEjM,GAAGjB,KAAKuB,KAAKs/E,EAAE,CAAC3zE,EAAEjM,IAAIjB,KAAKuB,KAAK2K,OAAOgB,EAAEhB,OAAO,EAAElM,KAAKuB,KAAKw/E,MAAK,EAAGJ,EAAE3gF,KAAKuB,KAAKvB,KAAKwhF,SAASjB,EAAErgF,UAAUqiF,kBAAkB,SAASr1E,EAAEjM,EAAEF,GAAG,IAAI,IAAI2M,EAAEnI,EAAEjF,EAAE20D,EAAE7lD,EAAE9C,EAAE8zE,EAAEpgE,EAAE,EAAA,EAAI3a,EAAE,EAAA,EAAIg7E,EAAEp/E,EAAEo/E,GAAGt/E,EAAEE,EAAEo/E,IAAI,CAAC,IAAI/6E,EAAEs7E,EAAE1zE,EAAE,EAAEmzE,EAAErgF,KAAKwhF,QAAQ77E,EAAEi7E,EAAE1zE,EAAEmzE,EAAEt/E,EAAEf,KAAKwhF,QAAQgB,GAAGj9E,EAAED,EAAEhF,EAAEqF,EAAEsvD,OAAE,EAAO7lD,OAAE,EAAO9C,OAAE,EAAO8zE,OAAE,EAAOnrB,EAAE3uD,KAAKkD,IAAIjE,EAAEkD,KAAKnI,EAAEmI,MAAM2G,EAAE9I,KAAKkD,IAAIjE,EAAEmD,KAAKpI,EAAEoI,MAAM4D,EAAEhG,KAAKiD,IAAIhE,EAAEoD,KAAKrI,EAAEqI,MAAMy3E,EAAE95E,KAAKiD,IAAIhE,EAAEqD,KAAKtI,EAAEsI,MAAMtC,KAAKkD,IAAI,EAAE8C,EAAE2oD,GAAG3uD,KAAKkD,IAAI,EAAE42E,EAAEhxE,IAAIqzE,EAAEvB,EAAE57E,GAAG47E,EAAEv7E,GAAG68E,EAAExiE,GAAGA,EAAEwiE,EAAE90E,EAAE2yE,EAAEh7E,EAAEo9E,EAAEp9E,EAAEo9E,EAAEp9E,GAAGm9E,IAAIxiE,GAAGyiE,EAAEp9E,IAAIA,EAAEo9E,EAAE/0E,EAAE2yE,GAAG,OAAO3yE,GAAG3M,EAAEE,GAAGs/E,EAAErgF,UAAUoiF,iBAAiB,SAASp1E,EAAEjM,EAAEF,GAAG,IAAI2M,EAAER,EAAE6zE,KAAK/gF,KAAK+hF,YAAYf,EAAEz7E,EAAE2H,EAAE6zE,KAAK/gF,KAAKgiF,YAAYf,EAAEjhF,KAAK0iF,eAAex1E,EAAEjM,EAAEF,EAAE2M,GAAG1N,KAAK0iF,eAAex1E,EAAEjM,EAAEF,EAAEwE,IAAI2H,EAAE2a,SAAS3H,KAAKxS,IAAI6yE,EAAErgF,UAAUwiF,eAAe,SAASx1E,EAAEjM,EAAEF,EAAE2M,GAAGR,EAAE2a,SAAS3H,KAAKxS,GAAG,IAAI,IAAInI,EAAEvF,KAAKwhF,OAAOlhF,EAAEsgF,EAAE1zE,EAAE,EAAEjM,EAAEsE,GAAG6J,EAAEwxE,EAAE1zE,EAAEnM,EAAEE,EAAEF,EAAEwE,GAAG+G,EAAEm/D,EAAEnrE,GAAGmrE,EAAEr8D,GAAG5J,EAAEvE,EAAEuE,EAAEzE,EAAEE,EAAEuE,IAAI,CAAC,IAAIwa,EAAE9S,EAAE2a,SAASriB,GAAGs7E,EAAExgF,EAAE4M,EAAE6zE,KAAKx7E,EAAEya,GAAGA,GAAG1T,GAAGm/D,EAAEnrE,GAAG,IAAI,IAAI+E,EAAEtE,EAAEE,EAAE,EAAEoE,GAAGpE,EAAEoE,IAAI,CAAC,IAAIg7E,EAAEnzE,EAAE2a,SAASxiB,GAAGy7E,EAAE1xE,EAAElC,EAAE6zE,KAAKx7E,EAAE86E,GAAGA,GAAG/zE,GAAGm/D,EAAEr8D,GAAG,OAAO9C,GAAGi0E,EAAErgF,UAAUmiF,oBAAoB,SAASn1E,EAAEjM,EAAEF,GAAG,IAAI,IAAI2M,EAAE3M,EAAE2M,GAAG,EAAEA,IAAIozE,EAAE7/E,EAAEyM,GAAGR,IAAIqzE,EAAErgF,UAAU4hF,UAAU,SAAS50E,GAAG,IAAI,IAAIjM,EAAEiM,EAAElM,OAAO,EAAED,OAAE,EAAOE,GAAG,EAAEA,IAAI,IAAIiM,EAAEjM,GAAG4mB,SAAS7mB,OAAOC,EAAE,GAAGF,EAAEmM,EAAEjM,EAAE,GAAG4mB,UAAU9T,OAAOhT,EAAEJ,QAAQuM,EAAEjM,IAAI,GAAGjB,KAAKuQ,QAAQowE,EAAEzzE,EAAEjM,GAAGjB,KAAKwhF,SAASjB,EAAxuMt/E,GCwBnF,IAyMA0hF,GAzMA,WAIE,SAAAC,EAAYC,GAIV7iF,KAAK8iF,OAAS,IAAIC,EAAAlD,IAAJ,CAAWgD,GAQzB7iF,KAAKgjF,OAAS,GAuLlB,OA/KEJ,EAAA1iF,UAAAwhF,OAAA,SAAOn6E,EAAQK,GAEb,IAAM2hB,EAAO,CACX9gB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACboB,KAAMpB,EAAO,GACbqB,KAAMrB,EAAO,GACbK,MAAOA,GAGT5H,KAAK8iF,OAAOpB,OAAOn4D,GACnBvpB,KAAKgjF,OAAO3gF,EAAOuF,IAAU2hB,GAQ/Bq5D,EAAA1iF,UAAAmzB,KAAA,SAAK4vD,EAAS5wE,GAEZ,IADA,IAAM6wE,EAAQ,IAAIzhF,MAAM4Q,EAAOrR,QACtBC,EAAI,EAAGqL,EAAI+F,EAAOrR,OAAQC,EAAIqL,EAAGrL,IAAK,CAC7C,IAAMsG,EAAS07E,EAAQhiF,GACjB2G,EAAQyK,EAAOpR,GAGfsoB,EAAO,CACX9gB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACboB,KAAMpB,EAAO,GACbqB,KAAMrB,EAAO,GACbK,MAAOA,GAETs7E,EAAMjiF,GAAKsoB,EACXvpB,KAAKgjF,OAAO3gF,EAAOuF,IAAU2hB,EAE/BvpB,KAAK8iF,OAAOzvD,KAAK6vD,IAQnBN,EAAA1iF,UAAAypB,OAAA,SAAO/hB,GACL,IAAM8zE,EAAMr5E,EAAOuF,GAIb2hB,EAAOvpB,KAAKgjF,OAAOtH,GAEzB,cADO17E,KAAKgjF,OAAOtH,GACiB,OAA7B17E,KAAK8iF,OAAOn5D,OAAOJ,IAQ5Bq5D,EAAA1iF,UAAAiqD,OAAA,SAAO5iD,EAAQK,GACb,IAAM2hB,EAAOvpB,KAAKgjF,OAAO3gF,EAAOuF,IAE3BqB,GADQ,CAACsgB,EAAK9gB,KAAM8gB,EAAK7gB,KAAM6gB,EAAK5gB,KAAM4gB,EAAK3gB,MAClCrB,KAChBvH,KAAK2pB,OAAO/hB,GACZ5H,KAAK0hF,OAAOn6E,EAAQK,KAQxBg7E,EAAA1iF,UAAAijF,OAAA,WAEE,OADcnjF,KAAK8iF,OAAOzB,MACbxxE,KAAI,SAAU0Z,GACzB,OAAOA,EAAK3hB,UAShBg7E,EAAA1iF,UAAAkjF,YAAA,SAAY77E,GAEV,IAAM87E,EAAO,CACX56E,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACboB,KAAMpB,EAAO,GACbqB,KAAMrB,EAAO,IAGf,OADcvH,KAAK8iF,OAAOvB,OAAO8B,GACpBxzE,KAAI,SAAU0Z,GACzB,OAAOA,EAAK3hB,UAWhBg7E,EAAA1iF,UAAA6f,QAAA,SAAQrW,GACN,OAAO1J,KAAKsjF,SAAStjF,KAAKmjF,SAAUz5E,IAStCk5E,EAAA1iF,UAAAqjF,gBAAA,SAAgBh8E,EAAQmC,GACtB,OAAO1J,KAAKsjF,SAAStjF,KAAKojF,YAAY77E,GAASmC,IASjDk5E,EAAA1iF,UAAAojF,SAAA,SAASjxE,EAAQ3I,GAEf,IADA,IAAIoV,EACK7d,EAAI,EAAGqL,EAAI+F,EAAOrR,OAAQC,EAAIqL,EAAGrL,IAExC,GADA6d,EAASpV,EAAS2I,EAAOpR,IAEvB,OAAO6d,EAGX,OAAOA,GAMT8jE,EAAA1iF,UAAAqxB,QAAA,WACE,OAAOjf,GAAQtS,KAAKgjF,SAMtBJ,EAAA1iF,UAAAqQ,MAAA,WACEvQ,KAAK8iF,OAAOvyE,QACZvQ,KAAKgjF,OAAS,IAOhBJ,EAAA1iF,UAAAuY,UAAA,SAAU5Q,GACR,IAAMtG,EAAOvB,KAAK8iF,OAAOb,SACzB,OAAOl5E,GACLxH,EAAKkH,KACLlH,EAAKmH,KACLnH,EAAKoH,KACLpH,EAAKqH,KACLf,IAOJ+6E,EAAA1iF,UAAAqW,OAAA,SAAOitE,GAEL,IAAK,IAAMviF,KADXjB,KAAK8iF,OAAOzvD,KAAKmwD,EAAMV,OAAOzB,OACdmC,EAAMR,OACpBhjF,KAAKgjF,OAAO/hF,GAAKuiF,EAAMR,OAAO/hF,IAGpC2hF,EAvMA,GCjBAa,GAMc,aANdA,GAaiB,gBAbjBA,GAoBS,QApBTA,GA4BiB,gBA5BjBA,GAmCqB,oBAnCrBA,GA0CmB,kBA1CnBA,GAiDqB,oBC3Cf,SAAUC,GAAIn8E,EAAQmD,GAC1B,MAAO,CAAC,EAAE5B,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,ICH3C,IAAI66E,IAAkB,EA4HhB,SAAUC,GAAI1I,EAAK2I,GAWvB,OAAO,SAAUt8E,EAAQmD,EAAY8S,EAAYsmE,EAASC,GACxD,IAAMt9E,EAA2DzG,MAxF/D,SACJk7E,EACA2I,EACAt8E,EACAmD,EACA8S,EACAsmE,EACAC,GAEA,IAAMH,EAAM,IAAII,eAChBJ,EAAIK,KACF,MACe,mBAAR/I,EAAqBA,EAAI3zE,EAAQmD,EAAY8S,GAAc09D,GAClE,GAEE2I,EAAOliD,WAAay3B,KACtBwqB,EAAIM,aAAe,eAErBN,EAAIO,gBAAkBR,GAKtBC,EAAIQ,OAAS,SAAUjxE,GAErB,IAAKywE,EAAIS,QAAWT,EAAIS,QAAU,KAAOT,EAAIS,OAAS,IAAM,CAC1D,IAAMhzE,EAAOwyE,EAAOliD,UAEhBl7B,OAAM,EACN4K,GAAQ+nD,IAAmB/nD,GAAQ+nD,GACrC3yD,EAASm9E,EAAIU,aACJjzE,GAAQ+nD,IACjB3yD,EAASm9E,EAAIW,eAEX99E,GAAS,IAAI8zD,WAAYC,gBACvBopB,EAAIU,aACJ,oBAGKjzE,GAAQ+nD,KACjB3yD,EAAqCm9E,EAAIY,UAEvC/9E,EACFq9E,EAGID,EAAOlrB,aAAalyD,EAAQ,CAC1Bc,OAAQA,EACRixD,kBAAmBh7C,IAGvBqmE,EAAOtrB,eAAe9xD,IAGxBs9E,SAGFA,KAMJH,EAAIa,QAAUV,EACdH,EAAIc,OAyBFC,CACEzJ,EACA2I,EACAt8E,EACAmD,EACA8S,GAMA,SAAUw/B,EAAUmb,GAClB1xD,EAAOm+E,YAAY5nC,QACH/sC,IAAZ6zE,GACFA,EAAQ9mC,KAGa+mC,GAAoB9hF,keC/HnD4iF,GAAA,SAAAzgF,GAME,SAAAygF,EAAYxzE,EAAMyzE,EAAaC,GAA/B,IAAAxgF,EACEH,EAAAM,KAAA1E,KAAMqR,IAAKrR,YAOXuE,EAAKwa,QAAU+lE,EAOfvgF,EAAKy4C,SAAW+nC,IAEpB,OAvBuCC,GAAAH,EAAAzgF,GAuBvCygF,EAvBA,CAAuC1zE,IAwIvC8zE,GAAA,SAAA7gF,GAIE,SAAA8gF,EAAYr8D,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAAe,IAE/BtkB,EAAAH,EAAAM,KAAA1E,KAAM,CACJujD,aAAc5/C,EAAQ4/C,aACtBiU,aAAa,EACbh6C,gBAAYvN,EACZkI,MAAO6B,GACPq5D,WAAyBpjE,IAAlBtM,EAAQ0vE,OAAsB1vE,EAAQ0vE,SAC9CrzE,MAKI2U,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAMLxQ,EAAK4gF,QAAUljF,EAMfsC,EAAK6gF,QAAUzhF,EAAQkgF,OAMvBt/E,EAAK8gF,eAAiCp1E,IAArBtM,EAAQ2hF,UAAgC3hF,EAAQ2hF,SAMjE/gF,EAAKghF,KAAO5hF,EAAQu3E,SAEGjrE,IAAnBtM,EAAQ6hF,OACVjhF,EAAK4gF,QAAUxhF,EAAQ6hF,YACAv1E,IAAd1L,EAAKghF,OACd1gF,EAAON,EAAK6gF,QAAS,GAErB7gF,EAAK4gF,QAAUvB,GACbr/E,EAAKghF,KACkDhhF,EAAK6gF,UAQhE7gF,EAAKkhF,eACkBx1E,IAArBtM,EAAQ+hF,SAAyB/hF,EAAQ+hF,SAAWhC,GAEtD,IAqDIr4D,EAAY2xB,EArDV2oC,OACwB11E,IAA5BtM,EAAQgiF,iBAAgChiF,EAAQgiF,uBAMlDphF,EAAKqhF,eAAiBD,EAAkB,IAAIhD,GAAU,KAMtDp+E,EAAKshF,oBAAsB,IAAIlD,GAM/Bp+E,EAAKuhF,qBAAuB,EAM5BvhF,EAAKwhF,sBAAwB,GAO7BxhF,EAAKyhF,SAAW,GAOhBzhF,EAAK0hF,UAAY,GAMjB1hF,EAAK2hF,mBAAqB,GAM1B3hF,EAAK4hF,oBAAsB,KAGvB1kF,MAAMC,QAAQiC,EAAQq5C,UACxBA,EAEIr5C,EAAQq5C,SAEHr5C,EAAQq5C,WAKjBA,GAJA3xB,EAEI1nB,EAAQq5C,UAEU1zB,YAEnBq8D,QAAkC11E,IAAfob,IACtBA,EAAa,IAAIb,GAAAvlB,QAAW+3C,SAEb/sC,IAAb+sC,GACFz4C,EAAK6hF,oBAAoBppC,QAER/sC,IAAfob,GACF9mB,EAAK8hF,wBAAwBh7D,KAoyBnC,OAr7B2B25D,GAAAE,EAAA9gF,GAiKzB8gF,EAAAhlF,UAAAomF,WAAA,SAAWvnE,GACT/e,KAAKumF,mBAAmBxnE,GACxB/e,KAAKmV,WAQP+vE,EAAAhlF,UAAAqmF,mBAAA,SAAmBxnE,GACjB,IAAMynE,EAAankF,EAAO0c,GAE1B,GAAK/e,KAAKymF,YAAYD,EAAYznE,GAAlC,CAOA/e,KAAK0mF,mBAAmBF,EAAYznE,GAEpC,IAAMC,EAAWD,EAAQ0sC,cACzB,GAAIzsC,EAAU,CACZ,IAAMzX,EAASyX,EAASvG,YACpBzY,KAAK4lF,gBACP5lF,KAAK4lF,eAAelE,OAAOn6E,EAAQwX,QAGrC/e,KAAK+lF,sBAAsBS,GAAcznE,EAG3C/e,KAAKkT,cACH,IAAI2xE,GAAkBpB,GAA4B1kE,SAnB9C/e,KAAKmmF,qBACPnmF,KAAKmmF,oBAAoBx8D,OAAO5K,IA2BtCmmE,EAAAhlF,UAAAwmF,mBAAA,SAAmBF,EAAYznE,GAC7B/e,KAAKkmF,mBAAmBM,GAAc,CACpCvyE,GAAO8K,EAAS/K,GAAkBhU,KAAK2mF,qBAAsB3mF,MAC7DiU,GACE8K,EACArN,GACA1R,KAAK2mF,qBACL3mF,QAYNklF,EAAAhlF,UAAAumF,YAAA,SAAYD,EAAYznE,GACtB,IAAI6nE,GAAQ,EACNh8D,EAAK7L,EAAQ88B,QAYnB,YAXW5rC,IAAP2a,IACIA,EAAGkxB,aAAc97C,KAAKgmF,SAG1BY,GAAQ,EAFR5mF,KAAKgmF,SAASp7D,EAAGkxB,YAAc/8B,GAK/B6nE,IACF/hF,IAAS2hF,KAAcxmF,KAAKimF,WAAY,IACxCjmF,KAAKimF,UAAUO,GAAcznE,GAExB6nE,GAQT1B,EAAAhlF,UAAA0kF,YAAA,SAAY5nC,GACVh9C,KAAKomF,oBAAoBppC,GACzBh9C,KAAKmV,WAQP+vE,EAAAhlF,UAAAkmF,oBAAA,SAAoBppC,GAKlB,IAJA,IAAMimC,EAAU,GACV4D,EAAc,GACdC,EAAmB,GAEhB7lF,EAAI,EAAGi0D,EAASlY,EAASh8C,OAAQC,EAAIi0D,EAAQj0D,IAAK,CACzD,IACMulF,EAAankF,EADb0c,EAAUi+B,EAAS/7C,IAErBjB,KAAKymF,YAAYD,EAAYznE,IAC/B8nE,EAAY16E,KAAK4S,GAIZ9d,EAAI,EAAb,IAAK,IAAW8lF,EAASF,EAAY7lF,OAAQC,EAAI8lF,EAAQ9lF,IAAK,CAC5D,IAAM8d,EACAynE,EAAankF,EADb0c,EAAU8nE,EAAY5lF,IAE5BjB,KAAK0mF,mBAAmBF,EAAYznE,GAEpC,IAAMC,EAAWD,EAAQ0sC,cACzB,GAAIzsC,EAAU,CACZ,IAAMzX,EAASyX,EAASvG,YACxBwqE,EAAQ92E,KAAK5E,GACbu/E,EAAiB36E,KAAK4S,QAEtB/e,KAAK+lF,sBAAsBS,GAAcznE,EAO7C,GAJI/e,KAAK4lF,gBACP5lF,KAAK4lF,eAAevyD,KAAK4vD,EAAS6D,GAGhC9mF,KAAK2Q,YAAY8yE,IACd,CAAIxiF,EAAI,EAAb,IAAK,IAAW+lF,EAASH,EAAY7lF,OAAQC,EAAI+lF,EAAQ/lF,IACvDjB,KAAKkT,cACH,IAAI2xE,GAAkBpB,GAA4BoD,EAAY5lF,OAUtEikF,EAAAhlF,UAAAmmF,wBAAA,SAAwBh7D,GACtB,IAAI47D,GAAsB,EAC1BjnF,KAAKgE,iBACHy/E,IAIA,SAAUpwE,GACH4zE,IACHA,GAAsB,EACtB57D,EAAWlf,KAAKkH,EAAI0L,SACpBkoE,GAAsB,MAI5BjnF,KAAKgE,iBACHy/E,IAIA,SAAUpwE,GACH4zE,IACHA,GAAsB,EACtB57D,EAAW1B,OAAOtW,EAAI0L,SACtBkoE,GAAsB,MAI5B57D,EAAWrnB,iBACTqkB,GAIA,SAAUhV,GACH4zE,IACHA,GAAsB,EACtBjnF,KAAKsmF,WAEDjzE,EAAIsU,SAGRs/D,GAAsB,IAExB7yE,KAAKpU,OAETqrB,EAAWrnB,iBACTqkB,GAIA,SAAUhV,GACH4zE,IACHA,GAAsB,EACtBjnF,KAAKknF,cAED7zE,EAAIsU,SAGRs/D,GAAsB,IAExB7yE,KAAKpU,OAETA,KAAKmmF,oBAAsB96D,GAQ7B65D,EAAAhlF,UAAAqQ,MAAA,SAAM42E,GACJ,GAAIA,EAAU,CACZ,IAAK,IAAMC,KAAapnF,KAAKkmF,mBAAoB,CAClClmF,KAAKkmF,mBAAmBkB,GAChCrnE,QAAQvL,IAEVxU,KAAKmmF,sBACRnmF,KAAKkmF,mBAAqB,GAC1BlmF,KAAKgmF,SAAW,GAChBhmF,KAAKimF,UAAY,SAGnB,GAAIjmF,KAAK4lF,eAAgB,CACvB,IAAMyB,EAAwB,SAAUtoE,GACtC/e,KAAKsnF,sBAAsBvoE,IAC3B3K,KAAKpU,MAEP,IAAK,IAAM4qB,KADX5qB,KAAK4lF,eAAe7lE,QAAQsnE,GACXrnF,KAAK+lF,sBACpB/lF,KAAKsnF,sBAAsBtnF,KAAK+lF,sBAAsBn7D,IAIxD5qB,KAAKmmF,qBACPnmF,KAAKmmF,oBAAoB51E,QAGvBvQ,KAAK4lF,gBACP5lF,KAAK4lF,eAAer1E,QAEtBvQ,KAAK+lF,sBAAwB,GAE7B,IAAMwB,EAAa,IAAI1C,GAAkBpB,IACzCzjF,KAAKkT,cAAcq0E,GACnBvnF,KAAKmV,WAeP+vE,EAAAhlF,UAAAsnF,eAAA,SAAe99E,GACb,GAAI1J,KAAK4lF,eACP,OAAO5lF,KAAK4lF,eAAe7lE,QAAQrW,GAC1B1J,KAAKmmF,qBACdnmF,KAAKmmF,oBAAoBpmE,QAAQrW,IAgBrCw7E,EAAAhlF,UAAAunF,iCAAA,SAAiC/hF,EAAYgE,GAC3C,IAAMnC,EAAS,CAAC7B,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACxE,OAAO1F,KAAK0nF,uBAAuBngF,GAAQ,SAAUwX,GAEnD,OADiBA,EAAQ0sC,cACZtqB,qBAAqBz7B,GACzBgE,EAASqV,QAEhB,MAwBNmmE,EAAAhlF,UAAAwnF,uBAAA,SAAuBngF,EAAQmC,GAC7B,GAAI1J,KAAK4lF,eACP,OAAO5lF,KAAK4lF,eAAerC,gBAAgBh8E,EAAQmC,GAC1C1J,KAAKmmF,qBACdnmF,KAAKmmF,oBAAoBpmE,QAAQrW,IAmBrCw7E,EAAAhlF,UAAAynF,iCAAA,SAAiCpgF,EAAQmC,GACvC,OAAO1J,KAAK0nF,uBACVngF,GAKA,SAAUwX,GAER,GADiBA,EAAQ0sC,cACZ7pB,iBAAiBr6B,GAAS,CACrC,IAAMuX,EAASpV,EAASqV,GACxB,GAAID,EACF,OAAOA,OAcjBomE,EAAAhlF,UAAA0nF,sBAAA,WACE,OAAO5nF,KAAKmmF,qBASdjB,EAAAhlF,UAAAsb,YAAA,WACE,IAAIwhC,EASJ,OARIh9C,KAAKmmF,oBACPnpC,EAAWh9C,KAAKmmF,oBAAoB78D,WAAWvhB,MAAM,GAC5C/H,KAAK4lF,iBACd5oC,EAAWh9C,KAAK4lF,eAAezC,SAC1B7wE,GAAQtS,KAAK+lF,wBAChBzkF,EAAO07C,EAAU5qC,GAAUpS,KAAK+lF,yBAIlC/oC,GAUJkoC,EAAAhlF,UAAA2nF,wBAAA,SAAwBniF,GACtB,IAAMs3C,EAAW,GAIjB,OAHAh9C,KAAKynF,iCAAiC/hF,GAAY,SAAUqZ,GAC1Di+B,EAAS7wC,KAAK4S,MAETi+B,GAeTkoC,EAAAhlF,UAAA4nF,oBAAA,SAAoBvgF,GAClB,OAAIvH,KAAK4lF,eACA5lF,KAAK4lF,eAAexC,YAAY77E,GAC9BvH,KAAKmmF,oBACPnmF,KAAKmmF,oBAAoB78D,WAAWvhB,MAAM,GAE1C,IAgBXm9E,EAAAhlF,UAAA6nF,8BAAA,SAA8BriF,EAAYsiF,GAQxC,IAAMriF,EAAID,EAAW,GACfE,EAAIF,EAAW,GACjBuiF,EAAiB,KACfrnD,EAAe,CAACM,IAAKA,KACvBL,EAAqB/3B,EAAAA,EACnBvB,EAAS,EAAEuB,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,GAC1CwoC,EAAS02C,GAA0BjmF,EA+BzC,OA9BA/B,KAAK4lF,eAAerC,gBAClBh8E,GAIA,SAAUwX,GACR,GAAIuyB,EAAOvyB,GAAU,CACnB,IAAMC,EAAWD,EAAQ0sC,cACnBy8B,EAA6BrnD,EAOnC,IANAA,EAAqB7hB,EAAS2hB,eAC5Bh7B,EACAC,EACAg7B,EACAC,IAEuBqnD,EAA4B,CACnDD,EAAiBlpE,EAKjB,IAAMopE,EAAc7hF,KAAKutB,KAAKgN,GAC9Bt5B,EAAO,GAAK5B,EAAIwiF,EAChB5gF,EAAO,GAAK3B,EAAIuiF,EAChB5gF,EAAO,GAAK5B,EAAIwiF,EAChB5gF,EAAO,GAAK3B,EAAIuiF,OAKjBF,GAaT/C,EAAAhlF,UAAAuY,UAAA,SAAU5Q,GACR,OAAO7H,KAAK4lF,eAAentE,UAAU5Q,IAYvCq9E,EAAAhlF,UAAAkoF,eAAA,SAAex9D,GACb,IAAM7L,EAAU/e,KAAKgmF,SAASp7D,EAAGkxB,YACjC,YAAmB7rC,IAAZ8O,EAAwBA,EAAU,MAS3CmmE,EAAAhlF,UAAAmoF,gBAAA,SAAgB3M,GACd,IAAM38D,EAAU/e,KAAKimF,UAAUvK,GAC/B,YAAmBzrE,IAAZ8O,EAAwBA,EAAU,MAS3CmmE,EAAAhlF,UAAAooF,UAAA,WACE,OAAOtoF,KAAKolF,SAMdF,EAAAhlF,UAAAqoF,YAAA,WACE,OAAOvoF,KAAKqlF,WASdH,EAAAhlF,UAAAsoF,OAAA,WACE,OAAOxoF,KAAKulF,MAOdL,EAAAhlF,UAAAymF,qBAAA,SAAqBxzE,GACnB,IAAM4L,EACJ5L,EAAMtS,OAEF2lF,EAAankF,EAAO0c,GACpBC,EAAWD,EAAQ0sC,cACzB,GAAKzsC,EAOE,CACL,IAAMzX,EAASyX,EAASvG,YACpB+tE,KAAcxmF,KAAK+lF,8BACd/lF,KAAK+lF,sBAAsBS,GAC9BxmF,KAAK4lF,gBACP5lF,KAAK4lF,eAAelE,OAAOn6E,EAAQwX,IAGjC/e,KAAK4lF,gBACP5lF,KAAK4lF,eAAez7B,OAAO5iD,EAAQwX,QAfjCynE,KAAcxmF,KAAK+lF,wBACnB/lF,KAAK4lF,gBACP5lF,KAAK4lF,eAAej8D,OAAO5K,GAE7B/e,KAAK+lF,sBAAsBS,GAAcznE,GAe7C,IAAM6L,EAAK7L,EAAQ88B,QACnB,QAAW5rC,IAAP2a,EAAkB,CACpB,IAAM69D,EAAM79D,EAAGkxB,WACX97C,KAAKgmF,SAASyC,KAAS1pE,IACzB/e,KAAK0oF,mBAAmB3pE,GACxB/e,KAAKgmF,SAASyC,GAAO1pE,QAGvB/e,KAAK0oF,mBAAmB3pE,GACxB/e,KAAKimF,UAAUO,GAAcznE,EAE/B/e,KAAKmV,UACLnV,KAAKkT,cACH,IAAI2xE,GAAkBpB,GAA+B1kE,KAUzDmmE,EAAAhlF,UAAAyoF,WAAA,SAAW5pE,GACT,IAAM6L,EAAK7L,EAAQ88B,QACnB,YAAW5rC,IAAP2a,EACKA,KAAM5qB,KAAKgmF,SAEX3jF,EAAO0c,KAAY/e,KAAKimF,WAOnCf,EAAAhlF,UAAAqxB,QAAA,WACE,OAAIvxB,KAAK4lF,eAEL5lF,KAAK4lF,eAAer0D,WAAajf,GAAQtS,KAAK+lF,wBAG9C/lF,KAAKmmF,qBACyC,IAAzCnmF,KAAKmmF,oBAAoBh9D,aAUpC+7D,EAAAhlF,UAAA0oF,aAAA,SAAarhF,EAAQmD,EAAY8S,GAG/B,IAFA,IAAMqrE,EAAqB7oF,KAAK6lF,oBAC1BiD,EAAgB9oF,KAAKylF,UAAUl+E,EAAQmD,EAAY8S,GAChDurE,EAAA,SAAA9nF,EAAOwG,GACd,IAAMuhF,EAAeF,EAAc7nF,GACb4nF,EAAmBtF,gBACvCyF,GAKA,SAAU92E,GACR,OAAO7J,EAAe6J,EAAO3K,OAAQyhF,UAIrCC,EAAKnD,qBACPmD,EAAK/1E,cACH,IAAI2xE,GAAkBpB,KAExBwF,EAAK9D,QAAQzgF,KAAIukF,EAEfD,EACAt+E,EACA8S,EACA,SAAUw/B,KACNh9C,KAAK8lF,qBACP9lF,KAAKkT,cACH,IAAI2xE,GACFpB,QACAxzE,EACA+sC,KAGJ5oC,KAAI60E,GACN,aACIjpF,KAAK8lF,qBACP9lF,KAAKkT,cACH,IAAI2xE,GAAkBpB,MAExBrvE,KAAI60E,IAERJ,EAAmBnH,OAAOsH,EAAc,CAACzhF,OAAQyhF,EAAajhF,mBAvCzDwX,EAAI,EAAG9X,EAAKqhF,EAAc9nF,OAAQue,EAAI9X,IAAM8X,EAA5CwpE,EAAAxpE,GA0CTvf,KAAKm+C,UACHn+C,KAAKmlF,QAAQnkF,OAAS,IAAYhB,KAAK8lF,qBAAuB,GAGlEZ,EAAAhlF,UAAA2zE,QAAA,WACE7zE,KAAKuQ,OAAM,GACXvQ,KAAK6lF,oBAAoBt1E,QACzBnM,EAAAlE,UAAM2zE,QAAOnvE,KAAA1E,OAQfklF,EAAAhlF,UAAAgpF,mBAAA,SAAmB3hF,GACjB,IACI7G,EADEmoF,EAAqB7oF,KAAK6lF,oBAEhCgD,EAAmBtF,gBAAgBh8E,GAAQ,SAAU2K,GACnD,GAAIjJ,GAAOiJ,EAAO3K,OAAQA,GAExB,OADA7G,EAAMwR,GACC,KAGPxR,GACFmoF,EAAmBl/D,OAAOjpB,IAW9BwkF,EAAAhlF,UAAAgnF,cAAA,SAAcnoE,GACZ,GAAKA,EAAL,CAGA,IAAMynE,EAAankF,EAAO0c,GACtBynE,KAAcxmF,KAAK+lF,6BACd/lF,KAAK+lF,sBAAsBS,GAE9BxmF,KAAK4lF,gBACP5lF,KAAK4lF,eAAej8D,OAAO5K,GAGhB/e,KAAKsnF,sBAAsBvoE,IAExC/e,KAAKmV,YAWT+vE,EAAAhlF,UAAAonF,sBAAA,SAAsBvoE,GACpB,IAAMynE,EAAankF,EAAO0c,GACpBoqE,EAAoBnpF,KAAKkmF,mBAAmBM,GAClD,GAAK2C,EAAL,CAGAA,EAAkBppE,QAAQvL,WACnBxU,KAAKkmF,mBAAmBM,GAC/B,IAAM57D,EAAK7L,EAAQ88B,QAQnB,YAPW5rC,IAAP2a,UACK5qB,KAAKgmF,SAASp7D,EAAGkxB,mBAEnB97C,KAAKimF,UAAUO,GACtBxmF,KAAKkT,cACH,IAAI2xE,GAAkBpB,GAA+B1kE,IAEhDA,IAUTmmE,EAAAhlF,UAAAwoF,mBAAA,SAAmB3pE,GACjB,IAAIqqE,GAAU,EACd,IAAK,IAAMx+D,KAAM5qB,KAAKgmF,SACpB,GAAIhmF,KAAKgmF,SAASp7D,KAAQ7L,EAAS,QAC1B/e,KAAKgmF,SAASp7D,GACrBw+D,GAAU,EACV,MAGJ,OAAOA,GASTlE,EAAAhlF,UAAAmpF,UAAA,SAAU7D,GACRxlF,KAAKmlF,QAAUK,GAQjBN,EAAAhlF,UAAAi7E,OAAA,SAAOD,GACLr2E,EAAO7E,KAAKolF,QAAS,GACrBplF,KAAKulF,KAAOrK,EACZl7E,KAAKqpF,UAAUzF,GAAI1I,EAAKl7E,KAAKolF,WAEjCF,EAr7BA,CAA2BrL,GAAA50E,SAu7B3BqkF,GAAerE,mLC9kCf,IAiQAsE,GAjQA,WAIE,SAAAC,EAAY7lF,GAKV3D,KAAKypF,SAAW9lF,EAAQyT,QAMxBpX,KAAK0pF,gBAAkB/lF,EAAQgmF,eAM/B3pF,KAAK6kD,UAAYlhD,EAAQgH,SAMzB3K,KAAK4pF,OAASjmF,EAAQmiB,MAMtB9lB,KAAK6pF,YAAc3xC,GAAOv0C,EAAQmiB,OAMlC9lB,KAAK8pF,cAAgBnmF,EAAQomF,aAwNjC,OAhNEP,EAAAtpF,UAAAogC,MAAA,WACE,IAAMxa,EAAQ9lB,KAAKgqF,WACnB,OAAO,IAAIR,EAAW,CACpBpyE,QAASpX,KAAKuY,aACduN,MAAOrkB,MAAMC,QAAQokB,GAASA,EAAM/d,QAAU+d,EAC9Cnb,SAAU3K,KAAK2uC,cACfg7C,eAAgB3pF,KAAKiqF,oBACrBF,aAAc/pF,KAAKkqF,kBAAkBniF,WASzCyhF,EAAAtpF,UAAAqY,WAAA,WACE,OAAOvY,KAAKypF,UAQdD,EAAAtpF,UAAA+pF,kBAAA,WACE,OAAOjqF,KAAK0pF,iBAQdF,EAAAtpF,UAAAyuC,YAAA,WACE,OAAO3uC,KAAK6kD,WAQd2kC,EAAAtpF,UAAA8pF,SAAA,WACE,OAAOhqF,KAAK4pF,QAOdJ,EAAAtpF,UAAAiqF,cAAA,WACE,OAAOnqF,KAAK6pF,aAQdL,EAAAtpF,UAAAgqF,gBAAA,WACE,OAAOlqF,KAAK8pF,eASdN,EAAAtpF,UAAAkqF,UAAA,WACE,OAAOloF,KASTsnF,EAAAtpF,UAAAolE,SAAA,SAAS7rB,GACP,OAAOv3C,KAOTsnF,EAAAtpF,UAAAmqF,qBAAA,WACE,OAAOnoF,KAQTsnF,EAAAtpF,UAAAqlE,cAAA,SAAc9rB,GACZ,OAAO,GAOT+vC,EAAAtpF,UAAAoqF,cAAA,WACE,OAAOpoF,KAOTsnF,EAAAtpF,UAAAqqF,aAAA,WACE,OAAOroF,KAQTsnF,EAAAtpF,UAAAi2E,UAAA,WACE,OAAOj0E,KAQTsnF,EAAAtpF,UAAAq+C,QAAA,WACE,OAAOr8C,KASTsnF,EAAAtpF,UAAAsqF,gBAAA,SAAgBT,GACd/pF,KAAK8pF,cAAgBC,GASvBP,EAAAtpF,UAAAwZ,WAAA,SAAWtC,GACTpX,KAAKypF,SAAWryE,GASlBoyE,EAAAtpF,UAAAuqF,kBAAA,SAAkBd,GAChB3pF,KAAK0pF,gBAAkBC,GASzBH,EAAAtpF,UAAA4tC,YAAA,SAAYnjC,GACV3K,KAAK6kD,UAAYl6C,GAQnB6+E,EAAAtpF,UAAAwqF,SAAA,SAAS5kE,GACP9lB,KAAK4pF,OAAS9jE,EACd9lB,KAAK6pF,YAAc3xC,GAAOpyB,IAO5B0jE,EAAAtpF,UAAAyqF,kBAAA,SAAkB53E,GAChB7Q,KAOFsnF,EAAAtpF,UAAAmzB,KAAA,WACEnxB,KAOFsnF,EAAAtpF,UAAA0qF,oBAAA,SAAoB73E,GAClB7Q,KAEJsnF,EA/PA,GCDM,SAAUqB,GAAYr8E,GAC1B,OAAI/M,MAAMC,QAAQ8M,GACTC,GAASD,GAETA,geCujBXs8E,GA5hBA,SAAA1mF,GAIE,SAAA2mF,EAAYpnF,GAAZ,IAAAY,EAAAvE,KAIQ2pF,OACuB15E,IAA3BtM,EAAQgmF,gBAA+BhmF,EAAQgmF,sBAEjDplF,EAAAH,EAAAM,KAAA1E,KAAM,CACJoX,QAAS,EACTuyE,eAAgBA,EAChBh/E,cAA+BsF,IAArBtM,EAAQgH,SAAyBhH,EAAQgH,SAAW,EAC9Dmb,WAAyB7V,IAAlBtM,EAAQmiB,MAAsBniB,EAAQmiB,MAAQ,EACrDikE,kBAC2B95E,IAAzBtM,EAAQomF,aAA6BpmF,EAAQomF,aAAe,CAAC,EAAG,MACnE/pF,MAMIqvE,aAAUp/D,EAMf1L,EAAKymF,oBAAsB,KAM3BzmF,EAAK0mF,WAAyBh7E,IAAjBtM,EAAQunF,KAAqBvnF,EAAQunF,KAAO,KAMzD3mF,EAAK2wE,QAAU,CAAC,EAAG,GAMnB3wE,EAAK+pD,QAAU3qD,EAAQwnF,OAMvB5mF,EAAK6mF,aACgBn7E,IAAnBtM,EAAQq1B,OAAuBr1B,EAAQq1B,OAASr1B,EAAQ0nF,QAM1D9mF,EAAK+mF,SAAW3nF,EAAQ4nF,QAMxBhnF,EAAKgqD,YAA2Bt+C,IAAlBtM,EAAQuC,MAAsBvC,EAAQuC,MAAQ,EAM5D3B,EAAKinF,aAA6Bv7E,IAAnBtM,EAAQgrE,OAAuBhrE,EAAQgrE,OAAS,KAM/DpqE,EAAKknF,MAAQ,KAMblnF,EAAKmnF,eAAiB,KAEtBnnF,EAAKsW,WAmcT,OA1hB2B8wE,GAAAZ,EAAA3mF,GA+FzB2mF,EAAA7qF,UAAAogC,MAAA,WACE,IAAMxa,EAAQ9lB,KAAKgqF,WACb9iF,EAAQ,IAAI6jF,EAAa,CAC7BG,KAAMlrF,KAAK4rF,UAAY5rF,KAAK4rF,UAAUtrD,aAAUrwB,EAChDk7E,OAAQnrF,KAAK6rF,YACb7yD,OAAQh5B,KAAK2rC,YACb4/C,QAASvrF,KAAK8rF,aACd5lF,MAAOlG,KAAKsqD,WACZqkB,OAAQ3uE,KAAK+rF,YAAc/rF,KAAK+rF,YAAYzrD,aAAUrwB,EACtDtF,SAAU3K,KAAK2uC,cACfg7C,eAAgB3pF,KAAKiqF,oBACrBnkE,MAAOrkB,MAAMC,QAAQokB,GAASA,EAAM/d,QAAU+d,EAC9CikE,aAAc/pF,KAAKkqF,kBAAkBniF,UAGvC,OADAb,EAAMwS,WAAW1Z,KAAKuY,cACfrR,GAST6jF,EAAA7qF,UAAAkqF,UAAA,WACE,IAAMx/E,EAAO5K,KAAKyrF,MAClB,IAAK7gF,EACH,OAAO,KAET,IAAMm/E,EAAe/pF,KAAKkqF,kBAC1B,MAAO,CAACt/E,EAAK,GAAK,EAAIm/E,EAAa,GAAIn/E,EAAK,GAAK,EAAIm/E,EAAa,KAQpEgB,EAAA7qF,UAAAoqD,SAAA,WACE,OAAOtqD,KAAKuuD,QAQdw8B,EAAA7qF,UAAA0rF,QAAA,WACE,OAAO5rF,KAAKirF,OAMdF,EAAA7qF,UAAAmqF,qBAAA,WAIE,OAHKrqF,KAAKgrF,qBACRhrF,KAAKgsF,0BAA0BhsF,KAAK0rF,gBAE/B1rF,KAAKgrF,qBASdD,EAAA7qF,UAAAolE,SAAA,SAAS7rB,GACP,IAAIisB,EAAQ1lE,KAAKqvE,QAAQ51B,GACzB,IAAKisB,EAAO,CACV,IAAMumB,EAAgBjsF,KAAK0rF,eACrB1qE,EAAUa,GACdoqE,EAAcrhF,KAAO6uC,EACrBwyC,EAAcrhF,KAAO6uC,GAEvBz5C,KAAKksF,MAAMD,EAAejrE,EAASy4B,GAEnCisB,EAAQ1kD,EAAQkB,OAChBliB,KAAKqvE,QAAQ51B,GAAcisB,EAE7B,OAAOA,GAQTqlB,EAAA7qF,UAAAqlE,cAAA,SAAc9rB,GACZ,OAAOA,GAMTsxC,EAAA7qF,UAAAqqF,aAAA,WACE,OAAOvqF,KAAKyrF,OAMdV,EAAA7qF,UAAAoqF,cAAA,WACE,OAAO9kB,IAQTulB,EAAA7qF,UAAAi2E,UAAA,WACE,OAAOn2E,KAAKk1E,SAQd6V,EAAA7qF,UAAA2rF,UAAA,WACE,OAAO7rF,KAAKsuD,SAQdy8B,EAAA7qF,UAAAyrC,UAAA,WACE,OAAO3rC,KAAKorF,SAQdL,EAAA7qF,UAAA4rF,WAAA,WACE,OAAO9rF,KAAKsrF,UAQdP,EAAA7qF,UAAAq+C,QAAA,WACE,OAAOv+C,KAAKyrF,OAQdV,EAAA7qF,UAAA6rF,UAAA,WACE,OAAO/rF,KAAKwrF,SAMdT,EAAA7qF,UAAAyqF,kBAAA,SAAkB53E,KAKlBg4E,EAAA7qF,UAAAmzB,KAAA,aAKA03D,EAAA7qF,UAAA0qF,oBAAA,SAAoB73E,KAUpBg4E,EAAA7qF,UAAAisF,uBAAA,SAAuBC,EAAUC,EAAaC,GAC5C,GACkB,IAAhBD,GACArsF,KAAKsuD,UAAYxlD,EAAAA,GACH,UAAbsjF,GAAqC,UAAbA,EAEzB,OAAOC,EAwBT,IAAI9L,EAAKvgF,KAAKorF,QACVpL,OAAuB/vE,IAAlBjQ,KAAKsrF,SAAyB/K,EAAKvgF,KAAKsrF,SACjD,GAAI/K,EAAKP,EAAI,CACX,IAAM3+E,EAAMk/E,EACZA,EAAKP,EACLA,EAAK3+E,EAEP,IAAM8pF,OACcl7E,IAAlBjQ,KAAKsrF,SAAyBtrF,KAAKsuD,QAAyB,EAAftuD,KAAKsuD,QAC9Ci+B,EAAS,EAAIjmF,KAAKgH,GAAM69E,EACxB7qF,EAAI0/E,EAAK15E,KAAKD,IAAIkmF,GAElBjnF,EAAIi7E,EADAj6E,KAAKutB,KAAKmsD,EAAKA,EAAK1/E,EAAIA,GAE5BiF,EAAIe,KAAKutB,KAAKvzB,EAAIA,EAAIgF,EAAIA,GAC1BknF,EAAajnF,EAAIjF,EACvB,GAAiB,UAAb8rF,GAAwBI,GAAcF,EACxC,OAAOE,EAAaH,EAetB,IAAMhtD,EAAIgtD,EAAc,EAAIG,EACtBlgF,EAAK+/E,EAAc,GAAM/mF,EAAIC,GAE7BknF,EADOnmF,KAAKutB,MAAM0sD,EAAKlhD,IAAMkhD,EAAKlhD,GAAK/yB,EAAIA,GACzBi0E,EACxB,QAAsBtwE,IAAlBjQ,KAAKsrF,UAAuC,UAAbc,EACjC,OAAkB,EAAXK,EAIT,IAAMC,EAAKnM,EAAKj6E,KAAKD,IAAIkmF,GAEnBI,EAAK3M,EADA15E,KAAKutB,KAAK0sD,EAAKA,EAAKmM,EAAKA,GAG9BE,EADKtmF,KAAKutB,KAAK64D,EAAKA,EAAKC,EAAKA,GACPD,EAC7B,GAAIE,GAAmBN,EAAY,CACjC,IAAMO,EAAeD,EAAkBP,EAAe,EAAIrM,EAAKO,EAC/D,OAAO,EAAIj6E,KAAKkD,IAAIijF,EAAUI,GAEhC,OAAkB,EAAXJ,GAOT1B,EAAA7qF,UAAA4sF,oBAAA,WACE,IAIIre,EAJA2d,ExH9SuB,QwH+SvBE,EAAa,EACbS,EAAW,KACXC,EAAiB,EAEjBX,EAAc,EAEdrsF,KAAKwrF,UAEa,QADpB/c,EAAczuE,KAAKwrF,QAAQyB,cAEzBxe,ExH5S0B,QwH8S5BA,EAAcoc,GAAYpc,QAENx+D,KADpBo8E,EAAcrsF,KAAKwrF,QAAQnX,cAEzBgY,ExHzRwB,GwH2R1BU,EAAW/sF,KAAKwrF,QAAQ0B,cACxBF,EAAiBhtF,KAAKwrF,QAAQ2B,yBAEbl9E,KADjBm8E,EAAWpsF,KAAKwrF,QAAQ4B,iBAEtBhB,ExHnUuB,cwHsUNn8E,KADnBq8E,EAAatsF,KAAKwrF,QAAQ6B,mBAExBf,ExHjUyB,KwHqU7B,IAAM/nC,EAAMvkD,KAAKmsF,uBAAuBC,EAAUC,EAAaC,GACzDgB,EAAYhnF,KAAKkD,IAAIxJ,KAAKorF,QAASprF,KAAKsrF,UAAY,GAG1D,MAAO,CACL7c,YAAaA,EACb4d,YAAaA,EACbzhF,KALWtE,KAAK8H,KAAK,EAAIk/E,EAAY/oC,GAMrCwoC,SAAUA,EACVC,eAAgBA,EAChBZ,SAAUA,EACVE,WAAYA,IAOhBvB,EAAA7qF,UAAA2a,OAAA,WACE7a,KAAK0rF,eAAiB1rF,KAAK8sF,sBAC3B,IAAMliF,EAAO5K,KAAK0rF,eAAe9gF,KACjC5K,KAAKqvE,QAAU,GACfrvE,KAAKyrF,MAAQ,CAAC7gF,EAAMA,IAStBmgF,EAAA7qF,UAAAgsF,MAAA,SAAMD,EAAejrE,EAASy4B,GAO5B,GANAz4B,EAAQ8E,MAAM2zB,EAAYA,GAE1Bz4B,EAAQmF,UAAU8lE,EAAcrhF,KAAO,EAAGqhF,EAAcrhF,KAAO,GAE/D5K,KAAKutF,YAAYvsE,GAEbhhB,KAAKirF,MAAO,CACd,IAAIz8E,EAAQxO,KAAKirF,MAAMgC,WACT,OAAVz+E,IACFA,ExH5YwB,QwH8Y1BwS,EAAQqmD,UAAYwjB,GAAYr8E,GAChCwS,EAAQkqE,OAENlrF,KAAKwrF,UACPxqE,EAAQytD,YAAcwd,EAAcxd,YACpCztD,EAAQ0tD,UAAYud,EAAcI,YAC9BrrE,EAAQwsE,aAAevB,EAAcc,WACvC/rE,EAAQwsE,YAAYvB,EAAcc,UAClC/rE,EAAQgsE,eAAiBf,EAAce,gBAEzChsE,EAAQorE,SAAWH,EAAcG,SACjCprE,EAAQsrE,WAAaL,EAAcK,WACnCtrE,EAAQ2tD,WAQZoc,EAAA7qF,UAAA8rF,0BAAA,SAA0BC,GACxB,GAAIjsF,KAAKirF,MAAO,CACd,IAAIz8E,EAAQxO,KAAKirF,MAAMgC,WAGnB71E,EAAU,EASd,GARqB,iBAAV5I,IACTA,EAAQwB,GAAQxB,IAEJ,OAAVA,EACF4I,EAAU,EACD3V,MAAMC,QAAQ8M,KACvB4I,EAA2B,IAAjB5I,EAAMxN,OAAewN,EAAM,GAAK,GAE5B,IAAZ4I,EAAe,CAGjB,IAAM4J,EAAUa,GACdoqE,EAAcrhF,KACdqhF,EAAcrhF,MAEhB5K,KAAKgrF,oBAAsBhqE,EAAQkB,OAEnCliB,KAAKytF,wBAAwBxB,EAAejrE,IAG3ChhB,KAAKgrF,sBACRhrF,KAAKgrF,oBAAsBhrF,KAAKslE,SAAS,KAQ7CylB,EAAA7qF,UAAAqtF,YAAA,SAAYvsE,GACV,IAAImqE,EAASnrF,KAAKsuD,QACZt1B,EAASh5B,KAAKorF,QACpB,GAAID,IAAWriF,EAAAA,EACbkY,EAAQ0sE,IAAI,EAAG,EAAG10D,EAAQ,EAAG,EAAI1yB,KAAKgH,QACjC,CACL,IAAMi+E,OAA4Bt7E,IAAlBjQ,KAAKsrF,SAAyBtyD,EAASh5B,KAAKsrF,cACtCr7E,IAAlBjQ,KAAKsrF,WACPH,GAAU,GAIZ,IAFA,IAAMv/C,EAAa5rC,KAAKuuD,OAASjoD,KAAKgH,GAAK,EACrCihE,EAAQ,EAAIjoE,KAAKgH,GAAM69E,EACpBlqF,EAAI,EAAGA,EAAIkqF,EAAQlqF,IAAK,CAC/B,IAAM0sF,EAAS/hD,EAAa3qC,EAAIstE,EAC1Bqf,EAAU3sF,EAAI,GAAM,EAAI+3B,EAASuyD,EACvCvqE,EAAQ+qD,OAAO6hB,EAAUtnF,KAAKC,IAAIonF,GAASC,EAAUtnF,KAAKD,IAAIsnF,IAEhE3sE,EAAQgrD,cASZ+e,EAAA7qF,UAAAutF,wBAAA,SAAwBxB,EAAejrE,GAErCA,EAAQmF,UAAU8lE,EAAcrhF,KAAO,EAAGqhF,EAAcrhF,KAAO,GAE/D5K,KAAKutF,YAAYvsE,GAEjBA,EAAQqmD,UxHreoB,OwHse5BrmD,EAAQkqE,OACJlrF,KAAKwrF,UACPxqE,EAAQytD,YAAcwd,EAAcxd,YACpCztD,EAAQ0tD,UAAYud,EAAcI,YAC9BJ,EAAcc,WAChB/rE,EAAQwsE,YAAYvB,EAAcc,UAClC/rE,EAAQgsE,eAAiBf,EAAce,gBAEzChsE,EAAQorE,SAAWH,EAAcG,SACjCprE,EAAQsrE,WAAaL,EAAcK,WACnCtrE,EAAQ2tD,WAGdoc,EA1hBA,CAA2BxB,8dCyB3BsE,GArDA,SAAAzpF,GAIE,SAAA0pF,EAAYjlE,GACV,IAAMllB,EAAUklB,GAA4B,GAE5C,OAAAzkB,EAAAM,KAAA1E,KAAM,CACJmrF,OAAQriF,EAAAA,EACRoiF,KAAMvnF,EAAQunF,KACdlyD,OAAQr1B,EAAQq1B,OAChB21C,OAAQhrE,EAAQgrE,OAChB7oD,WAAyB7V,IAAlBtM,EAAQmiB,MAAsBniB,EAAQmiB,MAAQ,EACrDnb,cAA+BsF,IAArBtM,EAAQgH,SAAyBhH,EAAQgH,SAAW,EAC9Dg/E,oBAC6B15E,IAA3BtM,EAAQgmF,gBAA+BhmF,EAAQgmF,eACjDI,kBAC2B95E,IAAzBtM,EAAQomF,aAA6BpmF,EAAQomF,aAAe,CAAC,EAAG,MACnE/pF,KAiCL,OAnD0B+tF,GAAAD,EAAA1pF,GA0BxB0pF,EAAA5tF,UAAAogC,MAAA,WACE,IAAMxa,EAAQ9lB,KAAKgqF,WACb9iF,EAAQ,IAAI4mF,EAAY,CAC5B5C,KAAMlrF,KAAK4rF,UAAY5rF,KAAK4rF,UAAUtrD,aAAUrwB,EAChD0+D,OAAQ3uE,KAAK+rF,YAAc/rF,KAAK+rF,YAAYzrD,aAAUrwB,EACtD+oB,OAAQh5B,KAAK2rC,YACb7lB,MAAOrkB,MAAMC,QAAQokB,GAASA,EAAM/d,QAAU+d,EAC9Cnb,SAAU3K,KAAK2uC,cACfg7C,eAAgB3pF,KAAKiqF,oBACrBF,aAAc/pF,KAAKkqF,kBAAkBniF,UAGvC,OADAb,EAAMwS,WAAW1Z,KAAKuY,cACfrR,GAST4mF,EAAA5tF,UAAA8tF,UAAA,SAAUh1D,GACRh5B,KAAKorF,QAAUpyD,EACfh5B,KAAK6a,UAETizE,EAnDA,CAA0BG,GAAAhpF,SCqC1BipF,GA9CA,WAIE,SAAAC,EAAYtlE,GACV,IAAMllB,EAAUklB,GAAe,GAM/B7oB,KAAKouF,YAA2Bn+E,IAAlBtM,EAAQ6K,MAAsB7K,EAAQ6K,MAAQ,KAiChE,OAzBE2/E,EAAAjuF,UAAAogC,MAAA,WACE,IAAM9xB,EAAQxO,KAAKitF,WACnB,OAAO,IAAIkB,EAAK,CACd3/E,MAAO/M,MAAMC,QAAQ8M,GAASA,EAAMzG,QAAUyG,QAASyB,KAS3Dk+E,EAAAjuF,UAAA+sF,SAAA,WACE,OAAOjtF,KAAKouF,QASdD,EAAAjuF,UAAAmuF,SAAA,SAAS7/E,GACPxO,KAAKouF,OAAS5/E,GAElB2/E,EA5CA,GC2NAG,GAhNA,WAIE,SAAAC,EAAY1lE,GACV,IAAMllB,EAAUklB,GAAe,GAM/B7oB,KAAKouF,YAA2Bn+E,IAAlBtM,EAAQ6K,MAAsB7K,EAAQ6K,MAAQ,KAM5DxO,KAAKwuF,SAAW7qF,EAAQ8qF,QAMxBzuF,KAAK0uF,eAAiCz+E,IAArBtM,EAAQopF,SAAyBppF,EAAQopF,SAAW,KAMrE/sF,KAAK2uF,gBAAkBhrF,EAAQqpF,eAM/BhtF,KAAK4uF,UAAYjrF,EAAQyoF,SAMzBpsF,KAAK6uF,YAAclrF,EAAQ2oF,WAM3BtsF,KAAK8uF,OAASnrF,EAAQsI,MA+J1B,OAvJEsiF,EAAAruF,UAAAogC,MAAA,WACE,IAAM9xB,EAAQxO,KAAKitF,WACnB,OAAO,IAAIsB,EAAO,CAChB//E,MAAO/M,MAAMC,QAAQ8M,GAASA,EAAMzG,QAAUyG,QAASyB,EACvDw+E,QAASzuF,KAAK+uF,aACdhC,SAAU/sF,KAAKktF,cAAgBltF,KAAKktF,cAAcnlF,aAAUkI,EAC5D+8E,eAAgBhtF,KAAKmtF,oBACrBf,SAAUpsF,KAAKotF,cACfd,WAAYtsF,KAAKqtF,gBACjBphF,MAAOjM,KAAKq0E,cAShBka,EAAAruF,UAAA+sF,SAAA,WACE,OAAOjtF,KAAKouF,QAQdG,EAAAruF,UAAA6uF,WAAA,WACE,OAAO/uF,KAAKwuF,UAQdD,EAAAruF,UAAAgtF,YAAA,WACE,OAAOltF,KAAK0uF,WAQdH,EAAAruF,UAAAitF,kBAAA,WACE,OAAOntF,KAAK2uF,iBAQdJ,EAAAruF,UAAAktF,YAAA,WACE,OAAOptF,KAAK4uF,WAQdL,EAAAruF,UAAAmtF,cAAA,WACE,OAAOrtF,KAAK6uF,aAQdN,EAAAruF,UAAAm0E,SAAA,WACE,OAAOr0E,KAAK8uF,QASdP,EAAAruF,UAAAmuF,SAAA,SAAS7/E,GACPxO,KAAKouF,OAAS5/E,GAShB+/E,EAAAruF,UAAA8uF,WAAA,SAAWP,GACTzuF,KAAKwuF,SAAWC,GAelBF,EAAAruF,UAAAstF,YAAA,SAAYT,GACV/sF,KAAK0uF,UAAY3B,GASnBwB,EAAAruF,UAAA+uF,kBAAA,SAAkBjC,GAChBhtF,KAAK2uF,gBAAkB3B,GASzBuB,EAAAruF,UAAAgvF,YAAA,SAAY9C,GACVpsF,KAAK4uF,UAAYxC,GASnBmC,EAAAruF,UAAAivF,cAAA,SAAc7C,GACZtsF,KAAK6uF,YAAcvC,GASrBiC,EAAAruF,UAAAkvF,SAAA,SAASnjF,GACPjM,KAAK8uF,OAAS7iF,GAElBsiF,EA9MA,GC6HAc,GAAA,WAIE,SAAAC,EAAYzmE,GACV,IAAMllB,EAAUklB,GAAe,GAM/B7oB,KAAK+qD,UAAY,KAMjB/qD,KAAKuvF,kBAAoBC,QAEAv/E,IAArBtM,EAAQqb,UACVhf,KAAKs0D,YAAY3wD,EAAQqb,UAO3Bhf,KAAKirF,WAAyBh7E,IAAjBtM,EAAQunF,KAAqBvnF,EAAQunF,KAAO,KAMzDlrF,KAAKqmE,YAA2Bp2D,IAAlBtM,EAAQ+hE,MAAsB/hE,EAAQ+hE,MAAQ,KAM5D1lE,KAAK2a,eAAiC1K,IAArBtM,EAAQs6C,SAAyBt6C,EAAQs6C,SAAW,KAMrEj+C,KAAKyvF,2BAC8Bx/E,IAAjCtM,EAAQ+rF,qBACJ/rF,EAAQ+rF,qBACR,KAMN1vF,KAAKwrF,aAA6Bv7E,IAAnBtM,EAAQgrE,OAAuBhrE,EAAQgrE,OAAS,KAM/D3uE,KAAK2vF,WAAyB1/E,IAAjBtM,EAAQ8f,KAAqB9f,EAAQ8f,KAAO,KAMzDzjB,KAAK4vF,QAAUjsF,EAAQ2T,OA4M3B,OApMEg4E,EAAApvF,UAAAogC,MAAA,WACE,IAAIthB,EAAWhf,KAAKyrD,cAMpB,OALIzsC,GAAgC,iBAAbA,IACrBA,EACEA,EACAshB,SAEG,IAAIgvD,EAAM,CACftwE,SAAUA,EACVksE,KAAMlrF,KAAK4rF,UAAY5rF,KAAK4rF,UAAUtrD,aAAUrwB,EAChDy1D,MAAO1lE,KAAKslE,WAAatlE,KAAKslE,WAAWhlC,aAAUrwB,EACnDguC,SAAUj+C,KAAK+b,cACf4yD,OAAQ3uE,KAAK+rF,YAAc/rF,KAAK+rF,YAAYzrD,aAAUrwB,EACtDwT,KAAMzjB,KAAK6vF,UAAY7vF,KAAK6vF,UAAUvvD,aAAUrwB,EAChDqH,OAAQtX,KAAKsY,eAUjBg3E,EAAApvF,UAAA6b,YAAA,WACE,OAAO/b,KAAK2a,WASd20E,EAAApvF,UAAA4vF,YAAA,SAAY7xC,GACVj+C,KAAK2a,UAAYsjC,GASnBqxC,EAAApvF,UAAA6vF,wBAAA,SAAwB9xC,GACtBj+C,KAAKyvF,sBAAwBxxC,GAS/BqxC,EAAApvF,UAAA8vF,wBAAA,WACE,OAAOhwF,KAAKyvF,uBAUdH,EAAApvF,UAAAurD,YAAA,WACE,OAAOzrD,KAAK+qD,WASdukC,EAAApvF,UAAA+vF,oBAAA,WACE,OAAOjwF,KAAKuvF,mBAQdD,EAAApvF,UAAA0rF,QAAA,WACE,OAAO5rF,KAAKirF,OAQdqE,EAAApvF,UAAAgwF,QAAA,SAAQhF,GACNlrF,KAAKirF,MAAQC,GAQfoE,EAAApvF,UAAAolE,SAAA,WACE,OAAOtlE,KAAKqmE,QAQdipB,EAAApvF,UAAA0mE,SAAA,SAASlB,GACP1lE,KAAKqmE,OAASX,GAQhB4pB,EAAApvF,UAAA6rF,UAAA,WACE,OAAO/rF,KAAKwrF,SAQd8D,EAAApvF,UAAAiwF,UAAA,SAAUxhB,GACR3uE,KAAKwrF,QAAU7c,GAQjB2gB,EAAApvF,UAAA2vF,QAAA,WACE,OAAO7vF,KAAK2vF,OAQdL,EAAApvF,UAAAkwF,QAAA,SAAQ3sE,GACNzjB,KAAK2vF,MAAQlsE,GAQf6rE,EAAApvF,UAAAoY,UAAA,WACE,OAAOtY,KAAK4vF,SAWdN,EAAApvF,UAAAo0D,YAAA,SAAYt1C,GACc,mBAAbA,EACThf,KAAKuvF,kBAAoBvwE,EACI,iBAAbA,EAChBhf,KAAKuvF,kBAAoB,SAAUxwE,GACjC,OACEA,EAAQjb,IAAIkb,IAGNA,OAEY/O,IAAb+O,IACThf,KAAKuvF,kBAAoB,WACvB,OAA6DvwE,IAH/Dhf,KAAKuvF,kBAAoBC,GAM3BxvF,KAAK+qD,UAAY/rC,GASnBswE,EAAApvF,UAAA0Z,UAAA,SAAUtC,GACRtX,KAAK4vF,QAAUt4E,GAEnBg4E,EA9QA,GAmTA,IAAIe,GAAgB,KAOd,SAAUC,GAAmBvxE,EAASrU,GAM1C,IAAK2lF,GAAe,CAClB,IAAMnF,EAAO,IAAIgD,GAAK,CACpB1/E,MAAO,0BAEHmgE,EAAS,IAAI2f,GAAO,CACxB9/E,MAAO,UACPvC,MAAO,OAETokF,GAAgB,CACd,IAAIhB,GAAM,CACR3pB,MAAO,IAAI6qB,GAAAtrF,QAAY,CACrBimF,KAAMA,EACNvc,OAAQA,EACR31C,OAAQ,IAEVkyD,KAAMA,EACNvc,OAAQA,KAId,OAAO0hB,GAuET,SAASb,GAAwBzwE,GAC/B,OAAOA,EAAQ0sC,kBAGjB+kC,GAAenB,6dCjfToB,GACU,cAiMhBC,GAlLA,SAAAtsF,GAIE,SAAAusF,EAAY9nE,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,GAEtCtO,EAAc5I,GAAO,GAAIhO,iBAExB4W,EAAYrT,aACZqT,EAAYq2E,oBACZr2E,EAAYs2E,4BACZt2E,EAAYu2E,wBACnBvsF,EAAAH,EAAAM,KAAA1E,KAAMua,IAANva,MAMK+wF,gBACmB9gF,IAAtBtM,EAAQqtF,WAA0BrtF,EAAQqtF,UAM5CzsF,EAAK0sF,mBACsBhhF,IAAzBtM,EAAQitF,aAA6BjtF,EAAQitF,aAAe,IAO9DrsF,EAAK2vD,OAAS,KAOd3vD,EAAK4vD,oBAAiBlkD,EAEtB1L,EAAKowD,SAAShxD,EAAQuD,OAMtB3C,EAAK2sF,2BAC8BjhF,IAAjCtM,EAAQktF,sBACJltF,EAAQktF,qBAOdtsF,EAAK4sF,6BACgClhF,IAAnCtM,EAAQmtF,wBACJntF,EAAQmtF,yBAoHlB,OAhL8BM,GAAAT,EAAAvsF,GAmE5BusF,EAAAzwF,UAAAmxF,aAAA,WACE,OAAOrxF,KAAK+wF,YAiBdJ,EAAAzwF,UAAAsb,YAAA,SAAYC,GACV,OAAOrX,EAAAlE,UAAMsb,YAAW9W,KAAA1E,KAACyb,IAM3Bk1E,EAAAzwF,UAAAoxF,gBAAA,WACE,OAAOtxF,KAAKixF,eAOdN,EAAAzwF,UAAAqxF,eAAA,WACE,OACEvxF,KAAK8D,IAAI2sF,KAUbE,EAAAzwF,UAAAw0D,SAAA,WACE,OAAO10D,KAAKk0D,QAQdy8B,EAAAzwF,UAAA00D,iBAAA,WACE,OAAO50D,KAAKm0D,gBAOdw8B,EAAAzwF,UAAAsxF,wBAAA,WACE,OAAOxxF,KAAKkxF,uBAOdP,EAAAzwF,UAAAuxF,0BAAA,WACE,OAAOzxF,KAAKmxF,yBAOdR,EAAAzwF,UAAA0nB,gBAAA,SAAgB/L,GACTA,EAAW4kC,gBACd5kC,EAAW4kC,cAAgB,IAAIsiC,EAAAlD,IAAJ,CAAU,IAErB7/E,KAAK+b,cAAe6L,gBAAgB/L,IAOxD80E,EAAAzwF,UAAAwxF,eAAA,SAAeC,GACb3xF,KAAK+Q,IAAI0/E,GAAuBkB,IAalChB,EAAAzwF,UAAAy0D,SAAA,SAASG,GACP90D,KAAKk0D,YAAuBjkD,IAAd6kD,EAA0BA,EAAYw7B,GACpDtwF,KAAKm0D,eACW,OAAdW,OAAqB7kD,ED6KrB,SAAqBvP,GACzB,IAAIkxF,EAEJ,GAAmB,mBAARlxF,EACTkxF,EAAgBlxF,MACX,CAIL,IAAIkzD,EACAnyD,MAAMC,QAAQhB,GAChBkzD,EAASlzD,GAETmE,EAAqD,mBAApBnE,EAAK4X,UAA2B,IAEjEs7C,EAAS,CAD2BlzD,IAGtCkxF,EAAgB,WACd,OAAOh+B,GAGX,OAAOg+B,EClM8BC,CAAgB7xF,KAAKk0D,QACxDl0D,KAAKmV,WAETw7E,EAhLA,CAA8BjxE,GAAAza,+FC/E9B,IAAM6sF,GAAc,CAClBC,eAAgB,EAChBC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,KAAM,EACNC,gBAAiB,EACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,OAAQ,IAMGC,GAAkB,CAACd,GAAYS,MAK/BM,GAAoB,CAACf,GAAYa,QAKjCG,GAAuB,CAAChB,GAAYE,YAKpCe,GAAuB,CAACjB,GAAYI,YAEjDc,GAAelB,GCuEfmB,GAxGA,WAAA,SAAAC,KAsGA,OA7FEA,EAAAhzF,UAAAizF,WAAA,SAAWn0E,EAAUD,EAASk/B,EAAUyxC,KAOxCwD,EAAAhzF,UAAAkzF,aAAA,SAAap0E,KAObk0E,EAAAhzF,UAAAy0D,SAAA,SAASztD,KAMTgsF,EAAAhzF,UAAAmzF,WAAA,SAAWC,EAAgBv0E,KAM3Bm0E,EAAAhzF,UAAAqzF,YAAA,SAAYx0E,EAAS7X,KAMrBgsF,EAAAhzF,UAAAszF,uBAAA,SAAuBC,EAA4B10E,KAMnDm0E,EAAAhzF,UAAAwzF,eAAA,SAAeC,EAAoB50E,KAMnCm0E,EAAAhzF,UAAA0zF,oBAAA,SAAoBC,EAAyB90E,KAM7Cm0E,EAAAhzF,UAAA4zF,eAAA,SAAeC,EAAoBh1E,KAMnCm0E,EAAAhzF,UAAA8zF,iBAAA,SAAiBC,EAAsBl1E,KAMvCm0E,EAAAhzF,UAAAg0F,UAAA,SAAUC,EAAep1E,KAMzBm0E,EAAAhzF,UAAAk0F,YAAA,SAAYC,EAAiBt1E,KAM7Bm0E,EAAAhzF,UAAAo0F,SAAA,SAASt1E,EAAUD,KAMnBm0E,EAAAhzF,UAAAq0F,mBAAA,SAAmBltB,EAAWoH,KAM9BykB,EAAAhzF,UAAAs0F,cAAA,SAAcC,EAAYC,KAM1BxB,EAAAhzF,UAAAy0F,aAAA,SAAaC,EAAWF,KAC1BxB,EAtGA,6dCioBA2B,GA5mBA,SAAAzwF,GAOE,SAAA0wF,EAAYpzD,EAAWnE,EAAW7yB,EAAY+uC,GAA9C,IAAAl1C,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAKm9B,UAAYA,EAOjBn9B,EAAKg5B,UAAYA,EAMjBh5B,EAAKk1C,WAAaA,EAMlBl1C,EAAKwwF,aAAe,EAOpBxwF,EAAKmG,WAAaA,EAMlBnG,EAAKywF,2BAA6B,KAMlCzwF,EAAK0wF,2BAA6B,KAMlC1wF,EAAK2wF,mBAAqB,KAM1B3wF,EAAK4wF,aAAe,GAMpB5wF,EAAK+C,YAAc,GAMnB/C,EAAK6wF,eAAiB,GAMtB7wF,EAAK8wF,yBAA2B,GAMhC9wF,EAAK4T,MAA+D,KAkhBxE,OA1mB4Bm9E,GAAAR,EAAA1wF,GAgG1B0wF,EAAA50F,UAAAq1F,gBAAA,SAAgBC,GACd,IAAM/7C,EAAaz5C,KAAKy5C,WACxB,OAAqB,GAAdA,EACH+7C,EACAA,EAAU3lF,KAAI,SAAU4lF,GACtB,OAAOA,EAAOh8C,MAUtBq7C,EAAA50F,UAAAw1F,2BAAA,SAA2BvsF,EAAiBE,GAK1C,IAJA,IAAM9B,EAASvH,KAAK21F,uBACdr2E,EAAWtf,KAAKo1F,eAChB9tF,EAActH,KAAKsH,YACrBsuF,EAAQtuF,EAAYtG,OACfC,EAAI,EAAGwG,EAAK0B,EAAgBnI,OAAQC,EAAIwG,EAAIxG,GAAKoI,EACxDiW,EAAS,GAAKnW,EAAgBlI,GAC9Bqe,EAAS,GAAKnW,EAAgBlI,EAAI,GAC9BkH,EAAmBZ,EAAQ+X,KAC7BhY,EAAYsuF,KAAWt2E,EAAS,GAChChY,EAAYsuF,KAAWt2E,EAAS,IAGpC,OAAOs2E,GAaTd,EAAA50F,UAAA21F,0BAAA,SACE1sF,EACAC,EACAhI,EACAiI,EACAysF,EACAC,GAEA,IAAMzuF,EAActH,KAAKsH,YACrBsuF,EAAQtuF,EAAYtG,OAClBuG,EAASvH,KAAK21F,uBAChBI,IACF3sF,GAAUC,GAEZ,IAKIpI,EAAG+0F,EAASC,EALZC,EAAa/sF,EAAgBC,GAC7B+sF,EAAahtF,EAAgBC,EAAS,GACpCgtF,EAAYp2F,KAAKo1F,eACnBiB,GAAU,EAGd,IAAKp1F,EAAImI,EAASC,EAAQpI,EAAIG,EAAKH,GAAKoI,EACtC+sF,EAAU,GAAKjtF,EAAgBlI,GAC/Bm1F,EAAU,GAAKjtF,EAAgBlI,EAAI,IACnCg1F,EAAUztF,GAAuBjB,EAAQ6uF,MACzBJ,GACVK,IACF/uF,EAAYsuF,KAAWM,EACvB5uF,EAAYsuF,KAAWO,EACvBE,GAAU,GAEZ/uF,EAAYsuF,KAAWQ,EAAU,GACjC9uF,EAAYsuF,KAAWQ,EAAU,IACxBH,IAAY7uF,GACrBE,EAAYsuF,KAAWQ,EAAU,GACjC9uF,EAAYsuF,KAAWQ,EAAU,GACjCC,GAAU,GAEVA,GAAU,EAEZH,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBJ,EAAUC,EAQZ,OAJKH,GAAUO,GAAYp1F,IAAMmI,EAASC,KACxC/B,EAAYsuF,KAAWM,EACvB5uF,EAAYsuF,KAAWO,GAElBP,GAWTd,EAAA50F,UAAAo2F,uBAAA,SAAuBntF,EAAiBC,EAAQ66B,EAAM56B,EAAQktF,GAC5D,IAAK,IAAIt1F,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC7C,IAAMG,EAAM6iC,EAAKhjC,GACXu1F,EAAax2F,KAAK61F,0BACtB1sF,EACAC,EACAhI,EACAiI,GACA,GACA,GAEFktF,EAAYpqF,KAAKqqF,GACjBptF,EAAShI,EAEX,OAAOgI,GAST0rF,EAAA50F,UAAAizF,WAAA,SAAWn0E,EAAUD,EAASk/B,EAAUyxC,GACtC1vF,KAAKy2F,cAAcz3E,EAAUD,GAE7B,IAII5V,EAAiBqtF,EAAYD,EAAaG,EAC1CttF,EALEiI,EAAO2N,EAAS2iB,UAChBt4B,EAAS2V,EAASwjB,YAClBm0D,EAAe32F,KAAKsH,YAAYtG,OAKtC,OAAQqQ,GACN,KAAKyiB,GACH3qB,EAEI6V,EACAmrB,6BACJusD,EAAe,GACf,IAAMzwD,EAEFjnB,EACA43E,WACJxtF,EAAS,EACT,IAAK,IAAInI,EAAI,EAAGwG,EAAKw+B,EAAMjlC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC9C,IAAM41F,EAAS,GACfztF,EAASpJ,KAAKs2F,uBACZntF,EACAC,EACA68B,EAAMhlC,GACNoI,EACAwtF,GAEFH,EAAavqF,KAAK0qF,GAEpB72F,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBb,OAClBwE,EACAD,EACA13E,EACAi/B,EACAjY,KAEFhmC,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBb,OAClBwE,EACAD,EACA13E,EACA0wE,GAAwBzxC,EACxBjY,KAEF,MACF,KAAKlS,GACL,KAAKA,GACHyiE,EAAc,GACdptF,EACEkI,GAAQyiB,GAEF9U,EACAmrB,6BACFnrB,EAASujB,qBACfn5B,EAASpJ,KAAKs2F,uBACZntF,EACA,EAEE6V,EACAorB,UACF/gC,EACAktF,GAEFv2F,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBb,OAClBwE,EACAJ,EACAv3E,EACAi/B,EACAnY,KAEF9lC,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBb,OAClBwE,EACAJ,EACAv3E,EACA0wE,GAAwBzxC,EACxBnY,KAEF,MACF,KAAKhS,GACL,KAAKA,GACH3qB,EAAkB6V,EAASujB,qBAC3Bi0D,EAAax2F,KAAK61F,0BAChB1sF,EACA,EACAA,EAAgBnI,OAChBqI,GACA,GACA,GAEFrJ,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBb,OAClBwE,EACAH,EACAx3E,EACAi/B,EACArY,KAEF5lC,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBb,OAClBwE,EACAH,EACAx3E,EACA0wE,GAAwBzxC,EACxBrY,KAEF,MACF,KAAK9R,GACH3qB,EAAkB6V,EAASujB,sBAC3Bi0D,EAAax2F,KAAK01F,2BAA2BvsF,EAAiBE,IAE7CstF,IACf32F,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBb,OAClBwE,EACAH,EACAx3E,EACAi/B,EACArY,KAEF5lC,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBb,OAClBwE,EACAH,EACAx3E,EACA0wE,GAAwBzxC,EACxBrY,MAGJ,MACF,KAAK9R,GACH3qB,EAAkB6V,EAASujB,qBAC3BviC,KAAKsH,YAAY6E,KAAKhD,EAAgB,GAAIA,EAAgB,IAC1DqtF,EAAax2F,KAAKsH,YAAYtG,OAE9BhB,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBb,OAClBwE,EACAH,EACAx3E,EACAi/B,IAEFj+C,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBb,OAClBwE,EACAH,EACAx3E,EACA0wE,GAAwBzxC,IAK9Bj+C,KAAK82F,YAAY/3E,IAQnB+1E,EAAA50F,UAAAu2F,cAAA,SAAcz3E,EAAUD,GACtB/e,KAAKg1F,2BAA6B,CAChChC,GAAkBjB,eAClBhzE,EACA,EACAC,GAEFhf,KAAKm1F,aAAahpF,KAAKnM,KAAKg1F,4BAC5Bh1F,KAAKi1F,2BAA6B,CAChCjC,GAAkBjB,eAClBhzE,EACA,EACAC,GAEFhf,KAAKq1F,yBAAyBlpF,KAAKnM,KAAKi1F,6BAM1CH,EAAA50F,UAAA62F,OAAA,WACE,MAAO,CACL5B,aAAcn1F,KAAKm1F,aACnBE,yBAA0Br1F,KAAKq1F,yBAC/B/tF,YAAatH,KAAKsH,cAOtBwtF,EAAA50F,UAAA82F,gCAAA,WACE,IAII/1F,EAJEo0F,EAA2Br1F,KAAKq1F,yBAEtCA,EAAyB4B,UAGzB,IACIC,EACA7lF,EAFEtQ,EAAIs0F,EAAyBr0F,OAG/BG,GAAQ,EACZ,IAAKF,EAAI,EAAGA,EAAIF,IAAKE,GAEnBoQ,GADA6lF,EAAc7B,EAAyBp0F,IAC+B,KAC1D+xF,GAAkBV,aAC5BnxF,EAAQF,EACCoQ,GAAQ2hF,GAAkBjB,iBACnCmF,EAAY,GAAKj2F,EACjBC,EAAgBlB,KAAKq1F,yBAA0Bl0F,EAAOF,GACtDE,GAAQ,IASd2zF,EAAA50F,UAAAq0F,mBAAA,SAAmBltB,EAAWoH,GAC5B,IAAMt2D,EAAQnY,KAAKmY,MACnB,GAAIkvD,EAAW,CACb,IAAM8vB,EAAiB9vB,EAAU4lB,WACjC90E,EAAMkvD,UAAYwjB,GAChBsM,GhIpYwB,agIuY1Bh/E,EAAMkvD,eAAYp3D,EAEpB,GAAIw+D,EAAa,CACf,IAAM2oB,EAAmB3oB,EAAYwe,WACrC90E,EAAMs2D,YAAcoc,GAClBuM,GhIxW0B,QgI0W5B,IAAMC,EAAqB5oB,EAAYsgB,aACvC52E,EAAMs2E,aACmBx+E,IAAvBonF,EAAmCA,EhI1Yb,QgI2YxB,IAAMC,EAAsB7oB,EAAYye,cACxC/0E,EAAM40E,SAAWuK,EACbA,EAAoBvvF,QACpB6a,GACJ,IAAM20E,EAA4B9oB,EAAY0e,oBAC9Ch1E,EAAM60E,eAAiBuK,GhIpYQ,EgIuY/B,IAAMC,EAAsB/oB,EAAY2e,cACxCj1E,EAAMi0E,cACoBn8E,IAAxBunF,EACIA,EhIpYmB,QgIsYzB,IAAMC,EAAmBhpB,EAAY4F,WACrCl8D,EAAMu2D,eACiBz+D,IAArBwnF,EAAiCA,EhIpWT,EgIqW1B,IAAMC,EAAwBjpB,EAAY4e,gBAC1Cl1E,EAAMm0E,gBACsBr8E,IAA1BynF,EACIA,EhItYqB,GgIyYvBv/E,EAAMu2D,UAAY1uE,KAAK+0F,eACzB/0F,KAAK+0F,aAAe58E,EAAMu2D,UAE1B1uE,KAAKk1F,mBAAqB,WAG5B/8E,EAAMs2D,iBAAcx+D,EACpBkI,EAAMs2E,aAAUx+E,EAChBkI,EAAM40E,SAAW,KACjB50E,EAAM60E,oBAAiB/8E,EACvBkI,EAAMi0E,cAAWn8E,EACjBkI,EAAMu2D,eAAYz+D,EAClBkI,EAAMm0E,gBAAar8E,GAQvB6kF,EAAA50F,UAAAy3F,WAAA,SAAWx/E,GACT,IAAMkvD,EAAYlvD,EAAMkvD,UAElBuwB,EAAkB,CAAC5E,GAAkBP,eAAgBprB,GAK3D,MAJyB,iBAAdA,GAETuwB,EAAgBzrF,MAAK,GAEhByrF,GAMT9C,EAAA50F,UAAA23F,YAAA,SAAY1/E,GACVnY,KAAKm1F,aAAahpF,KAAKnM,KAAK83F,aAAa3/E,KAO3C28E,EAAA50F,UAAA43F,aAAA,SAAa3/E,GACX,MAAO,CACL66E,GAAkBN,iBAClBv6E,EAAMs2D,YACNt2D,EAAMu2D,UAAY1uE,KAAKy5C,WACvBthC,EAAMs2E,QACNt2E,EAAMi0E,SACNj0E,EAAMm0E,WACNtsF,KAAKu1F,gBAAgBp9E,EAAM40E,UAC3B50E,EAAM60E,eAAiBhtF,KAAKy5C,aAQhCq7C,EAAA50F,UAAA63F,gBAAA,SAAgB5/E,EAAOw/E,GACrB,IAAMtwB,EAAYlvD,EAAMkvD,UACC,iBAAdA,GAA0BlvD,EAAM6/E,kBAAoB3wB,SAC3Cp3D,IAAdo3D,GACFrnE,KAAKm1F,aAAahpF,KAAKwrF,EAAWjzF,KAAK1E,KAAMmY,IAE/CA,EAAM6/E,iBAAmB3wB,IAQ7BytB,EAAA50F,UAAA+3F,kBAAA,SAAkB9/E,EAAO0/E,GACvB,IAAMppB,EAAct2D,EAAMs2D,YACpBggB,EAAUt2E,EAAMs2E,QAChB1B,EAAW50E,EAAM40E,SACjBC,EAAiB70E,EAAM60E,eACvBZ,EAAWj0E,EAAMi0E,SACjB1d,EAAYv2D,EAAMu2D,UAClB4d,EAAan0E,EAAMm0E,YAEvBn0E,EAAM+/E,oBAAsBzpB,GAC5Bt2D,EAAMggF,gBAAkB1J,GACvB1B,GAAY50E,EAAMigF,kBAChBz2F,EAAOwW,EAAMigF,gBAAiBrL,IACjC50E,EAAMkgF,uBAAyBrL,GAC/B70E,EAAMmgF,iBAAmBlM,GACzBj0E,EAAMogF,kBAAoB7pB,GAC1Bv2D,EAAMqgF,mBAAqBlM,UAEPr8E,IAAhBw+D,GACFopB,EAAYnzF,KAAK1E,KAAMmY,GAEzBA,EAAM+/E,mBAAqBzpB,EAC3Bt2D,EAAMggF,eAAiB1J,EACvBt2E,EAAMigF,gBAAkBrL,EACxB50E,EAAMkgF,sBAAwBrL,EAC9B70E,EAAMmgF,gBAAkBlM,EACxBj0E,EAAMogF,iBAAmB7pB,EACzBv2D,EAAMqgF,kBAAoBlM,IAO9BwI,EAAA50F,UAAA42F,YAAA,SAAY/3E,GACV/e,KAAKg1F,2BAA2B,GAAKh1F,KAAKm1F,aAAan0F,OACvDhB,KAAKg1F,2BAA6B,KAClCh1F,KAAKi1F,2BAA2B,GAAKj1F,KAAKq1F,yBAAyBr0F,OACnEhB,KAAKi1F,2BAA6B,KAClC,IAAMwD,EAAyB,CAACzF,GAAkBV,aAAcvzE,GAChE/e,KAAKm1F,aAAahpF,KAAKssF,GACvBz4F,KAAKq1F,yBAAyBlpF,KAAKssF,IAUrC3D,EAAA50F,UAAAy1F,qBAAA,WACE,IAAK31F,KAAKk1F,qBACRl1F,KAAKk1F,mBAAqBptF,EAAM9H,KAAKu9B,WACjCv9B,KAAK+0F,aAAe,GAAG,CACzB,IAAM9oF,EAASjM,KAAK0K,YAAc1K,KAAK+0F,aAAe,GAAM,EAC5DptF,EAAO3H,KAAKk1F,mBAAoBjpF,EAAOjM,KAAKk1F,oBAGhD,OAAOl1F,KAAKk1F,oBAEhBJ,EA1mBA,CAA4B7B,2gBCsO5ByF,GA/PA,SAAAt0F,GAOE,SAAAu0F,EAAYj3D,EAAWnE,EAAW7yB,EAAY+uC,GAA9C,IAAAl1C,EACEH,EAAAM,KAAA1E,KAAM0hC,EAAWnE,EAAW7yB,EAAY+uC,IAAWz5C,YAMnDuE,EAAKq0F,mBAAqB,KAM1Br0F,EAAK8hE,OAAS,KAMd9hE,EAAKs0F,sBAAmB5oF,EAMxB1L,EAAKu0F,cAAW7oF,EAMhB1L,EAAKw0F,cAAW9oF,EAMhB1L,EAAKy0F,aAAU/oF,EAMf1L,EAAKklF,cAAWx5E,EAMhB1L,EAAK00F,cAAWhpF,EAMhB1L,EAAK20F,cAAWjpF,EAMhB1L,EAAKmlF,qBAAkBz5E,EAMvB1L,EAAKsgD,eAAY50C,EAMjB1L,EAAKqlF,YAAS35E,EAMd1L,EAAKuqF,YAAS7+E,EAOd1L,EAAK40F,6BAA0BlpF,IAgKnC,OA7PiCmpF,GAAAT,EAAAv0F,GAoG/Bu0F,EAAAz4F,UAAAg0F,UAAA,SAAUC,EAAep1E,GACvB,GAAK/e,KAAKqmE,OAAV,CAGArmE,KAAKy2F,cAActC,EAAep1E,GAClC,IAAM5V,EAAkBgrF,EAAc5xD,qBAChCl5B,EAAS8qF,EAAc3xD,YACvB62D,EAAUr5F,KAAKsH,YAAYtG,OAC3B40F,EAAQ51F,KAAK01F,2BAA2BvsF,EAAiBE,GAC/DrJ,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBX,WAClBgH,EACAzD,EACA51F,KAAKqmE,OAELrmE,KAAK84F,SAAW94F,KAAK64F,iBACrB74F,KAAK+4F,SAAW/4F,KAAK64F,iBACrBvyF,KAAK8H,KAAKpO,KAAKg5F,QAAUh5F,KAAK64F,kBAC9B74F,KAAKypF,SACLzpF,KAAKi5F,SACLj5F,KAAKk5F,SACLl5F,KAAK0pF,gBACL1pF,KAAK6kD,UACL,CACG7kD,KAAK4pF,OAAO,GAAK5pF,KAAKy5C,WAAcz5C,KAAK64F,iBACzC74F,KAAK4pF,OAAO,GAAK5pF,KAAKy5C,WAAcz5C,KAAK64F,kBAE5CvyF,KAAK8H,KAAKpO,KAAK8uF,OAAS9uF,KAAK64F,kBAC7B74F,KAAKm5F,0BAEPn5F,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBX,WAClBgH,EACAzD,EACA51F,KAAK44F,mBAEL54F,KAAK84F,SACL94F,KAAK+4F,SACL/4F,KAAKg5F,QACLh5F,KAAKypF,SACLzpF,KAAKi5F,SACLj5F,KAAKk5F,SACLl5F,KAAK0pF,gBACL1pF,KAAK6kD,UACL7kD,KAAK4pF,OACL5pF,KAAK8uF,OACL9uF,KAAKm5F,0BAEPn5F,KAAK82F,YAAY/3E,KAOnB45E,EAAAz4F,UAAA4zF,eAAA,SAAeC,EAAoBh1E,GACjC,GAAK/e,KAAKqmE,OAAV,CAGArmE,KAAKy2F,cAAc1C,EAAoBh1E,GACvC,IAAM5V,EAAkB4qF,EAAmBxxD,qBACrCl5B,EAAS0qF,EAAmBvxD,YAC5B62D,EAAUr5F,KAAKsH,YAAYtG,OAC3B40F,EAAQ51F,KAAK01F,2BAA2BvsF,EAAiBE,GAC/DrJ,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBX,WAClBgH,EACAzD,EACA51F,KAAKqmE,OAELrmE,KAAK84F,SAAW94F,KAAK64F,iBACrB74F,KAAK+4F,SAAW/4F,KAAK64F,iBACrBvyF,KAAK8H,KAAKpO,KAAKg5F,QAAUh5F,KAAK64F,kBAC9B74F,KAAKypF,SACLzpF,KAAKi5F,SACLj5F,KAAKk5F,SACLl5F,KAAK0pF,gBACL1pF,KAAK6kD,UACL,CACG7kD,KAAK4pF,OAAO,GAAK5pF,KAAKy5C,WAAcz5C,KAAK64F,iBACzC74F,KAAK4pF,OAAO,GAAK5pF,KAAKy5C,WAAcz5C,KAAK64F,kBAE5CvyF,KAAK8H,KAAKpO,KAAK8uF,OAAS9uF,KAAK64F,kBAC7B74F,KAAKm5F,0BAEPn5F,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBX,WAClBgH,EACAzD,EACA51F,KAAK44F,mBAEL54F,KAAK84F,SACL94F,KAAK+4F,SACL/4F,KAAKg5F,QACLh5F,KAAKypF,SACLzpF,KAAKi5F,SACLj5F,KAAKk5F,SACLl5F,KAAK0pF,gBACL1pF,KAAK6kD,UACL7kD,KAAK4pF,OACL5pF,KAAK8uF,OACL9uF,KAAKm5F,0BAEPn5F,KAAK82F,YAAY/3E,KAMnB45E,EAAAz4F,UAAA62F,OAAA,WAgBE,OAfA/2F,KAAKg3F,kCAELh3F,KAAK84F,cAAW7oF,EAChBjQ,KAAK+4F,cAAW9oF,EAChBjQ,KAAK44F,mBAAqB,KAC1B54F,KAAKqmE,OAAS,KACdrmE,KAAK64F,sBAAmB5oF,EACxBjQ,KAAKg5F,aAAU/oF,EACfjQ,KAAK4pF,YAAS35E,EACdjQ,KAAKypF,cAAWx5E,EAChBjQ,KAAKi5F,cAAWhpF,EAChBjQ,KAAKk5F,cAAWjpF,EAChBjQ,KAAK0pF,qBAAkBz5E,EACvBjQ,KAAK6kD,eAAY50C,EACjBjQ,KAAK8uF,YAAS7+E,EACP7L,EAAAlE,UAAM62F,OAAMryF,KAAA1E,OAOrB24F,EAAAz4F,UAAAs0F,cAAA,SAAcC,EAAY6E,GACxB,IAAMp6D,EAASu1D,EAAWrK,YACpBx/E,EAAO6pF,EAAWl2C,UAClBg7C,EAAoB9E,EAAWpK,uBAC/B3kB,EAAQ+uB,EAAWnvB,SAAStlE,KAAKy5C,YACjC07B,EAASsf,EAAWte,YAC1Bn2E,KAAK64F,iBAAmBpE,EAAWlvB,cAAcvlE,KAAKy5C,YACtDz5C,KAAK84F,SAAW55D,EAAO,GACvBl/B,KAAK+4F,SAAW75D,EAAO,GACvBl/B,KAAK44F,mBAAqBW,EAC1Bv5F,KAAKqmE,OAASX,EACd1lE,KAAKg5F,QAAUpuF,EAAK,GACpB5K,KAAKypF,SAAWgL,EAAWl8E,aAC3BvY,KAAKi5F,SAAW9jB,EAAO,GAAKn1E,KAAK64F,iBACjC74F,KAAKk5F,SAAW/jB,EAAO,GAAKn1E,KAAK64F,iBACjC74F,KAAK0pF,gBAAkB+K,EAAWxK,oBAClCjqF,KAAK6kD,UAAY4vC,EAAW9lD,cAC5B3uC,KAAK4pF,OAAS6K,EAAWtK,gBACzBnqF,KAAK8uF,OAASlkF,EAAK,GACnB5K,KAAKm5F,wBAA0BG,GAEnCX,EA7PA,CAAiCa,GAAAv0F,ghBC4JjCw0F,GAxJA,SAAAr1F,GAOE,SAAAs1F,EAAYh4D,EAAWnE,EAAW7yB,EAAY+uC,GAC5C,OAAAr1C,EAAAM,KAAA1E,KAAM0hC,EAAWnE,EAAW7yB,EAAY+uC,IAAxCz5C,KA8IJ,OAtJsC25F,GAAAD,EAAAt1F,GAmBpCs1F,EAAAx5F,UAAA05F,qBAAA,SAAqBzwF,EAAiBC,EAAQhI,EAAKiI,GACjD,IAAMgwF,EAAUr5F,KAAKsH,YAAYtG,OAC3B40F,EAAQ51F,KAAK61F,0BACjB1sF,EACAC,EACAhI,EACAiI,GACA,GACA,GAEIwwF,EAA0B,CAC9B7G,GAAkBR,gBAClB6G,EACAzD,GAIF,OAFA51F,KAAKm1F,aAAahpF,KAAK0tF,GACvB75F,KAAKq1F,yBAAyBlpF,KAAK0tF,GAC5Bz4F,GAOTs4F,EAAAx5F,UAAAwzF,eAAA,SAAeC,EAAoB50E,GACjC,IAAM5G,EAAQnY,KAAKmY,MACbs2D,EAAct2D,EAAMs2D,YACpBC,EAAYv2D,EAAMu2D,UACxB,QAAoBz+D,IAAhBw+D,QAA2Cx+D,IAAdy+D,EAAjC,CAGA1uE,KAAKi4F,kBAAkB9/E,EAAOnY,KAAK63F,aACnC73F,KAAKy2F,cAAc9C,EAAoB50E,GACvC/e,KAAKq1F,yBAAyBlpF,KAC5B,CACE6mF,GAAkBN,iBAClBv6E,EAAMs2D,YACNt2D,EAAMu2D,UACNv2D,EAAMs2E,QACNt2E,EAAMi0E,SACNj0E,EAAMm0E,WACN1pE,GlIwC6B,GkIrC/BkwE,IAEF,IAAM3pF,EAAkBwqF,EAAmBpxD,qBACrCl5B,EAASsqF,EAAmBnxD,YAClCxiC,KAAK45F,qBACHzwF,EACA,EACAA,EAAgBnI,OAChBqI,GAEFrJ,KAAKq1F,yBAAyBlpF,KAAK0mF,IACnC7yF,KAAK82F,YAAY/3E,KAOnB26E,EAAAx5F,UAAA0zF,oBAAA,SAAoBC,EAAyB90E,GAC3C,IAAM5G,EAAQnY,KAAKmY,MACbs2D,EAAct2D,EAAMs2D,YACpBC,EAAYv2D,EAAMu2D,UACxB,QAAoBz+D,IAAhBw+D,QAA2Cx+D,IAAdy+D,EAAjC,CAGA1uE,KAAKi4F,kBAAkB9/E,EAAOnY,KAAK63F,aACnC73F,KAAKy2F,cAAc5C,EAAyB90E,GAC5C/e,KAAKq1F,yBAAyBlpF,KAC5B,CACE6mF,GAAkBN,iBAClBv6E,EAAMs2D,YACNt2D,EAAMu2D,UACNv2D,EAAMs2E,QACNt2E,EAAMi0E,SACNj0E,EAAMm0E,WACNn0E,EAAM40E,SACN50E,EAAM60E,gBAER8F,IAMF,IAJA,IAAM7uD,EAAO4vD,EAAwBzpD,UAC/BjhC,EAAkB0qF,EAAwBtxD,qBAC1Cl5B,EAASwqF,EAAwBrxD,YACnCp5B,EAAS,EACJnI,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAC1CmI,EAASpJ,KAAK45F,qBACZzwF,EACAC,EACuB66B,EAAKhjC,GAC5BoI,GAGJrJ,KAAKq1F,yBAAyBlpF,KAAK0mF,IACnC7yF,KAAK82F,YAAY/3E,KAMnB26E,EAAAx5F,UAAA62F,OAAA,WACE,IAAM5+E,EAAQnY,KAAKmY,MASnB,OAPsBlI,MAApBkI,EAAM2hF,YACN3hF,EAAM2hF,YAAc95F,KAAKsH,YAAYtG,QAErChB,KAAKm1F,aAAahpF,KAAK0mF,IAEzB7yF,KAAKg3F,kCACLh3F,KAAKmY,MAAQ,KACN/T,EAAAlE,UAAM62F,OAAMryF,KAAA1E,OAMrB05F,EAAAx5F,UAAA23F,YAAA,SAAY1/E,GAEYlI,MAApBkI,EAAM2hF,YACN3hF,EAAM2hF,YAAc95F,KAAKsH,YAAYtG,SAErChB,KAAKm1F,aAAahpF,KAAK0mF,IACvB16E,EAAM2hF,WAAa95F,KAAKsH,YAAYtG,QAEtCmX,EAAM2hF,WAAa,EACnB11F,EAAAlE,UAAM23F,YAAWnzF,KAAA1E,KAACmY,GAClBnY,KAAKm1F,aAAahpF,KAAK2mF,KAE3B4G,EAtJA,CAAsCF,GAAAv0F,ghBCsPtC80F,GAnPA,SAAA31F,GAOE,SAAA41F,EAAYt4D,EAAWnE,EAAW7yB,EAAY+uC,GAC5C,OAAAr1C,EAAAM,KAAA1E,KAAM0hC,EAAWnE,EAAW7yB,EAAY+uC,IAAxCz5C,KAyOJ,OAjPmCi6F,GAAAD,EAAA51F,GAmBjC41F,EAAA95F,UAAAg6F,sBAAA,SAAsB/wF,EAAiBC,EAAQ66B,EAAM56B,GACnD,IAAM8O,EAAQnY,KAAKmY,MACb+yE,OAA2Bj7E,IAApBkI,EAAMkvD,UACbsH,OAA+B1+D,IAAtBkI,EAAMs2D,YACf0rB,EAAUl2D,EAAKjjC,OACrBhB,KAAKm1F,aAAahpF,KAAK2mF,IACvB9yF,KAAKq1F,yBAAyBlpF,KAAK2mF,IACnC,IAAK,IAAI7xF,EAAI,EAAGA,EAAIk5F,IAAWl5F,EAAG,CAChC,IAAMG,EAAM6iC,EAAKhjC,GACXo4F,EAAUr5F,KAAKsH,YAAYtG,OAC3B40F,EAAQ51F,KAAK61F,0BACjB1sF,EACAC,EACAhI,EACAiI,GACA,GACCslE,GAEGkrB,EAA0B,CAC9B7G,GAAkBR,gBAClB6G,EACAzD,GAEF51F,KAAKm1F,aAAahpF,KAAK0tF,GACvB75F,KAAKq1F,yBAAyBlpF,KAAK0tF,GAC/BlrB,IAGF3uE,KAAKm1F,aAAahpF,KAAK4mF,IACvB/yF,KAAKq1F,yBAAyBlpF,KAAK4mF,KAErC3pF,EAAShI,EAUX,OARI8pF,IACFlrF,KAAKm1F,aAAahpF,KAAKymF,IACvB5yF,KAAKq1F,yBAAyBlpF,KAAKymF,KAEjCjkB,IACF3uE,KAAKm1F,aAAahpF,KAAK0mF,IACvB7yF,KAAKq1F,yBAAyBlpF,KAAK0mF,KAE9BzpF,GAOT4wF,EAAA95F,UAAAmzF,WAAA,SAAWC,EAAgBv0E,GACzB,IAAM5G,EAAQnY,KAAKmY,MACbkvD,EAAYlvD,EAAMkvD,UAClBoH,EAAct2D,EAAMs2D,YAC1B,QAAkBx+D,IAAdo3D,QAA2Cp3D,IAAhBw+D,EAA/B,CAGAzuE,KAAKo6F,uBACLp6F,KAAKy2F,cAAcnD,EAAgBv0E,QACX9O,IAApBkI,EAAMkvD,WACRrnE,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBP,enICM,cmIGFxiF,IAAtBkI,EAAMs2D,aACRzuE,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBN,iBAClBv6E,EAAMs2D,YACNt2D,EAAMu2D,UACNv2D,EAAMs2E,QACNt2E,EAAMi0E,SACNj0E,EAAMm0E,WACNn0E,EAAM40E,SACN50E,EAAM60E,iBAGV,IAAM7jF,EAAkBmqF,EAAe/wD,qBACjCl5B,EAASiqF,EAAe9wD,YACxB62D,EAAUr5F,KAAKsH,YAAYtG,OACjChB,KAAK61F,0BACH1sF,EACA,EACAA,EAAgBnI,OAChBqI,GACA,GACA,GAEF,IAAMgxF,EAAoB,CAACrH,GAAkBf,OAAQoH,GACrDr5F,KAAKm1F,aAAahpF,KAAK2mF,GAAsBuH,GAC7Cr6F,KAAKq1F,yBAAyBlpF,KAAK2mF,GAAsBuH,QACjCpqF,IAApBkI,EAAMkvD,YACRrnE,KAAKm1F,aAAahpF,KAAKymF,IACvB5yF,KAAKq1F,yBAAyBlpF,KAAKymF,UAEX3iF,IAAtBkI,EAAMs2D,cACRzuE,KAAKm1F,aAAahpF,KAAK0mF,IACvB7yF,KAAKq1F,yBAAyBlpF,KAAK0mF,KAErC7yF,KAAK82F,YAAY/3E,KAOnBi7E,EAAA95F,UAAAk0F,YAAA,SAAYC,EAAiBt1E,GAC3B,IAAM5G,EAAQnY,KAAKmY,MACbkvD,EAAYlvD,EAAMkvD,UAClBoH,EAAct2D,EAAMs2D,YAC1B,QAAkBx+D,IAAdo3D,QAA2Cp3D,IAAhBw+D,EAA/B,CAGAzuE,KAAKo6F,uBACLp6F,KAAKy2F,cAAcpC,EAAiBt1E,QACZ9O,IAApBkI,EAAMkvD,WACRrnE,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBP,enIvDM,cmI2DFxiF,IAAtBkI,EAAMs2D,aACRzuE,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBN,iBAClBv6E,EAAMs2D,YACNt2D,EAAMu2D,UACNv2D,EAAMs2E,QACNt2E,EAAMi0E,SACNj0E,EAAMm0E,WACNn0E,EAAM40E,SACN50E,EAAM60E,iBAGV,IAAM/oD,EAAOowD,EAAgBjqD,UACvBjhC,EAAkBkrF,EAAgBlqD,6BAClC9gC,EAASgrF,EAAgB7xD,YAC/BxiC,KAAKk6F,sBACH/wF,EACA,EAC8B86B,EAC9B56B,GAEFrJ,KAAK82F,YAAY/3E,KAOnBi7E,EAAA95F,UAAA8zF,iBAAA,SAAiBC,EAAsBl1E,GACrC,IAAM5G,EAAQnY,KAAKmY,MACbkvD,EAAYlvD,EAAMkvD,UAClBoH,EAAct2D,EAAMs2D,YAC1B,QAAkBx+D,IAAdo3D,QAA2Cp3D,IAAhBw+D,EAA/B,CAGAzuE,KAAKo6F,uBACLp6F,KAAKy2F,cAAcxC,EAAsBl1E,QACjB9O,IAApBkI,EAAMkvD,WACRrnE,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBP,enIlGM,cmIsGFxiF,IAAtBkI,EAAMs2D,aACRzuE,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBN,iBAClBv6E,EAAMs2D,YACNt2D,EAAMu2D,UACNv2D,EAAMs2E,QACNt2E,EAAMi0E,SACNj0E,EAAMm0E,WACNn0E,EAAM40E,SACN50E,EAAM60E,iBAOV,IAJA,IAAM/mD,EAAQguD,EAAqB2C,WAC7BztF,EAAkB8qF,EAAqB9pD,6BACvC9gC,EAAS4qF,EAAqBzxD,YAChCp5B,EAAS,EACJnI,EAAI,EAAGwG,EAAKw+B,EAAMjlC,OAAQC,EAAIwG,IAAMxG,EAC3CmI,EAASpJ,KAAKk6F,sBACZ/wF,EACAC,EACA68B,EAAMhlC,GACNoI,GAGJrJ,KAAK82F,YAAY/3E,KAMnBi7E,EAAA95F,UAAA62F,OAAA,WACE/2F,KAAKg3F,kCACLh3F,KAAKmY,MAAQ,KAKb,IAAMupB,EAAY1hC,KAAK0hC,UACvB,GAAkB,IAAdA,EAEF,IADA,IAAMp6B,EAActH,KAAKsH,YAChBrG,EAAI,EAAGwG,EAAKH,EAAYtG,OAAQC,EAAIwG,IAAMxG,EACjDqG,EAAYrG,GAAKwkC,GAAKn+B,EAAYrG,GAAIygC,GAG1C,OAAOt9B,EAAAlE,UAAM62F,OAAMryF,KAAA1E,OAMrBg6F,EAAA95F,UAAAk6F,qBAAA,WACE,IAAMjiF,EAAQnY,KAAKmY,WAEDlI,IADAkI,EAAMkvD,WAEtBrnE,KAAK+3F,gBAAgB5/E,EAAOnY,KAAK23F,iBAET1nF,IAAtBkI,EAAMs2D,aACRzuE,KAAKi4F,kBAAkB9/E,EAAOnY,KAAK63F,cAGzCmC,EAjPA,CAAmCR,GAAAv0F,wFCFnC,IAAAq1F,GAEQ,OCAF,SAAUC,GAAcC,EAAUrxF,EAAiBC,EAAQhI,EAAKiI,GACpE,IAKUpI,EAAGw5F,EAAKC,EAAKtvF,EAAII,EAAImvF,EAAKC,EAAKC,EAAKC,EAL1CC,EAAa3xF,EACb4xF,EAAW5xF,EACX6xF,EAAS,EACTj7E,EAAI,EACJqoB,EAAQj/B,EAEZ,IAAKnI,EAAImI,EAAQnI,EAAIG,EAAKH,GAAKoI,EAAQ,CACrC,IAAMgC,EAAKlC,EAAgBlI,GACrBwK,EAAKtC,EAAgBlI,EAAI,QACpBgP,IAAP7E,IACFyvF,EAAMxvF,EAAKD,EACX0vF,EAAMrvF,EAAKD,EACXkvF,EAAMp0F,KAAKutB,KAAKgnE,EAAMA,EAAMC,EAAMA,QACtB7qF,IAAR0qF,IACF36E,GAAKy6E,EACEn0F,KAAK40F,MAAMP,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IACvCF,IACLx6E,EAAIi7E,IACNA,EAASj7E,EACT+6E,EAAa1yD,EACb2yD,EAAW/5F,GAEb+e,EAAI,EACJqoB,EAAQpnC,EAAIoI,IAGhBoxF,EAAMC,EACNC,EAAME,EACND,EAAME,GAER1vF,EAAKC,EACLG,EAAKC,EAGP,OADAuU,GAAK06E,GACMO,EAAS,CAAC5yD,EAAOpnC,GAAK,CAAC85F,EAAYC,ieClBnCG,GAAa,CACxB/1E,KAAQ,EACRhkB,IAAO,EACPqJ,OAAU,GACV4+B,MAAS,EACThB,MAAS,EACTqV,IAAO,EACP09C,OAAU,GACVC,QAAW,GACXC,WAAc,GACdC,YAAe,GACfC,OAAU,GA6kBZC,GA1kBA,SAAAr3F,GAOE,SAAAs3F,EAAYh6D,EAAWnE,EAAW7yB,EAAY+uC,GAA9C,IAAAl1C,EACEH,EAAAM,KAAA1E,KAAM0hC,EAAWnE,EAAW7yB,EAAY+uC,IAAWz5C,YAMnDuE,EAAKo3F,QAAU,KAMfp3F,EAAKorF,MAAQ,GAMbprF,EAAKq3F,aAAe,EAMpBr3F,EAAKs3F,aAAe,EAMpBt3F,EAAKu3F,yBAAsB7rF,EAM3B1L,EAAKw3F,cAAgB,EAMrBx3F,EAAKy3F,eAAiB,KAKtBz3F,EAAK03F,WAAa,GAMlB13F,EAAK23F,iBAAmB,KAKxB33F,EAAK43F,aAAe,GAMpB53F,EAAK63F,WAA8D,GAKnE73F,EAAK83F,WAAa,GAMlB93F,EAAK+3F,SAAW,GAMhB/3F,EAAKg4F,SAAW,GAMhBh4F,EAAKi4F,WAAa,GAOlBj4F,EAAK40F,6BAA0BlpF,IAkenC,OAxkBgCwsF,GAAAf,EAAAt3F,GA4G9Bs3F,EAAAx7F,UAAA62F,OAAA,WACE,IAAM5B,EAAe/wF,EAAAlE,UAAM62F,OAAMryF,KAAA1E,MAIjC,OAHAm1F,EAAakH,WAAar8F,KAAKq8F,WAC/BlH,EAAa8G,WAAaj8F,KAAKi8F,WAC/B9G,EAAagH,aAAen8F,KAAKm8F,aAC1BhH,GAOTuG,EAAAx7F,UAAAo0F,SAAA,SAASt1E,EAAUD,GACjB,IAAM29E,EAAY18F,KAAKg8F,eACjBW,EAAc38F,KAAKk8F,iBACnBU,EAAY58F,KAAKo8F,WACvB,GAAmB,KAAfp8F,KAAK2vF,OAAiBiN,IAAeF,GAAcC,GAAvD,CAIA,IAAMr1F,EAActH,KAAKsH,YACrBnG,EAAQmG,EAAYtG,OAElB67F,EAAe79E,EAAS2iB,UAC1Bx4B,EAAkB,KAClBE,EAAS2V,EAASwjB,YAEtB,GACEo6D,EAAUE,YAAcxC,IACvBuC,GAAgB/oE,IACf+oE,GAAgB/oE,IAChB+oE,GAAgB/oE,IAChB+oE,GAAgB/oE,GAsDb,CACL,IAAIipE,EAAiBH,EAAUriD,SAAW,KAAO,GACjD,OAAQsiD,GACN,KAAK/oE,GACL,KAAKA,GACH3qB,EAEI6V,EACAujB,qBACJ,MACF,KAAKzO,GACH3qB,EAEI6V,EACA+3C,kBACJ,MACF,KAAKjjC,GACH3qB,EAEI6V,EACAwsB,YACJ,MACF,KAAK1X,GACH3qB,EAEI6V,EACA64C,mBACJxuD,EAAS,EACT,MACF,KAAKyqB,GACH3qB,EAEI6V,EACAqrB,uBACCuyD,EAAUriD,UACbwiD,EAAe5wF,KAAKhD,EAAgB,GAAKnJ,KAAK0K,YAEhDrB,EAAS,EACT,MACF,KAAKyqB,GACH,IAAMkpE,EAEFh+E,EACAi+E,wBACJ9zF,EAAkB,GAClB,IAASoW,EAAI,EAAG9X,EAAKu1F,EAAeh8F,OAAQue,EAAI9X,EAAI8X,GAAK,EAClDq9E,EAAUriD,UACbwiD,EAAe5wF,KAAK6wF,EAAez9E,EAAI,GAAKvf,KAAK0K,YAEnDvB,EAAgBgD,KAAK6wF,EAAez9E,GAAIy9E,EAAez9E,EAAI,IAE7D,GAA+B,IAA3BpW,EAAgBnI,OAClB,OAEFqI,EAAS,EAKb,IADMjI,EAAMpB,KAAK01F,2BAA2BvsF,EAAiBE,MACjDlI,EACV,OAEF,GACE47F,IACC37F,EAAMD,GAAS,GAAMgI,EAAgBnI,OAASqI,EAC/C,CACA,IAAI6zF,EAAM/7F,EAAQ,EAClB47F,EAAiBA,EAAezrD,QAAO,SAAC1rB,EAAG3kB,GACzC,IAAMuwE,EACJlqE,EAAwB,GAAX41F,EAAMj8F,MAAYkI,EAAgBlI,EAAIoI,IACnD/B,EAAwB,GAAX41F,EAAMj8F,GAAS,KAAOkI,EAAgBlI,EAAIoI,EAAS,GAIlE,OAHKmoE,KACD0rB,EAEG1rB,KAIXxxE,KAAKm9F,mBAEDP,EAAUQ,gBAAkBR,EAAUS,oBACxCr9F,KAAKu0F,mBACHqI,EAAUQ,eACVR,EAAUS,kBAERT,EAAUQ,iBACZp9F,KAAK+3F,gBAAgB/3F,KAAKmY,MAAOnY,KAAK23F,YACtC33F,KAAKq1F,yBAAyBlpF,KAAKnM,KAAK23F,WAAW33F,KAAKmY,SAEtDykF,EAAUS,mBACZr9F,KAAKi4F,kBAAkBj4F,KAAKmY,MAAOnY,KAAK63F,aACxC73F,KAAKq1F,yBAAyBlpF,KAAKnM,KAAK83F,aAAa93F,KAAKmY,UAI9DnY,KAAKy2F,cAAcz3E,EAAUD,GAG7B,IAAIiG,EAAU43E,EAAU53E,QACxB,GACEA,GAAWnC,KACV+5E,EAAU92E,MAAM,GAAK,GAAK82E,EAAU92E,MAAM,GAAK,GAChD,CACA,IAAIw3E,EAAKV,EAAU53E,QAAQ,GACvB67D,EAAK+b,EAAU53E,QAAQ,GACvBu4E,EAAKX,EAAU53E,QAAQ,GACvBw4E,EAAKZ,EAAU53E,QAAQ,GACvB43E,EAAU92E,MAAM,GAAK,IACvB+6D,GAAMA,EACN2c,GAAMA,GAEJZ,EAAU92E,MAAM,GAAK,IACvBw3E,GAAMA,EACNC,GAAMA,GAERv4E,EAAU,CAACs4E,EAAIzc,EAAI0c,EAAIC,GAMzB,IAAMC,EAAaz9F,KAAKy5C,WACxBz5C,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBX,WAClBlxF,EACAC,EACA,KACA8/B,IACAA,IACAA,IACA,EACA,EACA,EACAlhC,KAAK87F,oBACL97F,KAAK+7F,cACL,CAAC,EAAG,GACJ76D,IACAlhC,KAAKm5F,wBACLn0E,GAAWnC,GACPA,GACAmC,EAAQnV,KAAI,SAAUwwE,GACpB,OAAOA,EAAIod,OAEfb,EAAUQ,iBACVR,EAAUS,iBACZr9F,KAAK2vF,MACL3vF,KAAKs8F,SACLt8F,KAAKw8F,WACLx8F,KAAKu8F,SACLv8F,KAAK47F,aACL57F,KAAK67F,aACLkB,IAEF,IAAMj3E,EAAQ,EAAI23E,EAClBz9F,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBX,WAClBlxF,EACAC,EACA,KACA8/B,IACAA,IACAA,IACA,EACA,EACA,EACAlhC,KAAK87F,oBACL97F,KAAK+7F,cACL,CAACj2E,EAAOA,GACRob,IACAlhC,KAAKm5F,wBACLn0E,IACE43E,EAAUQ,iBACVR,EAAUS,iBACZr9F,KAAK2vF,MACL3vF,KAAKs8F,SACLt8F,KAAKw8F,WACLx8F,KAAKu8F,SACLv8F,KAAK47F,aACL57F,KAAK67F,aACLkB,IAGF/8F,KAAK82F,YAAY/3E,OA3OjB,CACA,IAAKlT,GAAW7L,KAAK21F,uBAAwB32E,EAASvG,aACpD,OAEF,IAAIwrB,OAAI,EAER,GADA96B,EAAkB6V,EAASujB,qBACvBs6D,GAAgB/oE,GAClBmQ,EAAO,CAAC96B,EAAgBnI,aACnB,GAAI67F,GAAgB/oE,GACzBmQ,EACEjlB,EACAorB,eACG,GAAIyyD,GAAgB/oE,GACzBmQ,EAA+DjlB,EAC5DorB,UACAriC,MAAM,EAAG,QACP,GAAI80F,GAAgB/oE,GAA4B,CACrD,IAAMmS,EAEFjnB,EACA43E,WACJ3yD,EAAO,GACP,IAAK,IAAI1kB,EAAI,EAAG9X,EAAKw+B,EAAMjlC,OAAQue,EAAI9X,IAAM8X,EAC3C0kB,EAAK93B,KAAK85B,EAAM1mB,GAAG,IAGvBvf,KAAKy2F,cAAcz3E,EAAUD,GAI7B,IAHA,IAAM2+E,EAAYd,EAAUc,UACxBC,EAAa,EACbC,OAAO,EACF3oC,EAAI,EAAG4oC,EAAK55D,EAAKjjC,OAAQi0D,EAAI4oC,IAAM5oC,EAAG,CAC7C,GAAiBhlD,MAAbytF,EAAwB,CAC1B,IAAMpjB,EAAQigB,GACZqC,EAAUpC,SACVrxF,EACAw0F,EACA15D,EAAKgxB,GACL5rD,GAEFs0F,EAAarjB,EAAM,GACnBsjB,EAAUtjB,EAAM,QAEhBsjB,EAAU35D,EAAKgxB,GAEjB,IAAK,IAAI11C,EAAIo+E,EAAYp+E,EAAIq+E,EAASr+E,GAAKlW,EACzC/B,EAAY6E,KAAKhD,EAAgBoW,GAAIpW,EAAgBoW,EAAI,IAE3D,IAAMne,EAAMkG,EAAYtG,OACxB28F,EAAa15D,EAAKgxB,GAClBj1D,KAAK89F,WAAW38F,EAAOC,GACvBD,EAAQC,EAEVpB,KAAK82F,YAAY/3E,MA8LrB28E,EAAAx7F,UAAAi9F,gBAAA,WACE,IAAMR,EAAc38F,KAAKk8F,iBACnBU,EAAY58F,KAAKo8F,WACjBM,EAAY18F,KAAKg8F,eAEjB+B,EAAY/9F,KAAKw8F,WACnBG,IACIoB,KAAa/9F,KAAKm8F,eACtBn8F,KAAKm8F,aAAa4B,GAAa,CAC7BtvB,YAAakuB,EAAYluB,YACzBggB,QAASkO,EAAYlO,QACrBzB,eAAgB2P,EAAY3P,eAC5Bte,UAAWiuB,EAAYjuB,UACvB0d,SAAUuQ,EAAYvQ,SACtBE,WAAYqQ,EAAYrQ,WACxBS,SAAU4P,EAAY5P,YAI5B,IAAMiR,EAAUh+F,KAAKs8F,SACf0B,KAAWh+F,KAAKq8F,aACpBr8F,KAAKq8F,WAAW2B,GAAW,CACzB55E,KAAMw4E,EAAUx4E,KAChBs5E,UAAWd,EAAUc,WtI5TG,SsI6TxBO,aAAcrB,EAAUqB,ctIvTG,SsIwT3Bn4E,MAAO82E,EAAU92E,QAGrB,IAAMo4E,EAAUl+F,KAAKu8F,SACjBG,IACIwB,KAAWl+F,KAAKi8F,aACpBj8F,KAAKi8F,WAAWiC,GAAW,CACzB72B,UAAWq1B,EAAUr1B,cAW7Bq0B,EAAAx7F,UAAA49F,WAAA,SAAW38F,EAAOC,GAChB,IAAMu7F,EAAc38F,KAAKk8F,iBACnBU,EAAY58F,KAAKo8F,WAEjB2B,EAAY/9F,KAAKw8F,WACjBwB,EAAUh+F,KAAKs8F,SACf4B,EAAUl+F,KAAKu8F,SACrBv8F,KAAKm9F,kBAEL,IAAM1jD,EAAaz5C,KAAKy5C,WAClB0kD,EAAWhD,GAAWyB,EAAUqB,cAEhC3vD,EAAUtuC,KAAK67F,aAAepiD,EAC9Bh2B,EAAOzjB,KAAK2vF,MACZtD,EAAcsQ,EACfA,EAAYjuB,UAAYpoE,KAAKspB,IAAIgtE,EAAU92E,MAAM,IAAO,EACzD,EAEJ9lB,KAAKm1F,aAAahpF,KAAK,CACrB6mF,GAAkBZ,WAClBjxF,EACAC,EACA+8F,EACAvB,EAAUriD,SACV2jD,EACAtB,EAAUpC,SACV/gD,EACAnL,EACAyvD,EACA1R,EAAc5yC,EACdh2B,EACAu6E,EACA,IAEFh+F,KAAKq1F,yBAAyBlpF,KAAK,CACjC6mF,GAAkBZ,WAClBjxF,EACAC,EACA+8F,EACAvB,EAAUriD,SACV2jD,EACAtB,EAAUpC,SACV,EACAlsD,EACAyvD,EACA1R,EACA5oE,EACAu6E,EACA,EAAIvkD,KAQRiiD,EAAAx7F,UAAAy0F,aAAA,SAAaC,EAAW0E,GACtB,IAAIsD,EAAWF,EAAWC,EAC1B,GAAK/H,EAEE,CACL,IAAMwJ,EAAgBxJ,EAAUhJ,UAC3BwS,IAIH1B,EAAY18F,KAAKg8F,kBAEfU,EAA6D,GAC7D18F,KAAKg8F,eAAiBU,GAExBA,EAAUr1B,UAAYwjB,GACpBuT,EAAcnR,YtIlcQ,UsIybxByP,EAAY,KACZ18F,KAAKg8F,eAAiBU,GAYxB,IAAM2B,EAAkBzJ,EAAU7I,YAClC,GAAKsS,EAGE,EACL1B,EAAc38F,KAAKk8F,oBAEjBS,EAAiE,GACjE38F,KAAKk8F,iBAAmBS,GAE1B,IAAM5P,EAAWsR,EAAgBnR,cAC3BF,EAAiBqR,EAAgBlR,oBACjCze,EAAY2vB,EAAgBhqB,WAC5BiY,EAAa+R,EAAgBhR,gBACnCsP,EAAYlO,QAAU4P,EAAgBtP,ctI9chB,QsI+ctB4N,EAAY5P,SAAWA,EAAWA,EAAShlF,QAAU6a,GACrD+5E,EAAY3P,oBACS/8E,IAAnB+8E,EtIrc2B,EsIqc4BA,EACzD2P,EAAYvQ,SAAWiS,EAAgBjR,etIhchB,QsIicvBuP,EAAYjuB,eACIz+D,IAAdy+D,EtI9ZsB,EsI8ZuBA,EAC/CiuB,EAAYrQ,gBACKr8E,IAAfq8E,EtI9buB,GsI8bwBA,EACjDqQ,EAAYluB,YAAcoc,GACxBwT,EAAgBpR,YtI1bQ,asIoa1B0P,EAAc,KACd38F,KAAKk8F,iBAAmBS,EAyB1BC,EAAY58F,KAAKo8F,WACjB,IAAMh4E,EAAOwwE,EAAU0J,WtIzeF,kBsI0erBj7E,GAAae,GACb,IAAMm6E,EAAY3J,EAAUzK,gBAC5ByS,EAAUriD,SAAWq6C,EAAU4J,cAC/B5B,EAAUx4E,KAAOA,EACjBw4E,EAAUpC,SAAW5F,EAAU6J,cAC/B7B,EAAUE,UAAYlI,EAAU8J,eAChC9B,EAAUc,UAAY9I,EAAU+J,eAChC/B,EAAUqB,aACRrJ,EAAUgK,mBtI5biB,SsI6b7BhC,EAAUQ,eAAiBxI,EAAUiK,oBACrCjC,EAAUS,iBAAmBzI,EAAUkK,sBACvClC,EAAU53E,QAAU4vE,EAAUmK,cAAgBl8E,GAC9C+5E,EAAU92E,WAAsB7V,IAAdsuF,EAA0B,CAAC,EAAG,GAAKA,EAErD,IAAMS,EAAcpK,EAAUqK,aACxBC,EAActK,EAAUuK,aACxBC,EAAqBxK,EAAU3K,oBAC/BoV,EAAezK,EAAUjmD,cAC/B3uC,KAAK2vF,MAAQiF,EAAU/E,WAAa,GACpC7vF,KAAK47F,kBAA+B3rF,IAAhB+uF,EAA4B,EAAIA,EACpDh/F,KAAK67F,kBAA+B5rF,IAAhBivF,EAA4B,EAAIA,EACpDl/F,KAAK87F,yBACoB7rF,IAAvBmvF,GAA2CA,EAC7Cp/F,KAAK+7F,mBAAiC9rF,IAAjBovF,EAA6B,EAAIA,EAEtDr/F,KAAKw8F,WAAaG,GACqB,iBAA3BA,EAAYluB,YAChBkuB,EAAYluB,YACZpsE,EAAOs6F,EAAYluB,cACvBkuB,EAAYlO,QACZkO,EAAY3P,eACZ,IACA2P,EAAYjuB,UACZiuB,EAAYvQ,SACZuQ,EAAYrQ,WACZ,IACAqQ,EAAY5P,SAASjmF,OACrB,IACA,GACJ9G,KAAKs8F,SACHM,EAAUx4E,KACVw4E,EAAU92E,OACT82E,EAAUc,WAAa,MACvBd,EAAUqB,cAAgB,KAC7Bj+F,KAAKu8F,SAAWG,EACkB,iBAAvBA,EAAUr1B,UACfq1B,EAAUr1B,UACV,IAAMhlE,EAAOq6F,EAAUr1B,WACzB,QA/FJrnE,KAAK2vF,MAAQ,GAiGf3vF,KAAKm5F,wBAA0BG,GAEnCoC,EAxkBA,CAAgClC,GAAAv0F,SC/B1Bq6F,GAAqB,CACzBC,OAAUC,GAAAv6F,QACVw6F,QAAWjG,GAAAv0F,QACX1B,MAASm8F,GAAAz6F,QACToxD,WAAcspC,GAAA16F,QACdwkC,QAAW+1D,GAAAv6F,QACX26F,KAAQC,GAAA56F,SAqFV66F,GAlFA,WAOE,SAAAC,EAAYr+D,EAAWnE,EAAW7yB,EAAY+uC,GAK5Cz5C,KAAKggG,WAAat+D,EAMlB1hC,KAAKigG,WAAa1iE,EAMlBv9B,KAAKw5C,YAAcC,EAMnBz5C,KAAKkgG,YAAcx1F,EAMnB1K,KAAKmgG,kBAAoB,GA4C7B,OAtCEJ,EAAA7/F,UAAA62F,OAAA,WACE,IAAMqJ,EAAsB,GAC5B,IAAK,IAAMC,KAAQrgG,KAAKmgG,kBAAmB,CACzCC,EAAoBC,GAAQD,EAAoBC,IAAS,GACzD,IAAMC,EAAWtgG,KAAKmgG,kBAAkBE,GACxC,IAAK,IAAME,KAAcD,EAAU,CACjC,IAAME,EAAqBF,EAASC,GAAYxJ,SAChDqJ,EAAoBC,GAAME,GAAcC,GAG5C,OAAOJ,GAQTL,EAAA7/F,UAAAugG,WAAA,SAAWnpF,EAAQopF,GACjB,IAAMC,OAAuB1wF,IAAXqH,EAAuBA,EAAOwkC,WAAa,IACzD8kD,EAAU5gG,KAAKmgG,kBAAkBQ,QACrB1wF,IAAZ2wF,IACFA,EAAU,GACV5gG,KAAKmgG,kBAAkBQ,GAAaC,GAEtC,IAAIC,EAASD,EAAQF,QACNzwF,IAAX4wF,IAEFA,EAAS,IAAIC,EADOxB,GAAmBoB,IAErC1gG,KAAKggG,WACLhgG,KAAKigG,WACLjgG,KAAKkgG,YACLlgG,KAAKw5C,aAEPonD,EAAQF,GAAeG,GAEzB,OAAOA,GAEXd,EAhFA,ujBC8LAgB,GAxMA,SAAA38F,GAIE,SAAA48F,EAAY5oF,GAAZ,IAAA7T,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAK25C,OAAQ,EAGb35C,EAAK08F,wBAA0B18F,EAAK28F,mBAAmB9sF,KAAK7P,GAM5DA,EAAK48F,OAAS/oF,EAKd7T,EAAK68F,uBAAyB,OA6KlC,OAtM4BC,GAAAL,EAAA58F,GAkC1B48F,EAAA9gG,UAAAsb,YAAA,SAAYC,GACV,OAAOvZ,KAOT8+F,EAAA9gG,UAAA0b,QAAA,SAAQH,GACN,OAAO,MASTulF,EAAA9gG,UAAA8b,aAAA,SAAaH,GACX,OAAO3Z,KAUT8+F,EAAA9gG,UAAA+b,YAAA,SAAYJ,EAAYhb,GACtB,OAAOqB,KAST8+F,EAAA9gG,UAAAohG,mBAAA,SAAmBC,EAAOnnF,EAAM2Y,GACzBwuE,EAAMnnF,KACTmnF,EAAMnnF,GAAQ,IAEhBmnF,EAAMnnF,GAAM2Y,EAAKsxC,UAAUvoB,YAAc/oB,GAa3CiuE,EAAA9gG,UAAAshG,uBAAA,SAAuB/6F,EAAQ+W,EAAY+jF,GACzC,OAOE,SAAUnnF,EAAM85D,GACd,IAAMxqE,EAAW1J,KAAKshG,mBAAmBltF,KAAKpU,KAAMuhG,EAAOnnF,GAC3D,OAAO3T,EAAOkyE,kBAAkBn7D,EAAYpD,EAAM85D,EAAWxqE,IAC7D0K,KAAKpU,OAaXghG,EAAA9gG,UAAAse,2BAAA,SACE9Y,EACAmW,EACA4C,EACA/U,EACA2V,KAcF2hF,EAAA9gG,UAAAioB,eAAA,SAAe1M,EAAOI,EAAY4C,GAChC,OAAO,MAMTuiF,EAAA9gG,UAAAuhG,SAAA,WACE,OAAOzhG,KAAKmhG,QAOdH,EAAA9gG,UAAAigD,mBAAA,aAOA6gD,EAAA9gG,UAAAghG,mBAAA,SAAmB/tF,GAC2CA,EAAMtS,OACxDya,aAAekqD,IACvBxlE,KAAK0hG,2BAWTV,EAAA9gG,UAAAyhG,UAAA,SAAUj8B,GACR,IAAIk8B,EAAal8B,EAAMpqD,WAQvB,OAPIsmF,GAAcp8B,IAAqBo8B,GAAcp8B,IACnDE,EAAM1hE,iBAAiBgQ,GAAkBhU,KAAKihG,yBAE5CW,GAAcp8B,KAChBE,EAAMryC,OACNuuE,EAAal8B,EAAMpqD,YAEdsmF,GAAcp8B,IAMvBw7B,EAAA9gG,UAAAwhG,wBAAA,WACE,IAAMtpF,EAAQpY,KAAKyhG,WACfrpF,EAAMI,cAAgBJ,EAAMc,kBAAoBc,IAClD5B,EAAMjD,WAOV6rF,EAAA9gG,UAAAE,gBAAA,kBACSJ,KAAKmhG,OACZ/8F,EAAAlE,UAAME,gBAAesE,KAAA1E,OAEzBghG,EAtMA,CAA4BnqF,GAAA5R,meCaxB48F,GAAe,KAcnB,IAkVAC,GAlVA,SAAA19F,GAIE,SAAA29F,EAAY3pF,GAAZ,IAAA7T,EACEH,EAAAM,KAAA1E,KAAMoY,IAAMpY,YAMZuE,EAAKuiB,UAAY,KAMjBviB,EAAKy9F,mBAQLz9F,EAAK09F,cnK5BA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GmKoCrB19F,EAAK29F,enKpCA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GmK4CrB39F,EAAKwc,sBnK5CA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GmKiDrBxc,EAAKyc,QAAU,KAKfzc,EAAK49F,iBAAkB,EAMvB59F,EAAK69F,cAAgB,KAMrB79F,EAAKsX,WAAa,OAiRtB,OAhVkCwmF,GAAAN,EAAA39F,GAwEhC29F,EAAA7hG,UAAAiuE,aAAA,SAAazI,EAAO48B,EAAKC,GApF3B,IACQrgF,EAyFA3gB,EALCsgG,MApFD3/E,EAASlb,SAASC,cAAc,WAC/BgF,MAAQ,EACfiW,EAAOhW,OAAS,EAChB21F,GAAe3/E,EAAOE,WAAW,OAoF/By/E,GAAaW,UAAU,EAAG,EAAG,EAAG,GAGhC,IACEX,GAAav7E,UAAUo/C,EAAO48B,EAAKC,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACvDhhG,EAAOsgG,GAAa1zB,aAAa,EAAG,EAAG,EAAG,GAAG5sE,KAC7C,MAAOkhG,GACP,OAAO,KAET,OAAOlhG,GAOTwgG,EAAA7hG,UAAA6X,cAAA,SAAc8D,GACZ,IACI3E,EADUlX,KAAKyhG,WACI1pF,gBAIvB,MAH0B,mBAAfb,IACTA,EAAaA,EAAW2E,EAAW1B,UAAUzP,aAExCwM,QAAcjH,GAUvB8xF,EAAA7hG,UAAAwiG,aAAA,SAAa7hG,EAAQuE,EAAWgS,EAASurF,GACvC,IACI77E,EAAW9F,EADT4hF,EAAiB5iG,KAAKyhG,WAAWzpF,eAGrCnX,GACAA,EAAO+W,YAAcgrF,GACI,KAAzB/hG,EAAOqG,MAAMkQ,SACD,IAAZA,KACEurF,GACC9hG,EAAOqG,MAAM27F,iBACZlhG,EACEqO,GAAQnP,EAAOqG,MAAM27F,iBACrB7yF,GAAQ2yF,QAGRzgF,EAASrhB,EAAO07D,6BACAumC,oBACpB9hF,EAAUkB,EAAOE,WAAW,QAchC,GAXIpB,GAAWA,EAAQkB,OAAOhb,MAAM9B,YAAcA,GAEhDpF,KAAK8mB,UAAYjmB,EACjBb,KAAKghB,QAAUA,EACfhhB,KAAKmiG,iBAAkB,GACdniG,KAAKmiG,kBAEdniG,KAAK8mB,UAAY,KACjB9mB,KAAKghB,QAAU,KACfhhB,KAAKmiG,iBAAkB,IAEpBniG,KAAK8mB,UAAW,EACnBA,EAAY9f,SAASC,cAAc,QACzB2Q,UAAYgrF,EACtB,IAAI17F,EAAQ4f,EAAU5f,MACtBA,EAAMge,SAAW,WACjBhe,EAAM+E,MAAQ,OACd/E,EAAMgF,OAAS,OACXy2F,IACFz7F,EAAM27F,gBAAkBF,GAG1B,IAAMzgF,GADNlB,EAAUa,MACaK,OACvB4E,EAAUjY,YAAYqT,IACtBhb,EAAQgb,EAAOhb,OACTge,SAAW,WACjBhe,EAAMke,KAAO,IACble,EAAM67F,gBAAkB,WACxB/iG,KAAK8mB,UAAYA,EACjB9mB,KAAKghB,QAAUA,IAUnB+gF,EAAA7hG,UAAA8iG,cAAA,SAAchiF,EAASnF,EAAYtU,GACjC,IAAM07F,EAAUl5F,GAAWxC,GACrB27F,EAAWp5F,GAAYvC,GACvB47F,EAAct5F,GAAetC,GAC7B67F,EAAax5F,GAAcrC,GAEjC9B,EAAeoW,EAAWyC,2BAA4B2kF,GACtDx9F,EAAeoW,EAAWyC,2BAA4B4kF,GACtDz9F,EAAeoW,EAAWyC,2BAA4B6kF,GACtD19F,EAAeoW,EAAWyC,2BAA4B8kF,GAEtD,IAAMC,EAAWrjG,KAAK+gB,sBACtBtb,EAAe49F,EAAUJ,GACzBx9F,EAAe49F,EAAUH,GACzBz9F,EAAe49F,EAAUF,GACzB19F,EAAe49F,EAAUD,GAEzBpiF,EAAQ+E,OACR/E,EAAQ6qD,YACR7qD,EAAQ8qD,OAAOxlE,KAAK0H,MAAMi1F,EAAQ,IAAK38F,KAAK0H,MAAMi1F,EAAQ,KAC1DjiF,EAAQ+qD,OAAOzlE,KAAK0H,MAAMk1F,EAAS,IAAK58F,KAAK0H,MAAMk1F,EAAS,KAC5DliF,EAAQ+qD,OAAOzlE,KAAK0H,MAAMm1F,EAAY,IAAK78F,KAAK0H,MAAMm1F,EAAY,KAClEniF,EAAQ+qD,OAAOzlE,KAAK0H,MAAMo1F,EAAW,IAAK98F,KAAK0H,MAAMo1F,EAAW,KAChEpiF,EAAQirD,QASV81B,EAAA7hG,UAAAojG,qBAAA,SAAqBjyF,EAAM2P,EAASnF,GAClC,IAAMzD,EAAQpY,KAAKyhG,WACnB,GAAIrpF,EAAMzH,YAAYU,GAAO,CAC3B,IAAMgW,EAAQ,IAAIC,GAAAriB,QAChBoM,EACArR,KAAK+gB,sBACLlF,EACAmF,GAEF5I,EAAMlF,cAAcmU,KASxB06E,EAAA7hG,UAAAqjG,UAAA,SAAUviF,EAASnF,GACjB7b,KAAK6b,WAAaA,EAClB7b,KAAKsjG,qBAAqBvpF,GAA2BiH,EAASnF,IAQhEkmF,EAAA7hG,UAAAsjG,WAAA,SAAWxiF,EAASnF,GAClB7b,KAAKsjG,qBAAqBvpF,GAA4BiH,EAASnF,IAejEkmF,EAAA7hG,UAAAujG,mBAAA,SACEh5F,EACAC,EACAC,EACA8uC,EACAxtC,EACAC,EACAmiC,GAEA,IAAMvoC,EAAMmG,EAAQ,EACdlG,EAAMmG,EAAS,EACflG,EAAKyzC,EAAa/uC,EAClBzE,GAAMD,EACNG,GAAOsE,EAAO,GAAK4jC,EACnBjoC,GAAOqE,EAAO,GACpB,OAAO5E,EACL7F,KAAKiiG,cACLn8F,EACAC,EACAC,EACAC,GACC0E,EACDxE,EACAC,IAYJ27F,EAAA7hG,UAAAioB,eAAA,SAAe1M,EAAOI,EAAY4C,GAChC,IAAMilF,EAAcj+F,EAClBzF,KAAK+gB,sBACLtF,EAAM1T,SAEFiZ,EAAUhhB,KAAKghB,QAGf2iF,EADQ3jG,KAAKyhG,WACOhpF,YAC1B,GAAIkrF,IAOGx7F,EAAmBw7F,EANCl+F,EACvBoW,EAAW0C,2BACX9C,EAAM1T,UAKN,OAAO,KAIX,IAWIxG,EAXEoE,EAAIW,KAAK0H,MAAM01F,EAAY,IAC3B99F,EAAIU,KAAK0H,MAAM01F,EAAY,IAC7BE,EAAe5jG,KAAKoiG,cACxB,IAAKwB,EAAc,CACjB,IAAMC,EAAc78F,SAASC,cAAc,UAC3C48F,EAAY53F,MAAQ,EACpB43F,EAAY33F,OAAS,EACrB03F,EAAeC,EAAYzhF,WAAW,MACtCpiB,KAAKoiG,cAAgBwB,EAEvBA,EAAapB,UAAU,EAAG,EAAG,EAAG,GAEhC,IACEoB,EAAat9E,UAAUtF,EAAQkB,OAAQvc,EAAGC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5DrE,EAAOqiG,EAAaz1B,aAAa,EAAG,EAAG,EAAG,GAAG5sE,KAC7C,MAAOkhG,GACP,MAAiB,kBAAbA,EAAI99F,MAEN3E,KAAKoiG,cAAgB,KACd,IAAI0B,YAENviG,EAGT,OAAgB,IAAZA,EAAK,GACA,KAEFA,GAMTwgG,EAAA7hG,UAAAE,gBAAA,kBACSJ,KAAK6b,WACZzX,EAAAlE,UAAME,gBAAesE,KAAA1E,OAEzB+hG,EAhVA,CAAkCgC,GAAA9+F,SChClC++F,GACU,SADVA,GAEW,UAFXA,GAGS,QAHTA,GAIe,aAJfA,GAKW,UALXA,GAMQ,OCSF,SAAUC,GACd96F,EACAC,EACAhI,EACAiI,EACAoa,EACAygF,EACA1J,EACA10E,EACAq+E,EACA//E,EACAnV,EACAtE,GAEA,IAAIU,EAAKlC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GAC9BgC,EAAK,EACLI,EAAK,EACLs8B,EAAgB,EAChBs8D,EAAW,EAEf,SAASC,IACPj5F,EAAKC,EACLG,EAAKC,EAELJ,EAAKlC,EADLC,GAAUC,GAEVoC,EAAKtC,EAAgBC,EAAS,GAC9Bg7F,GAAYt8D,EACZA,EAAgBxhC,KAAKutB,MAAMxoB,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAEtE,GACE64F,UACOj7F,EAAShI,EAAMiI,GAAU+6F,EAAWt8D,EAAgBo8D,GAU7D,IARA,IAAI1sC,EACgB,IAAlB1vB,EAAsB,GAAKo8D,EAASE,GAAYt8D,EAC5Cw8D,EAAS32F,GAAKvC,EAAIC,EAAImsD,GACtB+sC,EAAS52F,GAAKnC,EAAIC,EAAI+rD,GAEtBgtC,EAAcp7F,EAASC,EACvBo7F,EAAcL,EACdM,EAAOR,EAASp+E,EAAQq+E,EAAyB//E,EAAMX,EAAMxU,GAC5D7F,EAAShI,EAAMiI,GAAU+6F,EAAWt8D,EAAgB48D,GACzDL,IAGF,IAIIpN,EAJEvuD,EAAO/6B,GAAKvC,EAAIC,EADtBmsD,EAAgC,IAAlB1vB,EAAsB,GAAK48D,EAAON,GAAYt8D,GAEtDa,EAAOh7B,GAAKnC,EAAIC,EAAI+rD,GAI1B,GAAI7sD,EAAU,CACZ,IAAMg6F,EAAO,CAACL,EAAQC,EAAQ77D,EAAMC,GACpC1J,GAAO0lE,EAAM,EAAG,EAAG,EAAGh6F,EAAUg6F,EAAMA,GACtC1N,EAAU0N,EAAK,GAAKA,EAAK,QAEzB1N,EAAUqN,EAAS57D,EAGrB,IAUIk8D,EAVEt3F,EAAKhH,KAAKgH,GACVwR,EAAS,GACT+lF,EAAgBL,EAAcn7F,IAAWD,EAU/C,GAPA0+B,EAAgB,EAChBs8D,EAAWK,EACXp5F,EAAKlC,EAHLC,EAASo7F,GAIT/4F,EAAKtC,EAAgBC,EAAS,GAI1By7F,EAAe,CACjBR,IAEAO,EAAgBt+F,KAAK+yB,MAAM5tB,EAAKD,EAAIH,EAAKD,GACrC6rF,IACF2N,GAAiBA,EAAgB,GAAKt3F,EAAKA,GAE7C,IAAM3H,GAAK+iC,EAAO47D,GAAU,EACtB1+F,GAAK+iC,EAAO47D,GAAU,EAE5B,OADAzlF,EAAO,GAAK,CAACnZ,EAAGC,GAAI8+F,EAAOR,GAAU,EAAGU,EAAenhF,GAChD3E,EAGT,IAAK,IAAI7d,EAAI,EAAGwG,EAAKgc,EAAKziB,OAAQC,EAAIwG,GAAM,CAC1C48F,IACA,IAAIn+F,EAAQI,KAAK+yB,MAAM5tB,EAAKD,EAAIH,EAAKD,GAIrC,GAHI6rF,IACF/wF,GAASA,EAAQ,GAAKoH,EAAKA,QAEP2C,IAAlB20F,EAA6B,CAC/B,IAAI10D,EAAQhqC,EAAQ0+F,EAEpB,GADA10D,GAASA,EAAQ5iC,GAAK,EAAKA,EAAK4iC,GAAS5iC,EAAK,EAAIA,EAAK,EACnDhH,KAAKspB,IAAIsgB,GAASsqD,EACpB,OAAO,KAGXoK,EAAgB1+F,EAIhB,IAFA,IAAM4+F,EAAS7jG,EACX8jG,EAAa,EACV9jG,EAAIwG,IAAMxG,EAAG,CAClB,IACMoU,EAAMyQ,EAAQq+E,EAAyB//E,EAAMX,EADrCwzE,EAAUxvF,EAAKxG,EAAI,EAAIA,GAC2BgO,GAChE,GACE7F,EAASC,EAASjI,GAClBgjG,EAAWt8D,EAAgBo8D,EAASa,EAAa1vF,EAAM,EAEvD,MAEF0vF,GAAc1vF,EAEhB,GAAIpU,IAAM6jG,EAAV,CAGA,IAAME,EAAQ/N,EACVxzE,EAAKwhF,UAAUx9F,EAAKq9F,EAAQr9F,EAAKxG,GACjCwiB,EAAKwhF,UAAUH,EAAQ7jG,GAKrB0E,EAAIgI,GAAKvC,EAAIC,EAJnBmsD,EACoB,IAAlB1vB,EACI,GACCo8D,EAASa,EAAa,EAAIX,GAAYt8D,GAEvCliC,EAAI+H,GAAKnC,EAAIC,EAAI+rD,GACvB14C,EAAO3S,KAAK,CAACxG,EAAGC,EAAGm/F,EAAa,EAAG7+F,EAAO8+F,IAC1Cd,GAAUa,GAEZ,OAAOjmF,ECzFT,IAAMomF,GnKuIG,CAACp8F,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,GmKpInCq8F,GAAK,GAELC,GAAK,GAELC,GAAK,GAELC,GAAK,GAMX,SAASC,GAAgBC,GACvB,OAAOA,EAAuB,GAAGC,aAGnC,IAAMC,GAAW,IAAIvkF,OAEnB,IACE5e,OAAO25E,aAAa,MAAW,IAAM35E,OAAO25E,aAAa,MACzD35E,OAAO25E,aAAa,OAAW,IAAM35E,OAAO25E,aAAa,OACzD35E,OAAO25E,aAAa,OAAW,IAAM35E,OAAO25E,aAAa,OACzD35E,OAAO25E,aAAa,OAAW,IAAM35E,OAAO25E,aAAa,OACzD35E,OAAO25E,aAAa,QAAW,IAAM35E,OAAO25E,aAAa,QAC3D,KASF,SAASypB,GAAoBliF,EAAMmiF,GAIjC,MAHe,UAAVA,GAA+B,QAAVA,GAAqBF,GAASG,KAAKpiF,KAC3DmiF,EAAkB,UAAVA,EAAoB,OAAS,SAEhC/F,GAAAiG,WAAWF,GASpB,SAASG,GAAiBC,EAAKC,EAAMhlG,GAKnC,OAJIA,EAAI,GACN+kG,EAAI75F,KAAK,KAAM,IAEjB65F,EAAI75F,KAAK85F,EAAM,IACRD,EAGT,IAinCAE,GAjnCA,WAOE,SAAAC,EAAYz7F,EAAY+uC,EAAY6rC,EAAU6P,GAK5Cn1F,KAAKslF,SAAWA,EAMhBtlF,KAAKy5C,WAAaA,EAOlBz5C,KAAK0K,WAAaA,EAMlB1K,KAAKomG,WAMLpmG,KAAKm1F,aAAeA,EAAaA,aAMjCn1F,KAAKsH,YAAc6tF,EAAa7tF,YAMhCtH,KAAKqmG,iBAAmB,GAMxBrmG,KAAKsmG,mBtKxIA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsK8IrBtmG,KAAKq1F,yBAA2BF,EAAaE,yBAM7Cr1F,KAAKumG,kBAAoB,KAMzBvmG,KAAKwmG,cAAgB,EAKrBxmG,KAAKi8F,WAAa9G,EAAa8G,YAAc,GAK7Cj8F,KAAKm8F,aAAehH,EAAagH,cAAgB,GAKjDn8F,KAAKq8F,WAAalH,EAAakH,YAAc,GAM7Cr8F,KAAKymG,QAAU,GAMfzmG,KAAK27F,QAAU,GA2gCnB,OAjgCEwK,EAAAjmG,UAAAwmG,YAAA,SAAYjjF,EAAMu6E,EAASE,EAASH,GAClC,IAAMzuF,EAAMmU,EAAOu6E,EAAUE,EAAUH,EACvC,GAAI/9F,KAAK27F,QAAQrsF,GACf,OAAOtP,KAAK27F,QAAQrsF,GAEtB,IAAMqtF,EAAcoB,EAAY/9F,KAAKm8F,aAAa4B,GAAa,KACzDrB,EAAYwB,EAAUl+F,KAAKi8F,WAAWiC,GAAW,KACjDtB,EAAY58F,KAAKq8F,WAAW2B,GAC5BvkD,EAAaz5C,KAAKy5C,WAClB3zB,EAAQ,CACZ82E,EAAU92E,MAAM,GAAK2zB,EACrBmjD,EAAU92E,MAAM,GAAK2zB,GAEjBktD,EAAcllG,MAAMC,QAAQ+hB,GAC5BmiF,EAAQD,GACZgB,EAAcljF,EAAK,GAAKA,EACxBm5E,EAAUc,W5I7GgB,U4I+GtBrR,EACJ0R,GAAapB,EAAYjuB,UAAYiuB,EAAYjuB,UAAY,EAEzDk4B,EAASD,EACXljF,EACAA,EAAKhf,MAAM,MAAMoiG,OAAOd,GAAkB,IAExCe,E5IyHJ,SAA4BC,EAAWH,GAQ3C,IAPA,IAAMI,EAAS,GACTC,EAAU,GACVC,EAAa,GACfj7F,EAAQ,EACRyiE,EAAY,EACZxiE,EAAS,EACTqV,EAAa,EACRtgB,EAAI,EAAGwG,EAAKm/F,EAAO5lG,OAAQC,GAAKwG,EAAIxG,GAAK,EAAG,CACnD,IAAMwiB,EAAOmjF,EAAO3lG,GACpB,GAAa,OAATwiB,GAAiBxiB,IAAMwG,EAA3B,CAOA,IAAM2c,EAAOwiF,EAAO3lG,EAAI,IAAM8lG,EAAU3iF,KAClC+iF,EAAenjF,GAAiBI,EAAMX,GAC5CujF,EAAO76F,KAAKg7F,GACZz4B,GAAay4B,EACb,IAAMC,EAAgB7iF,GAAkBH,GACxC6iF,EAAQ96F,KAAKi7F,GACb7lF,EAAajb,KAAKkD,IAAI+X,EAAY6lF,QAZhCn7F,EAAQ3F,KAAKkD,IAAIyC,EAAOyiE,GACxBw4B,EAAW/6F,KAAKuiE,GAChBA,EAAY,EACZxiE,GAAUqV,EAWd,MAAO,CAACtV,MAAKA,EAAEC,OAAMA,EAAE86F,OAAMA,EAAEC,QAAOA,EAAEC,WAAUA,G4IlJKG,CACnDzK,EACAgK,GAFK36F,EAAK66F,EAAA76F,MAAEC,EAAM46F,EAAA56F,OAAE86F,EAAMF,EAAAE,OAAEC,EAAOH,EAAAG,QAAEC,EAAUJ,EAAAI,WAI3CI,EAAcr7F,EAAQogF,EACtBnmE,EAAsB,GAEtBN,GAAK0hF,EAAc,GAAKxhF,EAAM,GAC9BD,GAAK3Z,EAASmgF,GAAevmE,EAAM,GAEnCM,EAAQ,CACZna,MAAO2Z,EAAI,EAAItf,KAAK4H,MAAM0X,GAAKtf,KAAK8H,KAAKwX,GACzC1Z,OAAQ2Z,EAAI,EAAIvf,KAAK4H,MAAM2X,GAAKvf,KAAK8H,KAAKyX,GAC1CK,oBAAqBA,IAEP,GAAZJ,EAAM,IAAuB,GAAZA,EAAM,IACzBI,EAAoB/Z,KAAK,QAAS2Z,GAEhCi4E,KACF73E,EAAoB/Z,KAAK,cAAewwF,EAAYluB,aACpDvoD,EAAoB/Z,KAAK,YAAakgF,GACtCnmE,EAAoB/Z,KAAK,UAAWwwF,EAAYlO,SAChDvoE,EAAoB/Z,KAAK,WAAYwwF,EAAYvQ,UACjDlmE,EAAoB/Z,KAAK,aAAcwwF,EAAYrQ,aAEnCppF,EAA0BqkG,kCAAoCC,0BAClEtnG,UAAUstF,cACpBtnE,EAAoB/Z,KAAK,cAAe,CAACwwF,EAAY5P,WACrD7mE,EAAoB/Z,KAAK,iBAAkBwwF,EAAY3P,kBAGvDkR,GACFh4E,EAAoB/Z,KAAK,YAAauwF,EAAUr1B,WAElDnhD,EAAoB/Z,KAAK,eAAgB,UACzC+Z,EAAoB/Z,KAAK,YAAa,UAUtC,IATA,IAQIs7F,EAREC,EAAY,GAAM9B,EACpBjgG,EAAIigG,EAAQ0B,EAAcI,EAAYrb,EACpCsb,EAAqB,GACrBC,EAAmB,GACrBrmF,EAAa,EACbsmF,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAEZ9mG,EAAI,EAAGwG,EAAKm/F,EAAO5lG,OAAQC,EAAIwG,EAAIxG,GAAK,EAAG,CAClD,IAAM+mG,EAAOpB,EAAO3lG,GACpB,GAAa,OAAT+mG,EAAJ,CAOA,IAAM5jF,EAAOwiF,EAAO3lG,EAAI,IAAM27F,EAAUx4E,KACpCA,IAASqjF,IACP1J,GACF4J,EAAmBx7F,KAAK,OAAQiY,GAE9B85E,GACF0J,EAAiBz7F,KAAK,OAAQiY,GAEhCqjF,EAAerjF,GAEjB7C,EAAajb,KAAKkD,IAAI+X,EAAY0lF,EAAQa,IAC1C,IAAMG,EAAiB,CACrBD,EACAriG,EACE+hG,EAAYV,EAAOc,GACnBlC,GAASoB,EAAOc,GAAoBZ,EAAWa,IACjD,IAAO1b,EAAc9qE,GAAcsmF,GAErCliG,GAAKqhG,EAAOc,GACR/J,GACF4J,EAAmBx7F,KAAK,aAAc87F,GAEpC/J,GACF0J,EAAiBz7F,KAAK,WAAY87F,KAElCH,OA/BAD,GAActmF,EACdA,EAAa,EACb5b,EAAIigG,EAAQ0B,EAAcI,EAAYrb,IACpC0b,EAiCN,OAHAtmG,MAAMvB,UAAUiM,KAAKI,MAAM2Z,EAAqByhF,GAChDlmG,MAAMvB,UAAUiM,KAAKI,MAAM2Z,EAAqB0hF,GAChD5nG,KAAK27F,QAAQrsF,GAAO8W,EACbA,GAYT+/E,EAAAjmG,UAAAgoG,sBAAA,SACElnF,EACA6/D,EACA0c,EACAC,EACA2K,EACAvQ,EACAwQ,GAEApnF,EAAQ6qD,YACR7qD,EAAQ8qD,OAAOv/D,MAAMyU,EAAS6/D,GAC9B7/D,EAAQ+qD,OAAOx/D,MAAMyU,EAASu8E,GAC9Bv8E,EAAQ+qD,OAAOx/D,MAAMyU,EAASw8E,GAC9Bx8E,EAAQ+qD,OAAOx/D,MAAMyU,EAASmnF,GAC9BnnF,EAAQ+qD,OAAOx/D,MAAMyU,EAAS6/D,GAC1B+W,IACF53F,KAAKomG,WAAqCxO,EAAgB,GAC1D53F,KAAKirF,MAAMjqE,IAETonF,IACFpoG,KAAKqoG,gBACHrnF,EACyBonF,GAE3BpnF,EAAQ2tD,WAwBZw3B,EAAAjmG,UAAAooG,iCAAA,SACEC,EACAC,EACA/zD,EACAC,EACAzoC,EACAC,EACAizB,EACAC,EACA1Z,EACAC,EACAhb,EACAmb,EACA2iF,EACAzjF,EACA0jF,EACA3pF,GAIA,IAqBI3Z,EArBAO,EAAI8uC,GAFRtV,GAAWrZ,EAAM,IAGblgB,EAAI8uC,GAFRtV,GAAWtZ,EAAM,IAIXF,EAAI3Z,EAAQyZ,EAAU6iF,EAAaA,EAAa7iF,EAAUzZ,EAC1D4Z,EAAI3Z,EAASyZ,EAAU6iF,EAAcA,EAAc7iF,EAAUzZ,EAC7Dy8F,EAAO3jF,EAAQ,GAAKY,EAAIE,EAAM,GAAKd,EAAQ,GAC3C4jF,EAAO5jF,EAAQ,GAAKa,EAAIC,EAAM,GAAKd,EAAQ,GAC3C6jF,EAAOljG,EAAIqf,EAAQ,GACnB8jF,EAAOljG,EAAIof,EAAQ,GAkDzB,OAhDI0jF,GAA2B,IAAb/9F,KAChBw6F,GAAG,GAAK0D,EACRvD,GAAG,GAAKuD,EACR1D,GAAG,GAAK2D,EACR1D,GAAG,GAAK0D,EACR1D,GAAG,GAAKyD,EAAOF,EACftD,GAAG,GAAKD,GAAG,GACXC,GAAG,GAAKyD,EAAOF,EACftD,GAAG,GAAKD,GAAG,IAII,IAAb16F,GAYFlF,EAXAL,EAAYS,EtKnZT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsKqZjB4uC,EACAC,EACA,EACA,EACA/pC,GACC8pC,GACAC,GAGuBywD,IAC1B1/F,EAAeL,EAAWggG,IAC1B3/F,EAAeL,EAAWigG,IAC1B5/F,EAAeL,EAAWkgG,IAC1Bv8F,GACEzC,KAAKiD,IAAI47F,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCh/F,KAAKiD,IAAI47F,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCh/F,KAAKkD,IAAI27F,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCh/F,KAAKkD,IAAI27F,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCJ,KAGFn8F,GACEzC,KAAKiD,IAAIs/F,EAAMA,EAAOF,GACtBriG,KAAKiD,IAAIu/F,EAAMA,EAAOF,GACtBtiG,KAAKkD,IAAIq/F,EAAMA,EAAOF,GACtBriG,KAAKkD,IAAIs/F,EAAMA,EAAOF,GACtB1D,IAGAuD,IACF9iG,EAAIW,KAAK0H,MAAMrI,GACfC,EAAIU,KAAK0H,MAAMpI,IAEV,CACLmjG,WAAYpjG,EACZqjG,WAAYpjG,EACZqjG,WAAYrjF,EACZsjF,WAAYrjF,EACZH,QAASA,EACTC,QAASA,EACT8/E,aAAc,CACZh9F,KAAMy8F,GAAU,GAChBx8F,KAAMw8F,GAAU,GAChBv8F,KAAMu8F,GAAU,GAChBt8F,KAAMs8F,GAAU,GAChBt9F,MAAOmX,GAEToqF,gBAAiB/jG,EACjB0gB,MAAOA,IAeXqgF,EAAAjmG,UAAAkpG,oBAAA,SACEpoF,EACAqoF,EACAC,EACAC,EACAnyF,EACAwgF,EACAwQ,GAEA,IAAMM,KAAgB9Q,IAAmBwQ,GAEnCoB,EAAMD,EAAW9D,aACjBvjF,EAASlB,EAAQkB,OACjBunF,EAAgBrB,EACjBA,EAAkB,GAAKmB,EAAWzjF,MAAM,GAAM,EAC/C,EAiCJ,OA/BE0jF,EAAI/gG,KAAOghG,GAAiBvnF,EAAOjW,MAAQo9F,GAC3CG,EAAI7gG,KAAO8gG,GAAiB,GAC5BD,EAAI9gG,KAAO+gG,GAAiBvnF,EAAOhW,OAASm9F,GAC5CG,EAAI5gG,KAAO6gG,GAAiB,IAGxBf,GACF1oG,KAAKkoG,sBACHlnF,EACAmkF,GACAC,GACAC,GACAC,GACyB1N,EACAwQ,GAG7B5iF,GACExE,EACAuoF,EAAWJ,gBACX/xF,EACAkyF,EACAC,EAAW7jF,QACX6jF,EAAW5jF,QACX4jF,EAAWN,WACXM,EAAWL,WACXK,EAAWR,WACXQ,EAAWP,WACXO,EAAWzjF,SAGR,GAOTqgF,EAAAjmG,UAAA+qF,MAAA,SAAMjqE,GACJ,GAAIhhB,KAAKomG,WAAY,CACnB,IAAMsD,EAASjkG,EAAezF,KAAKsmG,mBAAoB,CAAC,EAAG,IACrDqD,EAAa,IAAM3pG,KAAKy5C,WAC9Bz4B,EAAQ+E,OACR/E,EAAQmF,UAAUujF,EAAO,GAAKC,EAAYD,EAAO,GAAKC,GACtD3oF,EAAQsgB,OAAOthC,KAAKwmG,eAEtBxlF,EAAQkqE,OACJlrF,KAAKomG,YACPplF,EAAQuF,WASZ4/E,EAAAjmG,UAAAmoG,gBAAA,SAAgBrnF,EAASk2E,GACvBl2E,EAAqB,YACoCk2E,EAAY,GACrEl2E,EAAQ0tD,UAAmCwoB,EAAY,GACvDl2E,EAAQytE,QAAwCyI,EAAY,GAC5Dl2E,EAAQorE,SAA0C8K,EAAY,GAC9Dl2E,EAAQsrE,WAAoC4K,EAAY,GACpDl2E,EAAQwsE,cACVxsE,EAAQgsE,eAAwCkK,EAAY,GAC5Dl2E,EAAQwsE,YAA0C0J,EAAY,MAYlEiP,EAAAjmG,UAAA0pG,6BAAA,SAA6BnmF,EAAMu6E,EAASD,EAAWG,GACrD,IAAMtB,EAAY58F,KAAKq8F,WAAW2B,GAE5B53E,EAAQpmB,KAAK0mG,YAAYjjF,EAAMu6E,EAASE,EAASH,GAEjDpB,EAAc38F,KAAKm8F,aAAa4B,GAChCtkD,EAAaz5C,KAAKy5C,WAClBmsD,EAAQD,GACZlkG,MAAMC,QAAQ+hB,GAAQA,EAAK,GAAKA,EAChCm5E,EAAUc,W5I1dgB,U4I4dtBS,EAAW0B,GAAAiG,WAAWlJ,EAAUqB,c5ItdP,U4IudzB5R,EACJsQ,GAAeA,EAAYjuB,UAAYiuB,EAAYjuB,UAAY,EASjE,MAAO,CACLtoD,MAAOA,EACP+Y,QAPcymE,GADFx/E,EAAMna,MAAQwtC,EAAa,EAAImjD,EAAU92E,MAAM,IAC7B,GAAK,GAAM8/E,GAASvZ,EAQlDjtD,QANC++D,EAAW/3E,EAAMla,OAAUutC,EAC5B,GAAK,GAAM0kD,GAAY9R,IAuB3B8Z,EAAAjmG,UAAA2pG,SAAA,SACE7oF,EACAqoF,EACAjkG,EACA+vF,EACAsT,EACAqB,EACAC,EACAC,GAGA,IAAIC,EtKniBqBC,EAAYC,EsKoiBjCnqG,KAAKumG,mBAAqB5kG,EAAOyD,EAAWpF,KAAKsmG,oBACnD2D,EAAmBjqG,KAAKumG,mBAEnBvmG,KAAKumG,oBACRvmG,KAAKumG,kBAAoB,IAE3B0D,EAAmBnrE,GACjB9+B,KAAKsH,YACL,EACAtH,KAAKsH,YAAYtG,OACjB,EACAoE,EACApF,KAAKumG,mBtKhjBgB2D,EsKkjBDlqG,KAAKsmG,mBtKljBQ6D,EsKkjBY/kG,EtKjjBnD8kG,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,IsKmlBzB,IArCA,IAGIxd,EACAxtD,EACFC,EACAgrE,EACAC,EACAC,EACAC,EACA7kC,EACAjiD,EACAu6E,EACAD,EACAG,EAqBwDn/E,EACtDpZ,EAAGC,EAAG4kG,EApCNvpG,EAAI,EACFwG,EAAK0tF,EAAan0F,OACpBsE,EAAI,EAaJmlG,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KACtBC,EAAkB7qG,KAAKqmG,iBACvByE,EAAe9qG,KAAKwmG,cACpBuE,EACJzkG,KAAK0H,MAAgD,KAA1C1H,KAAK+yB,OAAOj0B,EAAU,GAAIA,EAAU,KAAc,KAEzD+S,EAAwD,CAC5D6I,QAASA,EACTy4B,WAAYz5C,KAAKy5C,WACjB/uC,WAAY1K,KAAK0K,WACjBC,SAAUmgG,GAKNE,EACJhrG,KAAKm1F,cAAgBA,GAAgBn1F,KAAKslF,SAAW,EAAI,IAGpDrkF,EAAIwG,GAAI,CACb,IAAMyvF,EAAc/B,EAAal0F,GAIjC,OAFEi2F,EAAY,IAGZ,KAAKlE,GAAkBjB,eACrBhzE,EACEm4E,EAAY,GAEdsT,EAAkBtT,EAAY,GACzBn4E,EAAQ0sC,mBAGOx7C,IAAlB85F,GACCl+F,GAAWk+F,EAAeS,EAAgB/xF,eAIzCxX,EAFFA,EAA2Bi2F,EAAY,GAAM,EAL7Cj2F,EAA2Bi2F,EAAY,GASzC,MACF,KAAKlE,GAAkBhB,WACjByY,EAAcO,IAChBhrG,KAAKirF,MAAMjqE,GACXypF,EAAc,GAEZC,EAAgBM,IAClBhqF,EAAQ2tD,SACR+7B,EAAgB,GAEbD,GAAgBC,IACnB1pF,EAAQ6qD,YACRu+B,EAAQlpE,IACRmpE,EAAQnpE,OAERjgC,EACF,MACF,KAAK+xF,GAAkBf,OAErB,IAAM7mF,EAAK6+F,EADX3kG,EAA2B4xF,EAAY,IAEjC1rF,EAAKy+F,EAAiB3kG,EAAI,GAG1B2C,EAFKgiG,EAAiB3kG,EAAI,GAEhB8F,EACVlD,EAFK+hG,EAAiB3kG,EAAI,GAEhBkG,EACVkC,EAAIpH,KAAKutB,KAAK5rB,EAAKA,EAAKC,EAAKA,GACnC8Y,EAAQ8qD,OAAO1gE,EAAKsC,EAAGlC,GACvBwV,EAAQ0sE,IAAItiF,EAAII,EAAIkC,EAAG,EAAG,EAAIpH,KAAKgH,IAAI,KACrCrM,EACF,MACF,KAAK+xF,GAAkBd,WACrBlxE,EAAQgrD,cACN/qE,EACF,MACF,KAAK+xF,GAAkBb,OACrB7sF,EAA2B4xF,EAAY,GACvCvK,EAAKuK,EAAY,GACjB,IAAMl4E,EAEFk4E,EAAY,GAEVj5C,EAAWi5C,EAAY,GACvBz3D,EAA2B,GAAtBy3D,EAAYl2F,OAAck2F,EAAY,QAAKjnF,EACtDkI,EAAM6G,SAAWA,EACjB7G,EAAM4G,QAAUA,EACV9d,KAAK4pG,IACTA,EAAgB5pG,GAAK,IAEvB,IAAM+yC,EAAS62D,EAAgB5pG,GAC3Bw+B,EACFA,EAAGwqE,EAAkB3kG,EAAGqnF,EAAI,EAAG34C,IAE/BA,EAAO,GAAKi2D,EAAiB3kG,GAC7B0uC,EAAO,GAAKi2D,EAAiB3kG,EAAI,GACjC0uC,EAAOhzC,OAAS,GAElBi9C,EAASjK,EAAQ77B,KACflX,EACF,MACF,KAAK+xF,GAAkBX,WACrB/sF,EAA2B4xF,EAAY,GACvCvK,EAA4BuK,EAAY,GACxCxxB,EAEIwxB,EAAY,GAIhB/3D,EAAiC+3D,EAAY,GAC7C93D,EAAiC83D,EAAY,GAC7C,IAAIhrF,EAAgCgrF,EAAY,GAC1C9/E,EAAiC8/E,EAAY,GAC7CxxE,EAAiCwxE,EAAY,GAC7CvxE,EAAiCuxE,EAAY,GAC7CvN,GAAyCuN,EAAY,IACvDvsF,GAAkCusF,EAAY,IAC5CpxE,GACJoxE,EAAY,IAEVjrF,GAA+BirF,EAAY,IACzC+T,GAEF/T,EAAY,IAGhB,IAAKxxB,GAASwxB,EAAYl2F,QAAU,GAAI,CAEtCyiB,EAA8ByzE,EAAY,IAC1C8G,EAAiC9G,EAAY,IAC7C6G,EAAmC7G,EAAY,IAC/CgH,EAAiChH,EAAY,IAC7C,IAAMgU,GAAkBlrG,KAAK4pG,6BAC3BnmF,EACAu6E,EACAD,EACAG,GAEFx4B,EAAQwlC,GAAgB9kF,MACxB8wE,EAAY,GAAKxxB,EACjB,IAAMs5B,GAAqC9H,EAAY,IACvD/3D,GAAW+rE,GAAgB/rE,QAAU6/D,IAAeh/F,KAAKy5C,WACzDy9C,EAAY,GAAK/3D,EACjB,IAAM+/D,GAAqChI,EAAY,IACvD93D,GAAW8rE,GAAgB9rE,QAAU8/D,IAAel/F,KAAKy5C,WACzDy9C,EAAY,GAAK93D,EACjBlzB,EAASw5D,EAAMx5D,OACfgrF,EAAY,GAAKhrF,EACjBD,GAAQy5D,EAAMz5D,MACdirF,EAAY,IAAMjrF,GAGpB,IAAI8wF,QAAc,EACd7F,EAAYl2F,OAAS,KACvB+7F,GAAwC7F,EAAY,KAGtD,IAAIlyE,QAAO,EAAEo4E,QAAc,EAAEC,QAAgB,EACzCnG,EAAYl2F,OAAS,IACvBgkB,GAAwCkyE,EAAY,IACpDkG,GAAyClG,EAAY,IACrDmG,GAA2CnG,EAAY,MAEvDlyE,GAAUnC,GACVu6E,IAAiB,EACjBC,IAAmB,GAGjB1T,IAAkBohB,EAEpBpgG,IAAYmgG,EACFnhB,IAAmBohB,IAE7BpgG,IAAYmgG,GAGd,IADA,IAAIK,GAAa,EACV7lG,EAAIqnF,EAAIrnF,GAAK,EAClB,KACEy3F,IACAA,GAAeoO,MAAgBl/F,GAAQjM,KAAKy5C,YAF9C,CAMA,IAmBMxK,GAAO,CACXjuB,EACAqoF,EACA3jC,EAtBI6jC,GAAavpG,KAAKsoG,iCACtB5iC,EAAMz5D,MACNy5D,EAAMx5D,OACN+9F,EAAiB3kG,GACjB2kG,EAAiB3kG,EAAI,GACrB2G,GACAC,EACAizB,EACAC,EACA1Z,EACAC,EACAhb,GACAmb,GACA2iF,EACAzjF,GACAo4E,IAAkBC,GAClBt+E,GAQA3H,EACAgmF,GAC6BuN,EACzB,KACJtN,GAC6BuN,EACzB,MAEFQ,QAAS,EACTC,QAAiB,EACrB,GAAIrB,GAAqBiB,GAAwB,CAC/C,IAAMn3F,GAAQ64E,EAAKrnF,EACnB,IAAK2lG,GAAuBn3F,IAAQ,CAElCm3F,GAAuBn3F,IAASm7B,GAEhC,SAKF,GAHAm8D,GAAYH,GAAuBn3F,WAC5Bm3F,GAAuBn3F,IAC9Bu3F,GAAoB9F,GAAgB6F,IAChCpB,EAAkBvoB,SAAS4pB,IAC7B,SAIFrB,GACAA,EAAkBvoB,SAAS8nB,GAAW9D,gBAIpC2F,KAEEpB,GACFA,EAAkBtoB,OAAO2pB,IAG3BrrG,KAAKopG,oBAAoB78F,MAAMvM,KAAMorG,KAEnCpB,GACFA,EAAkBtoB,OAAO6nB,GAAW9D,cAEtCzlG,KAAKopG,oBAAoB78F,MAAMvM,KAAMivC,OAErChuC,EACF,MACF,KAAK+xF,GAAkBZ,WACrB,IAAMjxF,GAA+B+1F,EAAY,GAC3C91F,GAA6B81F,EAAY,GACzCiH,GAAkCjH,EAAY,GAC9C38C,GAAkC28C,EAAY,GACpDgH,EAAiChH,EAAY,GAC7C,IAAMsD,GAAkCtD,EAAY,GAC9CoU,GAA2CpU,EAAY,GACvD5oD,GAAiC4oD,EAAY,GACnD6G,EAAmC7G,EAAY,GAC/C,IAAM7K,GAAqC6K,EAAY,IACvDzzE,EAA8ByzE,EAAY,IAC1C8G,EAAiC9G,EAAY,IAC7C,IAAMqU,GAAkB,CACCrU,EAAY,IACZA,EAAY,KAG/B0F,GAAY58F,KAAKq8F,WAAW2B,GAC5B55E,GAAOw4E,GAAUx4E,KACjBm6E,GAAY,CAChB3B,GAAU92E,MAAM,GAAKwlF,GACrB1O,GAAU92E,MAAM,GAAKwlF,IAGnBE,QAAY,EACZpnF,MAAQpkB,KAAKymG,QACf+E,GAAexrG,KAAKymG,QAAQriF,KAE5BonF,GAAe,GACfxrG,KAAKymG,QAAQriF,IAAQonF,IAGvB,IAAMC,GAAat1C,GAAiB8zC,EAAkB9oG,GAAOC,GAAK,GAC5DsqG,GACJplG,KAAKspB,IAAI2uE,GAAU,IACnBh5E,GAAyBnB,GAAMX,EAAM+nF,IACvC,GAAIjxD,IAAYmxD,IAAcD,GAAY,CACxC,IAAM/N,GAAY19F,KAAKq8F,WAAW2B,GAASN,UAErCiO,GAAQ1H,GACZgG,EACA9oG,GACAC,GACA,EACAqiB,GANcgoF,GAAaC,IAAc7L,GAAAiG,WAAWpI,IAQpDlD,GACAl0F,KAAKspB,IAAI2uE,GAAU,IACnBh5E,GACAnB,GACAonF,GACAT,EAA4B,EAAI/qG,KAAKwmG,eAEvCoF,EAAW,GAAID,GAAO,CAEpB,IAAMnG,GAAyB,GAC3BngG,QAAC,EAAEwmG,QAAE,EAAE7G,QAAK,EAAE5+E,QAAK,EAAE0lF,QAAI,EAC7B,GAAI/N,EACF,IAAK14F,GAAI,EAAGwmG,GAAKF,GAAM3qG,OAAQqE,GAAIwmG,KAAMxmG,GAAG,CAE1C2/F,IADA8G,GAAOH,GAAMtmG,KACuB,GACpC+gB,GAAQpmB,KAAK0mG,YAAY1B,GAAOhH,EAAS,GAAID,GAC7C5+D,EACyB2sE,GAAK,IAC3BvN,GAAU,GAAK,GAAKlS,GAAcA,IACrCjtD,EACE++D,GAAW/3E,GAAMla,OACG,GAAlB,GAAMiyF,IAAgB9R,GAAckS,GAAU,GAC9CA,GAAU,GACZjwD,GACF,IAAMi7D,GAAavpG,KAAKsoG,iCACtBliF,GAAMna,MACNma,GAAMla,OACN4/F,GAAK,GACLA,GAAK,GACL1lF,GAAMna,MACNma,GAAMla,OACNizB,EACAC,EACA,EACA,EACA0sE,GAAK,GACLP,IACA,EACA1oF,IACA,EACA9D,GAEF,GACEirF,GACAA,EAAkBvoB,SAAS8nB,GAAW9D,cAEtC,MAAMmG,EAERpG,GAAuBr5F,KAAK,CAC1B6U,EACAqoF,EACAjjF,GACAmjF,GACA,EACA,KACA,OAIN,GAAIrL,EACF,IAAK74F,GAAI,EAAGwmG,GAAKF,GAAM3qG,OAAQqE,GAAIwmG,KAAMxmG,GAAG,CAE1C2/F,IADA8G,GAAOH,GAAMtmG,KACuB,GACpC+gB,GAAQpmB,KAAK0mG,YAAY1B,GAAOhH,EAASE,EAAS,IAClD/+D,EAAiC2sE,GAAK,GACtC1sE,EAAU++D,GAAW/3E,GAAMla,OAASoiC,GAC9Bi7D,GAAavpG,KAAKsoG,iCACtBliF,GAAMna,MACNma,GAAMla,OACN4/F,GAAK,GACLA,GAAK,GACL1lF,GAAMna,MACNma,GAAMla,OACNizB,EACAC,EACA,EACA,EACA0sE,GAAK,GACLP,IACA,EACA1oF,IACA,EACA9D,GAEF,GACEirF,GACAA,EAAkBvoB,SAAS8nB,GAAW9D,cAEtC,MAAMmG,EAERpG,GAAuBr5F,KAAK,CAC1B6U,EACAqoF,EACAjjF,GACAmjF,GACA,EACA,KACA,OAIFS,GACFA,EAAkB32E,KAChBmyE,GAAuB31F,IAAI01F,KAG/B,IAAK,IAAIwG,GAAI,EAAGC,GAAKxG,GAAuBxkG,OAAQ+qG,GAAIC,KAAMD,GAC5D/rG,KAAKopG,oBAAoB78F,MAAMvM,KAAMwlG,GAAuBuG,QAIhE9qG,EACF,MACF,KAAK+xF,GAAkBV,aACrB,QAA4BriF,IAAxB65F,EAAmC,CAIrC,IAAMhrF,GAASgrF,EAHf/qF,EACEm4E,EAAY,GAE8BsT,GAC5C,GAAI1rF,GACF,OAAOA,KAGT7d,EACF,MACF,KAAK+xF,GAAkBT,KACjByY,EACFP,IAEAzqG,KAAKirF,MAAMjqE,KAEX/f,EACF,MACF,KAAK+xF,GAAkBR,gBAYrB,IAXAltF,EAA2B4xF,EAAY,GACvCvK,EAA4BuK,EAAY,GACxCvxF,EAAIskG,EAAiB3kG,GAGrBilG,GAFA3kG,EAAIqkG,EAAiB3kG,EAAI,IAEX,GAAO,GADrBglG,EAAU3kG,EAAI,GAAO,KAENykG,GAASG,IAAWF,IACjCrpF,EAAQ8qD,OAAOnmE,EAAGC,GAClBwkG,EAAQE,EACRD,EAAQE,GAELjlG,GAAK,EAAGA,EAAIqnF,EAAIrnF,GAAK,EAGxBglG,GAFA3kG,EAAIskG,EAAiB3kG,IAEP,GAAO,EACrBilG,GAFA3kG,EAAIqkG,EAAiB3kG,EAAI,IAEX,GAAO,EACjBA,GAAKqnF,EAAK,GAAK2d,IAAWF,GAASG,IAAWF,IAChDrpF,EAAQ+qD,OAAOpmE,EAAGC,GAClBwkG,EAAQE,EACRD,EAAQE,KAGVtpG,EACF,MACF,KAAK+xF,GAAkBP,eACrBkY,EAAsBzT,EACtBl3F,KAAKomG,WAAalP,EAAY,GAE1BuT,IACFzqG,KAAKirF,MAAMjqE,GACXypF,EAAc,EACVC,IACF1pF,EAAQ2tD,SACR+7B,EAAgB,IAIpB1pF,EAAQqmD,UAEJ6vB,EAAY,KAEdj2F,EACF,MACF,KAAK+xF,GAAkBN,iBACrBkY,EAAwB1T,EACpBwT,IACF1pF,EAAQ2tD,SACR+7B,EAAgB,GAElB1qG,KAAKqoG,gBAAgBrnF,EAAkCk2E,KACrDj2F,EACF,MACF,KAAK+xF,GAAkBL,OACjBqY,EACFN,IAEA1pF,EAAQ2tD,WAER1tE,EACF,MACF,UACIA,GAIJwpG,GACFzqG,KAAKirF,MAAMjqE,GAET0pF,GACF1pF,EAAQ2tD,UAaZw3B,EAAAjmG,UAAA+rG,QAAA,SACEjrF,EACAqoF,EACAjkG,EACA0lG,EACArC,EACAuB,GAEAhqG,KAAKwmG,cAAgBsE,EACrB9qG,KAAK6pG,SACH7oF,EACAqoF,EACAjkG,EACApF,KAAKm1F,aACLsT,OACAx4F,OACAA,EACA+5F,IAcJ7D,EAAAjmG,UAAAgsG,oBAAA,SACElrF,EACA5b,EACA0lG,EACAhB,EACAC,GAGA,OADA/pG,KAAKwmG,cAAgBsE,EACd9qG,KAAK6pG,SACV7oF,EACA,EACA5b,EACApF,KAAKq1F,0BACL,EACAyU,EACAC,IAGN5D,EA/mCA,GCjGMgG,GAAQ,CACZnI,GACAA,GACAA,GACAA,GACAA,GACAA,IAGFoI,GAAA,WAaE,SAAAC,EACE9uE,EACA7yB,EACA+uC,EACA6rC,EACAgnB,EACAC,GAMAvsG,KAAKigG,WAAa1iE,EAMlBv9B,KAAKqlF,UAAYC,EAMjBtlF,KAAKw5C,YAAcC,EAMnBz5C,KAAKkgG,YAAcx1F,EAMnB1K,KAAKixF,cAAgBsb,EAMrBvsG,KAAKwsG,mBAAqB,GAM1BxsG,KAAKysG,qBAAuB,KAM5BzsG,KAAK0sG,uBvK5DA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GuK8DrB1sG,KAAK2sG,iBAAiBL,GAgR1B,OAzQED,EAAAnsG,UAAA+rE,KAAA,SAAKjrD,EAAS5b,GACZ,IAAMwnG,EAAiB5sG,KAAK6sG,cAAcznG,GAC1C4b,EAAQ6qD,YACR7qD,EAAQ8qD,OAAO8gC,EAAe,GAAIA,EAAe,IACjD5rF,EAAQ+qD,OAAO6gC,EAAe,GAAIA,EAAe,IACjD5rF,EAAQ+qD,OAAO6gC,EAAe,GAAIA,EAAe,IACjD5rF,EAAQ+qD,OAAO6gC,EAAe,GAAIA,EAAe,IACjD5rF,EAAQirD,QAQVogC,EAAAnsG,UAAAysG,iBAAA,SAAiBL,GACf,IAAK,IAAMh1F,KAAUg1F,EAAiB,CACpC,IAAIQ,EAAY9sG,KAAKwsG,mBAAmBl1F,QACtBrH,IAAd68F,IACFA,EAAY,GACZ9sG,KAAKwsG,mBAAmBl1F,GAAUw1F,GAEpC,IAAMC,EAAsBT,EAAgBh1F,GAC5C,IAAK,IAAMopF,KAAeqM,EAAqB,CAC7C,IAAM5X,EAAe4X,EAAoBrM,GACzCoM,EAAUpM,GAAe,IAAIwF,GAC3BlmG,KAAKkgG,YACLlgG,KAAKw5C,YACLx5C,KAAKqlF,UACL8P,MAURkX,EAAAnsG,UAAA8sG,aAAA,SAAaF,GACX,IAAK,IAAMx1F,KAAUtX,KAAKwsG,mBAExB,IADA,IAAMS,EAAajtG,KAAKwsG,mBAAmBl1F,GAClCrW,EAAI,EAAGwG,EAAKqlG,EAAU9rG,OAAQC,EAAIwG,IAAMxG,EAC/C,GAAI6rG,EAAU7rG,KAAMgsG,EAClB,OAAO,EAIb,OAAO,GAaTZ,EAAAnsG,UAAAse,2BAAA,SACE9Y,EACAgF,EACAC,EACA8T,EACA/U,EACAwjG,GAGA,IAAMC,EAA6B,GADnC1uF,EAAenY,KAAK0H,MAAMyQ,IACa,EACjCrZ,EAAYS,EAChB7F,KAAK0sG,uBACLjuF,EAAe,GACfA,EAAe,GACf,EAAI/T,GACJ,EAAKA,GACJC,GACAjF,EAAW,IACXA,EAAW,IAGR0nG,GAAcptG,KAAKysG,qBACrBW,IACFptG,KAAKysG,qBAAuB5qF,GAC1BsrF,EACAA,IAGJ,IAeIE,EAfErsF,EAAUhhB,KAAKysG,qBAGnBzrF,EAAQkB,OAAOjW,QAAUkhG,GACzBnsF,EAAQkB,OAAOhW,SAAWihG,GAE1BnsF,EAAQkB,OAAOjW,MAAQkhG,EACvBnsF,EAAQkB,OAAOhW,OAASihG,GACdC,GACVpsF,EAAQwhF,UAAU,EAAG,EAAG2K,EAAaA,QAOZl9F,IAAvBjQ,KAAKixF,gBAEPvpF,GADA2lG,EpKhBG,CAACvkG,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,GoKiBPpD,GAC5BiC,EACE0lG,EACA3iG,GAAc1K,KAAKixF,cAAgBxyE,GACnC4uF,IAIJ,IAEI3M,EAFE4M,EAuKJ,SAA6Bt0E,GACjC,QAA2C/oB,IAAvCs9F,GAA2Bv0E,GAC7B,OAAOu0E,GAA2Bv0E,GAMpC,IAHA,IAAMpuB,EAAgB,EAATouB,EAAa,EACpBw0E,EAAgBx0E,EAASA,EACzBy0E,EAAY,IAAIhsG,MAAM+rG,EAAgB,GACnCvsG,EAAI,EAAGA,GAAK+3B,IAAU/3B,EAC7B,IAAK,IAAIue,EAAI,EAAGA,GAAKwZ,IAAUxZ,EAAG,CAChC,IAAMS,EAAahf,EAAIA,EAAIue,EAAIA,EAC/B,GAAIS,EAAautF,EACf,MAEF,IAAIj0E,EAAWk0E,EAAUxtF,GACpBsZ,IACHA,EAAW,GACXk0E,EAAUxtF,GAAcsZ,GAE1BA,EAASptB,KAA4C,IAArC6sB,EAAS/3B,GAAK2J,GAAQouB,EAASxZ,IAAU,GACrDve,EAAI,GACNs4B,EAASptB,KAA4C,IAArC6sB,EAAS/3B,GAAK2J,GAAQouB,EAASxZ,IAAU,GAEvDA,EAAI,IACN+Z,EAASptB,KAA4C,IAArC6sB,EAAS/3B,GAAK2J,GAAQouB,EAASxZ,IAAU,GACrDve,EAAI,GACNs4B,EAASptB,KAA4C,IAArC6sB,EAAS/3B,GAAK2J,GAAQouB,EAASxZ,IAAU,IAOjE,IADA,IAAMkuF,EAAa,GACHjmG,GAAPxG,EAAI,EAAQwsG,EAAUzsG,QAAQC,EAAIwG,IAAMxG,EAC3CwsG,EAAUxsG,IACZysG,EAAWvhG,KAAII,MAAfmhG,EAAmBD,EAAUxsG,IAKjC,OADAssG,GAA2Bv0E,GAAU00E,EAC9BA,EA/MWC,CAAmBlvF,GASnC,SAASmvF,EAAgB7uF,EAASC,GAOhC,IANA,IAAM6uF,EAAY7sF,EAAQmtD,aACxB,EACA,EACAg/B,EACAA,GACA5rG,KACOwqG,EAAI,EAAGtkG,EAAK6lG,EAAQtsG,OAAQ+qG,EAAItkG,EAAIskG,IAC3C,GAAI8B,EAAUP,EAAQvB,IAAM,EAAG,CAC7B,IACGmB,GACAxM,IAAgBsD,IACftD,IAAgBsD,KACuB,IAAzCkJ,EAAoBvsG,QAAQoe,GAC5B,CACA,IAAM+uF,GAAOR,EAAQvB,GAAK,GAAK,EACzBpmG,EAAI8Y,EAAgBqvF,EAAMX,EAC1BvnG,EAAI6Y,GAAiBqvF,EAAMX,EAAe,GAC1CY,EAASrkG,EAASqV,EAASC,EAAUrZ,EAAIA,EAAIC,EAAIA,GACvD,GAAImoG,EACF,OAAOA,EAGX/sF,EAAQwhF,UAAU,EAAG,EAAG2K,EAAaA,GACrC,OAON,IAGIlsG,EAAGue,EAAGstF,EAAWkB,EAAUlvF,EAHzBmvF,EAAKrqG,OAAOiQ,KAAK7T,KAAKwsG,oBAAoB38F,IAAIC,QAIpD,IAHAm+F,EAAG/tF,KAAK7f,GAGHY,EAAIgtG,EAAGjtG,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACnC,IAAM0/F,EAAYsN,EAAGhtG,GAAG66C,WAExB,IADAgxD,EAAY9sG,KAAKwsG,mBAAmB7L,GAC/BnhF,EAAI2sF,GAAMnrG,OAAS,EAAGwe,GAAK,IAAKA,EAGnC,QAAiBvP,KADjB+9F,EAAWlB,EADXpM,EAAcyL,GAAM3sF,OAGlBV,EAASkvF,EAAS9B,oBAChBlrF,EACA5b,EACAuF,EACAijG,EACAP,IAGA,OAAOvuF,IAYjButF,EAAAnsG,UAAA2sG,cAAA,SAAcznG,GACZ,IAAMm4B,EAAYv9B,KAAKigG,WACvB,IAAK1iE,EACH,OAAO,KAET,IAAM90B,EAAO80B,EAAU,GACjB70B,EAAO60B,EAAU,GACjB50B,EAAO40B,EAAU,GACjB30B,EAAO20B,EAAU,GACjBqvE,EAAiB,CAACnkG,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAElE,OADAo2B,GAAY8tE,EAAgB,EAAG,EAAG,EAAGxnG,EAAWwnG,GACzCA,GAMTP,EAAAnsG,UAAAqxB,QAAA,WACE,OAAOjf,GAAQtS,KAAKwsG,qBAatBH,EAAAnsG,UAAA+rG,QAAA,SACEjrF,EACAqoF,EACAjkG,EACA0lG,EACArC,EACAyF,EACAlE,GAGA,IAAMiE,EAAKrqG,OAAOiQ,KAAK7T,KAAKwsG,oBAAoB38F,IAAIC,QACpDm+F,EAAG/tF,KAAK7f,GAIJL,KAAKigG,aACPj/E,EAAQ+E,OACR/lB,KAAKisE,KAAKjrD,EAAS5b,IAGrB,IACInE,EAAGwG,EAAI+X,EAAGqlB,EAAI+7D,EAASC,EADrBsN,EAAeD,GAAsC/B,GAK3D,IAHInC,GACFiE,EAAGhX,UAEAh2F,EAAI,EAAGwG,EAAKwmG,EAAGjtG,OAAQC,EAAIwG,IAAMxG,EAAG,CACvC,IAAM0/F,EAAYsN,EAAGhtG,GAAG66C,WAExB,IADA8kD,EAAU5gG,KAAKwsG,mBAAmB7L,GAC7BnhF,EAAI,EAAGqlB,EAAKspE,EAAantG,OAAQwe,EAAIqlB,IAAMrlB,EAAG,MAGlCvP,KADf4wF,EAASD,EADWuN,EAAa3uF,MAG/BqhF,EAAOoL,QACLjrF,EACAqoF,EACAjkG,EACA0lG,EACArC,EACAuB,IAMJhqG,KAAKigG,YACPj/E,EAAQuF,WAGd8lF,EArVA,GA6VMkB,GAA6B,OAoDnCa,GAAehC,0gBCmuBfiC,GAxmCA,SAAAjqG,GAUE,SAAAkqG,EACEttF,EACAy4B,EACAlyC,EACAnC,EACA0lG,EACAyD,EACAC,GAPF,IAAAjqG,EASEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAKkqG,SAAWztF,EAMhBzc,EAAKi1C,YAAcC,EAMnBl1C,EAAK4wB,QAAU5tB,EAMfhD,EAAKmqG,WAAatpG,EAMlBb,EAAKiiG,cAAgBsE,EAMrBvmG,EAAKoqG,kBAAoBJ,EAMzBhqG,EAAKqqG,eAAiBJ,EAMtBjqG,EAAKsqG,kBAAoB,KAMzBtqG,EAAKuqG,oBAAsB,KAM3BvqG,EAAKwqG,kBAAoB,KAMzBxqG,EAAKyqG,WAAa,KAMlBzqG,EAAK0qG,aAAe,KAMpB1qG,EAAK8hE,OAAS,KAMd9hE,EAAK2qG,cAAgB,EAMrB3qG,EAAK4qG,cAAgB,EAMrB5qG,EAAK6qG,aAAe,EAMpB7qG,EAAK8qG,cAAgB,EAMrB9qG,EAAK+qG,cAAgB,EAMrB/qG,EAAKgrG,cAAgB,EAMrBhrG,EAAKirG,sBAAuB,EAM5BjrG,EAAKkrG,eAAiB,EAMtBlrG,EAAKmrG,YAAc,CAAC,EAAG,GAMvBnrG,EAAKorG,YAAc,EAMnBprG,EAAKorF,MAAQ,GAMbprF,EAAKq3F,aAAe,EAMpBr3F,EAAKs3F,aAAe,EAMpBt3F,EAAKu3F,qBAAsB,EAM3Bv3F,EAAKw3F,cAAgB,EAMrBx3F,EAAKqrG,WAAa,CAAC,EAAG,GAMtBrrG,EAAKy3F,eAAiB,KAMtBz3F,EAAK23F,iBAAmB,KAMxB33F,EAAK63F,WAAa,KAMlB73F,EAAKgiG,kBAAoB,GAMzBhiG,EAAKsrG,mBxKpOA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KwK2mCzB,OAtmCsCC,GAAAxB,EAAAlqG,GAyOpCkqG,EAAApuG,UAAA6vG,YAAA,SAAY5mG,EAAiBC,EAAQhI,EAAKiI,GACxC,GAAKrJ,KAAKqmE,OAAV,CAGA,IAAM4jC,EAAmBnrE,GACvB31B,EACAC,EACAhI,EACAiI,EACArJ,KAAK0uG,WACL1uG,KAAKumG,mBAEDvlF,EAAUhhB,KAAKyuG,SACfuB,EAAiBhwG,KAAK6vG,mBACtBtjB,EAAQvrE,EAAQgF,YACI,GAAtBhmB,KAAKqvG,gBACPruF,EAAQgF,YAAcumE,EAAQvsF,KAAKqvG,eAErC,IAAI1kG,EAAW3K,KAAKyvG,eAChBzvG,KAAKwvG,uBACP7kG,GAAY3K,KAAKwmG,eAEnB,IAAK,IAAIvlG,EAAI,EAAGwG,EAAKwiG,EAAiBjpG,OAAQC,EAAIwG,EAAIxG,GAAK,EAAG,CAC5D,IAAM0E,EAAIskG,EAAiBhpG,GAAKjB,KAAKkvG,cAC/BtpG,EAAIqkG,EAAiBhpG,EAAI,GAAKjB,KAAKmvG,cACzC,GACe,IAAbxkG,GACuB,GAAvB3K,KAAK0vG,YAAY,IACM,GAAvB1vG,KAAK0vG,YAAY,GACjB,CACA,IAAMj7D,EAAU9uC,EAAI3F,KAAKkvG,cACnBx6D,EAAU9uC,EAAI5F,KAAKmvG,cACzBtpG,EACEmqG,EACAv7D,EACAC,EACA,EACA,EACA/pC,GACC8pC,GACAC,GAEH1zB,EAAQiF,aAAa1Z,MAAMyU,EAASgvF,GACpChvF,EAAQmF,UAAUsuB,EAASC,GAC3B1zB,EAAQ8E,MAAM9lB,KAAK0vG,YAAY,GAAI1vG,KAAK0vG,YAAY,IACpD1uF,EAAQsF,UACNtmB,KAAKqmE,OACLrmE,KAAKsvG,cACLtvG,KAAKuvG,cACLvvG,KAAK2vG,YACL3vG,KAAKovG,cACJpvG,KAAKkvG,eACLlvG,KAAKmvG,cACNnvG,KAAK2vG,YACL3vG,KAAKovG,cAEPpuF,EAAQiF,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpCjF,EAAQsF,UACNtmB,KAAKqmE,OACLrmE,KAAKsvG,cACLtvG,KAAKuvG,cACLvvG,KAAK2vG,YACL3vG,KAAKovG,aACLzpG,EACAC,EACA5F,KAAK2vG,YACL3vG,KAAKovG,cAIe,GAAtBpvG,KAAKqvG,gBACPruF,EAAQgF,YAAcumE,KAW1B+hB,EAAApuG,UAAA+vG,UAAA,SAAU9mG,EAAiBC,EAAQhI,EAAKiI,GACtC,GAAKrJ,KAAKo8F,YAA6B,KAAfp8F,KAAK2vF,MAA7B,CAGI3vF,KAAKg8F,gBACPh8F,KAAKkwG,qBAAqBlwG,KAAKg8F,gBAE7Bh8F,KAAKk8F,kBACPl8F,KAAKmwG,uBAAuBnwG,KAAKk8F,kBAEnCl8F,KAAKowG,qBAAqBpwG,KAAKo8F,YAC/B,IAAM6N,EAAmBnrE,GACvB31B,EACAC,EACAhI,EACAiI,EACArJ,KAAK0uG,WACL1uG,KAAKumG,mBAEDvlF,EAAUhhB,KAAKyuG,SACjB9jG,EAAW3K,KAAK+7F,cAIpB,IAHI/7F,KAAK87F,sBACPnxF,GAAY3K,KAAKwmG,eAEZp9F,EAAShI,EAAKgI,GAAUC,EAAQ,CACrC,IAAM1D,EAAIskG,EAAiB7gG,GAAUpJ,KAAK47F,aACpCh2F,EAAIqkG,EAAiB7gG,EAAS,GAAKpJ,KAAK67F,aAC9C,GACe,IAAblxF,GACsB,GAAtB3K,KAAK4vG,WAAW,IACM,GAAtB5vG,KAAK4vG,WAAW,GAChB,CACA,IAAMI,EAAiBnqG,EACrB7F,KAAK6vG,mBACLlqG,EACAC,EACA,EACA,EACA+E,GACChF,GACAC,GAEHob,EAAQiF,aAAa1Z,MAAMyU,EAASgvF,GACpChvF,EAAQmF,UAAUxgB,EAAGC,GACrBob,EAAQ8E,MAAM9lB,KAAK4vG,WAAW,GAAI5vG,KAAK4vG,WAAW,IAC9C5vG,KAAKk8F,kBACPl7E,EAAQqvF,WAAWrwG,KAAK2vF,MAAO,EAAG,GAEhC3vF,KAAKg8F,gBACPh7E,EAAQsvF,SAAStwG,KAAK2vF,MAAO,EAAG,GAElC3uE,EAAQiF,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,QAEhCjmB,KAAKk8F,kBACPl7E,EAAQqvF,WAAWrwG,KAAK2vF,MAAOhqF,EAAGC,GAEhC5F,KAAKg8F,gBACPh7E,EAAQsvF,SAAStwG,KAAK2vF,MAAOhqF,EAAGC,MAexC0oG,EAAApuG,UAAAqwG,cAAA,SAAcpnG,EAAiBC,EAAQhI,EAAKiI,EAAQmnG,GAClD,IAAMxvF,EAAUhhB,KAAKyuG,SACfxE,EAAmBnrE,GACvB31B,EACAC,EACAhI,EACAiI,EACArJ,KAAK0uG,WACL1uG,KAAKumG,mBAEPvlF,EAAQ8qD,OAAOm+B,EAAiB,GAAIA,EAAiB,IACrD,IAAIjpG,EAASipG,EAAiBjpG,OAC1BwvG,IACFxvG,GAAU,GAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/B+f,EAAQ+qD,OAAOk+B,EAAiBhpG,GAAIgpG,EAAiBhpG,EAAI,IAK3D,OAHIuvG,GACFxvF,EAAQgrD,YAEH5qE,GAWTktG,EAAApuG,UAAAuwG,WAAA,SAAWtnG,EAAiBC,EAAQ66B,EAAM56B,GACxC,IAAK,IAAIpI,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAC1CmI,EAASpJ,KAAKuwG,cACZpnG,EACAC,EACA66B,EAAKhjC,GACLoI,GACA,GAGJ,OAAOD,GAUTklG,EAAApuG,UAAAmzF,WAAA,SAAWr0E,GACT,GAAKnT,GAAW7L,KAAKm1B,QAASnW,EAASvG,aAAvC,CAGA,GAAIzY,KAAKgvG,YAAchvG,KAAKivG,aAAc,CACpCjvG,KAAKgvG,YACPhvG,KAAKkwG,qBAAqBlwG,KAAKgvG,YAE7BhvG,KAAKivG,cACPjvG,KAAKmwG,uBAAuBnwG,KAAKivG,cAEnC,IAAMhF,EAAmBpjE,GAAA6pE,gBACvB1xF,EACAhf,KAAK0uG,WACL1uG,KAAKumG,mBAEDt+F,EAAKgiG,EAAiB,GAAKA,EAAiB,GAC5C/hG,EAAK+hG,EAAiB,GAAKA,EAAiB,GAC5CjxE,EAAS1yB,KAAKutB,KAAK5rB,EAAKA,EAAKC,EAAKA,GAClC8Y,EAAUhhB,KAAKyuG,SACrBztF,EAAQ6qD,YACR7qD,EAAQ0sE,IACNuc,EAAiB,GACjBA,EAAiB,GACjBjxE,EACA,EACA,EAAI1yB,KAAKgH,IAEPtN,KAAKgvG,YACPhuF,EAAQkqE,OAENlrF,KAAKivG,cACPjuF,EAAQ2tD,SAGO,KAAf3uE,KAAK2vF,OACP3vF,KAAKiwG,UAAUjxF,EAASwsB,YAAa,EAAG,EAAG,KAW/C8iE,EAAApuG,UAAAy0D,SAAA,SAASztD,GACPlH,KAAKu0F,mBAAmBrtF,EAAM0kF,UAAW1kF,EAAM6kF,aAC/C/rF,KAAKw0F,cAActtF,EAAMo+D,YACzBtlE,KAAK20F,aAAaztF,EAAM2oF,YAM1Bye,EAAApuG,UAAA+lB,aAAA,SAAa7gB,GACXpF,KAAK0uG,WAAatpG,GAUpBkpG,EAAApuG,UAAAkzF,aAAA,SAAap0E,GAEX,OADaA,EAAS2iB,WAEpB,KAAK7N,GACH9zB,KAAKk0F,UACmDl1E,GAExD,MACF,KAAK8U,GACH9zB,KAAK0zF,eACwD10E,GAE7D,MACF,KAAK8U,GACH9zB,KAAKo0F,YACqDp1E,GAE1D,MACF,KAAK8U,GACH9zB,KAAK8zF,eACwD90E,GAE7D,MACF,KAAK8U,GACH9zB,KAAK4zF,oBAED50E,GAGJ,MACF,KAAK8U,GACH9zB,KAAKg0F,iBAC0Dh1E,GAE/D,MACF,KAAK8U,GACH9zB,KAAKwzF,uBAEDx0E,GAGJ,MACF,KAAK8U,GACH9zB,KAAKqzF,WACoDr0E,KAiB/DsvF,EAAApuG,UAAAqzF,YAAA,SAAYx0E,EAAS7X,GACnB,IAAM8X,EAAW9X,EAAM+oF,qBAAN/oF,CAA4B6X,GACxCC,GAAanT,GAAW7L,KAAKm1B,QAASnW,EAASvG,eAGpDzY,KAAK20D,SAASztD,GACdlH,KAAKozF,aAAap0E,KASpBsvF,EAAApuG,UAAAszF,uBAAA,SAAuBx0E,GAErB,IADA,IAAM2xF,EAAa3xF,EAAS4xF,qBACnB3vG,EAAI,EAAGwG,EAAKkpG,EAAW3vG,OAAQC,EAAIwG,IAAMxG,EAChDjB,KAAKozF,aAAaud,EAAW1vG,KAUjCqtG,EAAApuG,UAAAg0F,UAAA,SAAUl1E,GACJhf,KAAK2uG,oBACP3vF,EACEA,EAAS0hB,oBACP1gC,KAAK2uG,kBACL3uG,KAAK4uG,iBAIX,IAAMzlG,EAAkB6V,EAASujB,qBAC3Bl5B,EAAS2V,EAASwjB,YACpBxiC,KAAKqmE,QACPrmE,KAAK+vG,YAAY5mG,EAAiB,EAAGA,EAAgBnI,OAAQqI,GAE5C,KAAfrJ,KAAK2vF,OACP3vF,KAAKiwG,UAAU9mG,EAAiB,EAAGA,EAAgBnI,OAAQqI,IAU/DilG,EAAApuG,UAAA4zF,eAAA,SAAe90E,GACThf,KAAK2uG,oBACP3vF,EACEA,EAAS0hB,oBACP1gC,KAAK2uG,kBACL3uG,KAAK4uG,iBAIX,IAAMzlG,EAAkB6V,EAASujB,qBAC3Bl5B,EAAS2V,EAASwjB,YACpBxiC,KAAKqmE,QACPrmE,KAAK+vG,YAAY5mG,EAAiB,EAAGA,EAAgBnI,OAAQqI,GAE5C,KAAfrJ,KAAK2vF,OACP3vF,KAAKiwG,UAAU9mG,EAAiB,EAAGA,EAAgBnI,OAAQqI,IAU/DilG,EAAApuG,UAAAwzF,eAAA,SAAe10E,GASb,GARIhf,KAAK2uG,oBACP3vF,EACEA,EAAS0hB,oBACP1gC,KAAK2uG,kBACL3uG,KAAK4uG,iBAIN/iG,GAAW7L,KAAKm1B,QAASnW,EAASvG,aAAvC,CAGA,GAAIzY,KAAKivG,aAAc,CACrBjvG,KAAKmwG,uBAAuBnwG,KAAKivG,cACjC,IAAMjuF,EAAUhhB,KAAKyuG,SACftlG,EAAkB6V,EAASujB,qBACjCvhB,EAAQ6qD,YACR7rE,KAAKuwG,cACHpnG,EACA,EACAA,EAAgBnI,OAChBge,EAASwjB,aACT,GAEFxhB,EAAQ2tD,SAEV,GAAmB,KAAf3uE,KAAK2vF,MAAc,CACrB,IAAMkhB,EAAe7xF,EAAS+3C,kBAC9B/2D,KAAKiwG,UAAUY,EAAc,EAAG,EAAG,MAUvCvC,EAAApuG,UAAA0zF,oBAAA,SAAoB50E,GACdhf,KAAK2uG,oBACP3vF,EAEIA,EAAS0hB,oBACP1gC,KAAK2uG,kBACL3uG,KAAK4uG,iBAIb,IAAMkC,EAAiB9xF,EAASvG,YAChC,GAAK5M,GAAW7L,KAAKm1B,QAAS27E,GAA9B,CAGA,GAAI9wG,KAAKivG,aAAc,CACrBjvG,KAAKmwG,uBAAuBnwG,KAAKivG,cACjC,IAAMjuF,EAAUhhB,KAAKyuG,SACftlG,EAAkB6V,EAASujB,qBAC7Bn5B,EAAS,EACP66B,EAAqCjlB,EAASorB,UAC9C/gC,EAAS2V,EAASwjB,YACxBxhB,EAAQ6qD,YACR,IAAK,IAAI5qE,EAAI,EAAGwG,EAAKw8B,EAAKjjC,OAAQC,EAAIwG,IAAMxG,EAC1CmI,EAASpJ,KAAKuwG,cACZpnG,EACAC,EACA66B,EAAKhjC,GACLoI,GACA,GAGJ2X,EAAQ2tD,SAEV,GAAmB,KAAf3uE,KAAK2vF,MAAc,CACrB,IAAMohB,EAAgB/xF,EAAS64C,mBAC/B73D,KAAKiwG,UAAUc,EAAe,EAAGA,EAAc/vG,OAAQ,MAU3DstG,EAAApuG,UAAAk0F,YAAA,SAAYp1E,GASV,GARIhf,KAAK2uG,oBACP3vF,EACEA,EAAS0hB,oBACP1gC,KAAK2uG,kBACL3uG,KAAK4uG,iBAIN/iG,GAAW7L,KAAKm1B,QAASnW,EAASvG,aAAvC,CAGA,GAAIzY,KAAKivG,cAAgBjvG,KAAKgvG,WAAY,CACpChvG,KAAKgvG,YACPhvG,KAAKkwG,qBAAqBlwG,KAAKgvG,YAE7BhvG,KAAKivG,cACPjvG,KAAKmwG,uBAAuBnwG,KAAKivG,cAEnC,IAAMjuF,EAAUhhB,KAAKyuG,SACrBztF,EAAQ6qD,YACR7rE,KAAKywG,WACHzxF,EAASmrB,6BACT,EAC8BnrB,EAASorB,UACvCprB,EAASwjB,aAEPxiC,KAAKgvG,YACPhuF,EAAQkqE,OAENlrF,KAAKivG,cACPjuF,EAAQ2tD,SAGZ,GAAmB,KAAf3uE,KAAK2vF,MAAc,CACrB,IAAMqhB,EAAoBhyF,EAASqrB,uBACnCrqC,KAAKiwG,UAAUe,EAAmB,EAAG,EAAG,MAS5C1C,EAAApuG,UAAA8zF,iBAAA,SAAiBh1E,GASf,GARIhf,KAAK2uG,oBACP3vF,EACEA,EAAS0hB,oBACP1gC,KAAK2uG,kBACL3uG,KAAK4uG,iBAIN/iG,GAAW7L,KAAKm1B,QAASnW,EAASvG,aAAvC,CAGA,GAAIzY,KAAKivG,cAAgBjvG,KAAKgvG,WAAY,CACpChvG,KAAKgvG,YACPhvG,KAAKkwG,qBAAqBlwG,KAAKgvG,YAE7BhvG,KAAKivG,cACPjvG,KAAKmwG,uBAAuBnwG,KAAKivG,cAEnC,IAAMjuF,EAAUhhB,KAAKyuG,SACftlG,EAAkB6V,EAASmrB,6BAC7B/gC,EAAS,EACP68B,EAAQjnB,EAAS43E,WACjBvtF,EAAS2V,EAASwjB,YACxBxhB,EAAQ6qD,YACR,IAAK,IAAI5qE,EAAI,EAAGwG,EAAKw+B,EAAMjlC,OAAQC,EAAIwG,IAAMxG,EAAG,CAC9C,IAAMgjC,EAAOgC,EAAMhlC,GACnBmI,EAASpJ,KAAKywG,WAAWtnG,EAAiBC,EAAQ66B,EAAM56B,GAEtDrJ,KAAKgvG,YACPhuF,EAAQkqE,OAENlrF,KAAKivG,cACPjuF,EAAQ2tD,SAGZ,GAAmB,KAAf3uE,KAAK2vF,MAAc,CACrB,IAAMshB,EAAqBjyF,EAASi+E,wBACpCj9F,KAAKiwG,UAAUgB,EAAoB,EAAGA,EAAmBjwG,OAAQ,MAQrEstG,EAAApuG,UAAAgwG,qBAAA,SAAqBxT,GACnB,IAAM17E,EAAUhhB,KAAKyuG,SACfyC,EAAmBlxG,KAAK6uG,kBACzBqC,EAMCA,EAAiB7pC,WAAaq1B,EAAUr1B,YAC1C6pC,EAAiB7pC,UAAYq1B,EAAUr1B,UACvCrmD,EAAQqmD,UAAYq1B,EAAUr1B,YAPhCrmD,EAAQqmD,UAAYq1B,EAAUr1B,UAC9BrnE,KAAK6uG,kBAAoB,CACvBxnC,UAAWq1B,EAAUr1B,aAc3BinC,EAAApuG,UAAAiwG,uBAAA,SAAuBxT,GACrB,IAAM37E,EAAUhhB,KAAKyuG,SACf0C,EAAqBnxG,KAAK8uG,oBAC3BqC,GAoBCA,EAAmB1iB,SAAWkO,EAAYlO,UAC5C0iB,EAAmB1iB,QAAUkO,EAAYlO,QACzCztE,EAAQytE,QAAUkO,EAAYlO,SAE5BztE,EAAQwsE,cACL7rF,EAAOwvG,EAAmBpkB,SAAU4P,EAAY5P,WACnD/rE,EAAQwsE,YACL2jB,EAAmBpkB,SAAW4P,EAAY5P,UAG3CokB,EAAmBnkB,gBAAkB2P,EAAY3P,iBACnDmkB,EAAmBnkB,eAAiB2P,EAAY3P,eAChDhsE,EAAQgsE,eAAiB2P,EAAY3P,iBAGrCmkB,EAAmB/kB,UAAYuQ,EAAYvQ,WAC7C+kB,EAAmB/kB,SAAWuQ,EAAYvQ,SAC1CprE,EAAQorE,SAAWuQ,EAAYvQ,UAE7B+kB,EAAmBziC,WAAaiuB,EAAYjuB,YAC9CyiC,EAAmBziC,UAAYiuB,EAAYjuB,UAC3C1tD,EAAQ0tD,UAAYiuB,EAAYjuB,WAE9ByiC,EAAmB7kB,YAAcqQ,EAAYrQ,aAC/C6kB,EAAmB7kB,WAAaqQ,EAAYrQ,WAC5CtrE,EAAQsrE,WAAaqQ,EAAYrQ,YAE/B6kB,EAAmB1iC,aAAekuB,EAAYluB,cAChD0iC,EAAmB1iC,YAAckuB,EAAYluB,YAC7CztD,EAAQytD,YAAckuB,EAAYluB,eAhDpCztD,EAAQytE,QAAUkO,EAAYlO,QAC1BztE,EAAQwsE,cACVxsE,EAAQwsE,YAAYmP,EAAY5P,UAChC/rE,EAAQgsE,eAAiB2P,EAAY3P,gBAEvChsE,EAAQorE,SAAWuQ,EAAYvQ,SAC/BprE,EAAQ0tD,UAAYiuB,EAAYjuB,UAChC1tD,EAAQsrE,WAAaqQ,EAAYrQ,WACjCtrE,EAAQytD,YAAckuB,EAAYluB,YAClCzuE,KAAK8uG,oBAAsB,CACzBrgB,QAASkO,EAAYlO,QACrB1B,SAAU4P,EAAY5P,SACtBC,eAAgB2P,EAAY3P,eAC5BZ,SAAUuQ,EAAYvQ,SACtB1d,UAAWiuB,EAAYjuB,UACvB4d,WAAYqQ,EAAYrQ,WACxB7d,YAAakuB,EAAYluB,eAyC/B6/B,EAAApuG,UAAAkwG,qBAAA,SAAqBxT,GACnB,IAAM57E,EAAUhhB,KAAKyuG,SACf2C,EAAmBpxG,KAAK+uG,kBACxBrR,EAAYd,EAAUc,UACxBd,EAAUc,U9I5yBc,S8I8yBvB0T,GAYCA,EAAiBhtF,MAAQw4E,EAAUx4E,OACrCgtF,EAAiBhtF,KAAOw4E,EAAUx4E,KAClCpD,EAAQoD,KAAOw4E,EAAUx4E,MAEvBgtF,EAAiB1T,WAAaA,IAChC0T,EAAiB1T,UAA4CA,EAC7D18E,EAAQ08E,UAA4CA,GAElD0T,EAAiBnT,cAAgBrB,EAAUqB,eAC7CmT,EAAiBnT,aACfrB,EAAUqB,aAEZj9E,EAAQi9E,aACNrB,EAAUqB,gBAxBdj9E,EAAQoD,KAAOw4E,EAAUx4E,KACzBpD,EAAQ08E,UAA4CA,EACpD18E,EAAQi9E,aACNrB,EAAUqB,aAEZj+F,KAAK+uG,kBAAoB,CACvB3qF,KAAMw4E,EAAUx4E,KAChBs5E,UAAWA,EACXO,aAAcrB,EAAUqB,gBA6B9BqQ,EAAApuG,UAAAq0F,mBAAA,SAAmBltB,EAAWoH,GAA9B,IAAAlqE,EAAAvE,KACE,GAAKqnE,EAEE,CACL,IAAM8vB,EAAiB9vB,EAAU4lB,WACjCjtF,KAAKgvG,WAAa,CAChB3nC,UAAWwjB,GACTsM,G9Ir4BsB,c8Ig4B1Bn3F,KAAKgvG,WAAa,KASpB,GAAKvgC,EAEE,CACL,IAAM2oB,EAAmB3oB,EAAYwe,WAC/BoK,EAAqB5oB,EAAYsgB,aACjCuI,EAAsB7oB,EAAYye,cAClCqK,EAA4B9oB,EAAY0e,oBACxCqK,EAAsB/oB,EAAY2e,cAClCqK,EAAmBhpB,EAAY4F,WAC/BqjB,EAAwBjpB,EAAY4e,gBACpCN,EAAWuK,GAEb10E,GACJ5iB,KAAKivG,aAAe,CAClBxgB,aACyBx+E,IAAvBonF,EACIA,E9In5BgB,Q8Iq5BtBtK,SACuB,IAArB/sF,KAAKw5C,YACDuzC,EACAA,EAASl9E,KAAI,SAAC9O,GAAM,OAAAA,EAAIwD,EAAKi1C,eACnCwzC,gBACGuK,G9I94B0B,G8Ig5BEv3F,KAAKw5C,YACpC4yC,cAC0Bn8E,IAAxBunF,EACIA,E9I74BiB,Q8I+4BvB9oB,gBACwBz+D,IAArBwnF,EACGA,E9I72BkB,G8I82BEz3F,KAAKw5C,YAC/B8yC,gBAC4Br8E,IAA1BynF,EACIA,E9I/4BmB,G8Ii5BzBjpB,YAAaoc,GACXuM,G9I54BwB,c8Is2B5Bp3F,KAAKivG,aAAe,MAkDxBX,EAAApuG,UAAAs0F,cAAA,SAAcC,GACZ,IAAI4c,EACJ,GAAK5c,IAAgB4c,EAAY5c,EAAWl2C,WAA5C,CAIA,IAAM+yD,EAAc7c,EAAWrK,YACzBmnB,EAAc9c,EAAWte,YAC/Bn2E,KAAKqmE,OAASouB,EAAWnvB,SAAStlE,KAAKw5C,aACvCx5C,KAAKkvG,cAAgBoC,EAAY,GAAKtxG,KAAKw5C,YAC3Cx5C,KAAKmvG,cAAgBmC,EAAY,GAAKtxG,KAAKw5C,YAC3Cx5C,KAAKovG,aAAeiC,EAAU,GAAKrxG,KAAKw5C,YACxCx5C,KAAKqvG,cAAgB5a,EAAWl8E,aAChCvY,KAAKsvG,cAAgBiC,EAAY,GACjCvxG,KAAKuvG,cAAgBgC,EAAY,GACjCvxG,KAAKwvG,qBAAuB/a,EAAWxK,oBACvCjqF,KAAKyvG,eAAiBhb,EAAW9lD,cACjC3uC,KAAK0vG,YAAcjb,EAAWtK,gBAC9BnqF,KAAK2vG,YAAc0B,EAAU,GAAKrxG,KAAKw5C,iBAfrCx5C,KAAKqmE,OAAS,MAwBlBioC,EAAApuG,UAAAy0F,aAAA,SAAaC,GACX,GAAKA,EAEE,CACL,IAAMwJ,EAAgBxJ,EAAUhJ,UAChC,GAAKwS,EAEE,CACL,IAAMoT,EAAqBpT,EAAcnR,WACzCjtF,KAAKg8F,eAAiB,CACpB30B,UAAWwjB,GACT2mB,G9Il+BoB,c8I69BxBxxG,KAAKg8F,eAAiB,KASxB,IAAMqC,EAAkBzJ,EAAU7I,YAClC,GAAKsS,EAEE,CACL,IAAMoT,EAAuBpT,EAAgBpR,WACvCykB,EAAyBrT,EAAgBtP,aACzC4iB,EAA0BtT,EAAgBnR,cAC1C0kB,EACJvT,EAAgBlR,oBACZ0kB,EAA0BxT,EAAgBjR,cAC1C0kB,EAAuBzT,EAAgBhqB,WACvC09B,EAA4B1T,EAAgBhR,gBAClDrtF,KAAKk8F,iBAAmB,CACtBzN,aAC6Bx+E,IAA3ByhG,EACIA,E9I/+Bc,Q8Ii/BpB3kB,SAAU4kB,GAEN/uF,GACJoqE,eAAgB4kB,G9Ix+BW,E8I2+B3BxlB,cAC8Bn8E,IAA5B4hG,EACIA,E9Iv+Be,Q8Iy+BrBnjC,eAC2Bz+D,IAAzB6hG,EACIA,E9Iv8BgB,E8Iy8BtBxlB,gBACgCr8E,IAA9B8hG,EACIA,E9Iz+BiB,G8I2+BvBtjC,YAAaoc,GACX4mB,G9It+BsB,c8Io8B1BzxG,KAAKk8F,iBAAmB,KAsC1B,IAAM8V,EAAWpd,EAAU0J,UACrBU,EAAcpK,EAAUqK,aACxBC,EAActK,EAAUuK,aACxBC,EAAqBxK,EAAU3K,oBAC/BoV,EAAezK,EAAUjmD,cACzB4vD,EAAY3J,EAAUzK,gBACtB8nB,EAAWrd,EAAU/E,UACrBqiB,EAAgBtd,EAAU+J,eAC1BwT,EAAmBvd,EAAUgK,kBACnC5+F,KAAKo8F,WAAa,CAChBh4E,UAAmBnU,IAAb+hG,EAAyBA,E9I9hCZ,kB8I+hCnBtU,eACoBztF,IAAlBiiG,EAA8BA,E9Ih/BR,S8Ii/BxBjU,kBACuBhuF,IAArBkiG,EACIA,E9I7+BqB,U8Ig/B7BnyG,KAAK2vF,WACU1/E,IAAbgiG,EACIxwG,MAAMC,QAAQuwG,GACZA,EAASpL,QAAO,SAACb,EAAK94F,EAAGjM,GAAM,OAAC+kG,GAAO/kG,EAAI,EAAI,IAAMiM,KAAI,IACzD+kG,EACF,GACNjyG,KAAK47F,kBACa3rF,IAAhB+uF,EAA4Bh/F,KAAKw5C,YAAcwlD,EAAc,EAC/Dh/F,KAAK67F,kBACa5rF,IAAhBivF,EAA4Bl/F,KAAKw5C,YAAc0lD,EAAc,EAC/Dl/F,KAAK87F,yBACoB7rF,IAAvBmvF,GAAmCA,EACrCp/F,KAAK+7F,mBAAiC9rF,IAAjBovF,EAA6BA,EAAe,EACjEr/F,KAAK4vG,WAAa,CAChB5vG,KAAKw5C,YAAc+kD,EAAU,GAC7Bv+F,KAAKw5C,YAAc+kD,EAAU,SAtF/Bv+F,KAAK2vF,MAAQ,IA0FnB2e,EAtmCA,CAAsCrb,ICjCtCmf,GAKY,WALZA,GAUU,kDCVV,IAAAC,GAKe,cALfA,GAUgB,eAVhBA,GAeY,WAfZA,GAoBa,+gBCbTC,GAAqB,KAEzBC,GAAA,SAAAnuG,GASE,SAAAouG,EAAY9sC,EAAO90D,EAAKhG,EAAMiG,EAAa+wF,EAAYpzF,GAAvD,IAAAjK,EACEH,EAAAM,KAAA1E,OAAOA,YAMPuE,EAAKq0F,mBAAqB,KAM1Br0F,EAAK8hE,OAAUX,GAAQ,IAAIniE,MAEP,OAAhBsN,IAC+BtM,EAAK8hE,OAAQx1D,YAAcA,GAO9DtM,EAAK8qE,QAAU,GAMf9qE,EAAK6pF,OAAS5/E,EAMdjK,EAAK+hE,UAAY,KAMjB/hE,EAAKkuG,YAAc7Q,EAMnBr9F,EAAKknF,MAAQ7gF,EAMbrG,EAAK6hE,KAAOx1D,EAKZrM,EAAKmuG,WAkMT,OArQwBC,GAAAH,EAAApuG,GA0EtBouG,EAAAtyG,UAAA0yG,WAAA,WACE,QAAsB3iG,IAAlBjQ,KAAK0yG,UAA0B1yG,KAAKyyG,cAAgBjtC,GAAmB,CACpE8sC,KACHA,GAAqBzwF,GAAsB,EAAG,IAEhDywF,GAAmBhsF,UAAUtmB,KAAKqmE,OAAQ,EAAG,GAC7C,IACEisC,GAAmBnkC,aAAa,EAAG,EAAG,EAAG,GACzCnuE,KAAK0yG,UAAW,EAChB,MAAOntG,GACP+sG,GAAqB,KACrBtyG,KAAK0yG,UAAW,GAGpB,OAAyB,IAAlB1yG,KAAK0yG,UAMdF,EAAAtyG,UAAA2yG,qBAAA,WACE7yG,KAAKkT,cAAcc,KAMrBw+F,EAAAtyG,UAAAumE,kBAAA,WACEzmE,KAAKyyG,YAAcjtC,GACnBxlE,KAAK0mE,iBACL1mE,KAAK6yG,wBAMPL,EAAAtyG,UAAAymE,iBAAA,WACE3mE,KAAKyyG,YAAcjtC,GACfxlE,KAAKyrF,OACPzrF,KAAKqmE,OAAOp6D,MAAQjM,KAAKyrF,MAAM,GAC/BzrF,KAAKqmE,OAAOn6D,OAASlM,KAAKyrF,MAAM,IAEhCzrF,KAAKyrF,MAAQ,CAACzrF,KAAKqmE,OAAOp6D,MAAOjM,KAAKqmE,OAAOn6D,QAE/ClM,KAAK0mE,iBACL1mE,KAAK6yG,wBAOPL,EAAAtyG,UAAAolE,SAAA,SAAS7rB,GAEP,OADAz5C,KAAK8yG,cAAcr5D,GACZz5C,KAAKqvE,QAAQ51B,GAAcz5C,KAAKqvE,QAAQ51B,GAAcz5C,KAAKqmE,QAOpEmsC,EAAAtyG,UAAAqlE,cAAA,SAAc9rB,GAEZ,OADAz5C,KAAK8yG,cAAcr5D,GACZz5C,KAAKqvE,QAAQ51B,GAAcA,EAAa,GAMjD+4D,EAAAtyG,UAAAoqF,cAAA,WACE,OAAOtqF,KAAKyyG,aAMdD,EAAAtyG,UAAAmqF,qBAAA,WACE,IAAKrqF,KAAK44F,mBACR,GAAI54F,KAAK4yG,aAAc,CACrB,IAAM3mG,EAAQjM,KAAKyrF,MAAM,GACnBv/E,EAASlM,KAAKyrF,MAAM,GACpBzqE,EAAUa,GAAsB5V,EAAOC,GAC7C8U,EAAQsmD,SAAS,EAAG,EAAGr7D,EAAOC,GAC9BlM,KAAK44F,mBAAqB53E,EAAQkB,YAElCliB,KAAK44F,mBAAqB54F,KAAKqmE,OAGnC,OAAOrmE,KAAK44F,oBAOd4Z,EAAAtyG,UAAAq+C,QAAA,WACE,OAAOv+C,KAAKyrF,OAMd+mB,EAAAtyG,UAAA6yG,OAAA,WACE,OAAO/yG,KAAKomE,MAMdosC,EAAAtyG,UAAAmzB,KAAA,WACE,GAAIrzB,KAAKyyG,aAAejtC,GAAiB,CACvCxlE,KAAKyyG,YAAcjtC,GACnB,IACmCxlE,KAAKqmE,OAAQz1D,IAAM5Q,KAAKomE,KACzD,MAAO7gE,GACPvF,KAAKymE,oBAEPzmE,KAAKsmE,UAAYmB,GAAAC,YACf1nE,KAAKqmE,OACLrmE,KAAK2mE,iBAAiBvyD,KAAKpU,MAC3BA,KAAKymE,kBAAkBryD,KAAKpU,SASlCwyG,EAAAtyG,UAAA4yG,cAAA,SAAcr5D,GACZ,GACGz5C,KAAKouF,SACNpuF,KAAKqvE,QAAQ51B,IACbz5C,KAAKyyG,cAAgBjtC,GAHvB,CAQA,IAAMtjD,EAASlb,SAASC,cAAc,UACtCjH,KAAKqvE,QAAQ51B,GAAcv3B,EAE3BA,EAAOjW,MAAQ3F,KAAK8H,KAAKpO,KAAKqmE,OAAOp6D,MAAQwtC,GAC7Cv3B,EAAOhW,OAAS5F,KAAK8H,KAAKpO,KAAKqmE,OAAOn6D,OAASutC,GAE/C,IAAM2tB,EAAMllD,EAAOE,WAAW,MAQ9B,GAPAglD,EAAIthD,MAAM2zB,EAAYA,GACtB2tB,EAAI9gD,UAAUtmB,KAAKqmE,OAAQ,EAAG,GAE9Be,EAAI0F,yBAA2B,WAIM,aAAjC1F,EAAI0F,0BAA2C9sE,KAAK4yG,aACtDxrC,EAAIC,UAAY94D,GAASvO,KAAKouF,QAC9BhnB,EAAIE,SAAS,EAAG,EAAGplD,EAAOjW,MAAQwtC,EAAYv3B,EAAOhW,OAASutC,GAE9D2tB,EAAI0F,yBAA2B,iBAC/B1F,EAAI9gD,UAAUtmB,KAAKqmE,OAAQ,EAAG,OACzB,CAQL,IAPA,IAAM2sC,EAAU5rC,EAAI+G,aAAa,EAAG,EAAGjsD,EAAOjW,MAAOiW,EAAOhW,QACtD3K,EAAOyxG,EAAQzxG,KACfmM,EAAI1N,KAAKouF,OAAO,GAAK,IACrB7+E,EAAIvP,KAAKouF,OAAO,GAAK,IACrB7tF,EAAIP,KAAKouF,OAAO,GAAK,IACrB9tF,EAAIN,KAAKouF,OAAO,GAEbntF,EAAI,EAAGwG,EAAKlG,EAAKP,OAAQC,EAAIwG,EAAIxG,GAAK,EAC7CM,EAAKN,IAAMyM,EACXnM,EAAKN,EAAI,IAAMsO,EACfhO,EAAKN,EAAI,IAAMV,EACfgB,EAAKN,EAAI,IAAMX,EAEjB8mE,EAAI6rC,aAAaD,EAAS,EAAG,MASjCR,EAAAtyG,UAAAwmE,eAAA,WACM1mE,KAAKsmE,YACPtmE,KAAKsmE,YACLtmE,KAAKsmE,UAAY,OAGvBksC,EArQA,CAAwBh9F,GAAAvQ,SAgRlB,SAAUiuG,GAAIxtC,EAAO90D,EAAKhG,EAAMiG,EAAa+wF,EAAYpzF,GAC7D,IAAIkC,EAAYQ,GAAepN,IAAI8M,EAAKC,EAAarC,GAKrD,OAJKkC,IACHA,EAAY,IAAI6hG,GAAU7sC,EAAO90D,EAAKhG,EAAMiG,EAAa+wF,EAAYpzF,GACrE0C,GAAeH,IAAIH,EAAKC,EAAarC,EAAOkC,IAEvCA,geC4ITyiG,GA9XA,SAAA/uG,GAIE,SAAAgvG,EAAYvqF,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAAe,GAKzBzR,OAA8BnH,IAApBtM,EAAQyT,QAAwBzT,EAAQyT,QAAU,EAK5DzM,OAAgCsF,IAArBtM,EAAQgH,SAAyBhH,EAAQgH,SAAW,EAK/Dmb,OAA0B7V,IAAlBtM,EAAQmiB,MAAsBniB,EAAQmiB,MAAQ,EAKtD6jE,OACuB15E,IAA3BtM,EAAQgmF,gBAA+BhmF,EAAQgmF,gBAEjDplF,EAAAH,EAAAM,KAAA1E,KAAM,CACJoX,QAASA,EACTzM,SAAUA,EACVmb,MAAOA,EACPikE,kBAC2B95E,IAAzBtM,EAAQomF,aAA6BpmF,EAAQomF,aAAe,CAAC,EAAG,GAClEJ,eAAgBA,KACjB3pF,MAMI2wD,aAA6B1gD,IAAnBtM,EAAQu7B,OAAuBv7B,EAAQu7B,OAAS,CAAC,GAAK,IAMrE36B,EAAK8uG,kBAAoB,KAMzB9uG,EAAK+uG,mBACsBrjG,IAAzBtM,EAAQ4vG,aACJ5vG,EAAQ4vG,aACRlB,GAMN9tG,EAAKivG,mBACsBvjG,IAAzBtM,EAAQ8vG,aACJ9vG,EAAQ8vG,aACRrB,GAMN7tG,EAAKmvG,mBACsBzjG,IAAzBtM,EAAQgwG,aACJhwG,EAAQgwG,aACRvB,GAMN7tG,EAAK0iE,kBACqBh3D,IAAxBtM,EAAQkN,YAA4BlN,EAAQkN,YAAc,KAK5D,IAAM60D,OAAwBz1D,IAAhBtM,EAAQkiE,IAAoBliE,EAAQkiE,IAAM,KAMxDthE,EAAKqvG,SAAWjwG,EAAQkwG,QAKxB,IAAIjjG,EAAMjN,EAAQiN,IAElB/L,SAAiBoL,IAARW,GAAqB80D,GAAQ,GACtC7gE,GAAQ6gE,GAAUA,GAASnhE,EAAKqvG,SAAW,QAE9B3jG,IAARW,GAAoC,IAAfA,EAAI5P,SAAiB0kE,IAC7C90D,EAAuC80D,EAAO90D,KAAOvO,EAAOqjE,IAE9D7gE,OAAeoL,IAARW,GAAqBA,EAAI5P,OAAS,EAAG,GAK5C,IAAM4gG,OACY3xF,IAAhBtM,EAAQiN,IAAoB40D,GAAkBA,UAMhDjhE,EAAK6pF,YAA2Bn+E,IAAlBtM,EAAQ6K,MAAsBwB,GAAQrM,EAAQ6K,OAAS,KAMrEjK,EAAKuvG,WAAaC,GAAAjwG,IAChB4hE,EACuB90D,OACLX,IAAlB1L,EAAKqvG,SAAyBrvG,EAAKqvG,SAAW,KAC9CrvG,EAAK0iE,aACL26B,EACAr9F,EAAK6pF,QAOP7pF,EAAKyvG,aAA6B/jG,IAAnBtM,EAAQyF,OAAuBzF,EAAQyF,OAAS,CAAC,EAAG,GAKnE7E,EAAK0vG,mBACsBhkG,IAAzBtM,EAAQuwG,aACJvwG,EAAQuwG,aACR7B,GAMN9tG,EAAK2wE,QAAU,KAMf3wE,EAAKknF,WAAyBx7E,IAAjBtM,EAAQiH,KAAqBjH,EAAQiH,KAAO,OAgO7D,OA5XmBupG,GAAAf,EAAAhvG,GAoKjBgvG,EAAAlzG,UAAAogC,MAAA,WACE,IAAMxa,EAAQ9lB,KAAKgqF,WACnB,OAAO,IAAIopB,EAAK,CACdl0E,OAAQl/B,KAAK2wD,QAAQ5oD,QACrBwrG,aAAcvzG,KAAKszG,cACnBG,aAAczzG,KAAKwzG,cACnBG,aAAc3zG,KAAK0zG,cACnBllG,MACExO,KAAKouF,QAAUpuF,KAAKouF,OAAOrmF,MACvB/H,KAAKouF,OAAOrmF,QACZ/H,KAAKouF,aAAUn+E,EACrBY,YAAa7Q,KAAKinE,aAClB4sC,QAAS7zG,KAAK4zG,SACdxqG,OAAQpJ,KAAKg0G,QAAQjsG,QACrBmsG,aAAcl0G,KAAKi0G,cACnB78F,QAASpX,KAAKuY,aACdoxE,eAAgB3pF,KAAKiqF,oBACrBt/E,SAAU3K,KAAK2uC,cACf7oB,MAAOrkB,MAAMC,QAAQokB,GAASA,EAAM/d,QAAU+d,EAC9Clb,KAAqB,OAAf5K,KAAKyrF,MAAiBzrF,KAAKyrF,MAAM1jF,aAAUkI,EACjDW,IAAK5Q,KAAK+yG,YAUdK,EAAAlzG,UAAAkqF,UAAA,WACE,IAAIlrD,EAASl/B,KAAKqzG,kBAClB,IAAKn0E,EAAQ,CACXA,EAASl/B,KAAK2wD,QACd,IAAM/lD,EAAO5K,KAAKu+C,UAClB,GACEv+C,KAAKwzG,eAAiBpB,IACtBpyG,KAAK0zG,eAAiBtB,GACtB,CACA,IAAKxnG,EACH,OAAO,KAETs0B,EAASl/B,KAAK2wD,QAAQ5oD,QAClB/H,KAAKwzG,eAAiBpB,KACxBlzE,EAAO,IAAMt0B,EAAK,IAEhB5K,KAAK0zG,eAAiBtB,KACxBlzE,EAAO,IAAMt0B,EAAK,IAItB,GAAI5K,KAAKszG,eAAiBjB,GAAqB,CAC7C,IAAKznG,EACH,OAAO,KAELs0B,IAAWl/B,KAAK2wD,UAClBzxB,EAASl/B,KAAK2wD,QAAQ5oD,SAGtB/H,KAAKszG,eAAiBjB,IACtBryG,KAAKszG,eAAiBjB,KAEtBnzE,EAAO,IAAMA,EAAO,GAAKt0B,EAAK,IAG9B5K,KAAKszG,eAAiBjB,IACtBryG,KAAKszG,eAAiBjB,KAEtBnzE,EAAO,IAAMA,EAAO,GAAKt0B,EAAK,IAGlC5K,KAAKqzG,kBAAoBn0E,EAE3B,IAAM6qD,EAAe/pF,KAAKkqF,kBAC1B,MAAO,CAAChrD,EAAO,GAAK6qD,EAAa,GAAI7qD,EAAO,GAAK6qD,EAAa,KAUhEqpB,EAAAlzG,UAAAk0G,UAAA,SAAUl1E,GACRl/B,KAAK2wD,QAAUzxB,EACfl/B,KAAKqzG,kBAAoB,MAQ3BD,EAAAlzG,UAAA+sF,SAAA,WACE,OAAOjtF,KAAKouF,QASdglB,EAAAlzG,UAAAolE,SAAA,SAAS7rB,GACP,OAAOz5C,KAAK8zG,WAAWxuC,SAAS7rB,IASlC25D,EAAAlzG,UAAAqlE,cAAA,SAAc9rB,GACZ,OAAOz5C,KAAK8zG,WAAWvuC,cAAc9rB,IAMvC25D,EAAAlzG,UAAAqqF,aAAA,WACE,OAAOvqF,KAAK8zG,WAAWv1D,WAMzB60D,EAAAlzG,UAAAoqF,cAAA,WACE,OAAOtqF,KAAK8zG,WAAWxpB,iBAMzB8oB,EAAAlzG,UAAAmqF,qBAAA,WACE,OAAOrqF,KAAK8zG,WAAWzpB,wBAQzB+oB,EAAAlzG,UAAAi2E,UAAA,WACE,GAAIn2E,KAAKk1E,QACP,OAAOl1E,KAAKk1E,QAEd,IAAI9rE,EAASpJ,KAAKg0G,QAElB,GAAIh0G,KAAKi0G,eAAiB5B,GAAqB,CAC7C,IAAMznG,EAAO5K,KAAKu+C,UACZ81D,EAAgBr0G,KAAK8zG,WAAWv1D,UACtC,IAAK3zC,IAASypG,EACZ,OAAO,KAETjrG,EAASA,EAAOrB,QAEd/H,KAAKi0G,eAAiB5B,IACtBryG,KAAKi0G,eAAiB5B,KAEtBjpG,EAAO,GAAKirG,EAAc,GAAKzpG,EAAK,GAAKxB,EAAO,IAGhDpJ,KAAKi0G,eAAiB5B,IACtBryG,KAAKi0G,eAAiB5B,KAEtBjpG,EAAO,GAAKirG,EAAc,GAAKzpG,EAAK,GAAKxB,EAAO,IAIpD,OADApJ,KAAKk1E,QAAU9rE,EACRpJ,KAAKk1E,SAQdk+B,EAAAlzG,UAAA6yG,OAAA,WACE,OAAO/yG,KAAK8zG,WAAWf,UAQzBK,EAAAlzG,UAAAq+C,QAAA,WACE,OAAQv+C,KAAKyrF,MAAoCzrF,KAAKyrF,MAAjCzrF,KAAK8zG,WAAWv1D,WAMvC60D,EAAAlzG,UAAAyqF,kBAAA,SAAkB53E,GAChB/S,KAAK8zG,WAAW9vG,iBAAiBgQ,GAAkBjB,IAUrDqgG,EAAAlzG,UAAAmzB,KAAA,WACErzB,KAAK8zG,WAAWzgF,QAMlB+/E,EAAAlzG,UAAA0qF,oBAAA,SAAoB73E,GAClB/S,KAAK8zG,WAAW7vG,oBAAoB+P,GAAkBjB,IAE1DqgG,EA5XA,CAAmB7pB,IC/BnB,IAQM+qB,GAAqB,CACzBvtE,MAkUF,SACEwtE,EACAv1F,EACA9X,EACA6X,EACAy1F,GAEA,IAGIvJ,EAHExW,EAAavtF,EAAMo+D,WACnBsvB,EAAY1tF,EAAM2oF,UAGpB2kB,IACFD,EAAeC,EACfvJ,EACExW,GAAcG,GAAaA,EAAU/E,UAAY,QAAK5/E,GAE1D,GAAIwkF,EAAY,CACd,GAAIA,EAAWnK,iBAAmB9kB,GAChC,OAEF,IAAMivC,EAAcF,EAAa9T,WAC/Bv5F,EAAMoR,YACN0rF,IAEFyQ,EAAYjgB,cAAcC,EAAYwW,GACtCwJ,EAAYvgB,UAAUl1E,EAAUD,GAElC,GAAI61E,GAAaA,EAAU/E,UAAW,CACpC,IAAM6kB,EAAaH,EAAa9T,WAC9Bv5F,EAAMoR,YACN0rF,IAEF0Q,EAAW/f,aAAaC,EAAWqW,GACnCyJ,EAAWpgB,SAASt1E,EAAUD,KAlWhCs3C,WA0NF,SACEk+C,EACAv1F,EACA9X,EACA6X,EACAy1F,GAEA,IAAM/lC,EAAcvnE,EAAM6kF,YAC1B,GAAItd,EAAa,CACf,IAAMkmC,EAAmBJ,EAAa9T,WACpCv5F,EAAMoR,YACN0rF,IAEF2Q,EAAiBpgB,mBAAmB,KAAM9lB,GAC1CkmC,EAAiBjhB,eAAe10E,EAAUD,GAE5C,IAAM61E,EAAY1tF,EAAM2oF,UACxB,GAAI+E,GAAaA,EAAU/E,UAAW,CACpC,IAAM6kB,GAAcF,GAA6BD,GAAc9T,WAC7Dv5F,EAAMoR,YACN0rF,IAEF0Q,EAAW/f,aAAaC,GACxB8f,EAAWpgB,SAASt1E,EAAUD,KAhPhC0qB,QAwZF,SACE8qE,EACAv1F,EACA9X,EACA6X,EACAy1F,GAEA,IAAMntC,EAAYngE,EAAM0kF,UAClBnd,EAAcvnE,EAAM6kF,YAC1B,GAAI1kB,GAAaoH,EAAa,CAC5B,IAAMmmC,EAAgBL,EAAa9T,WACjCv5F,EAAMoR,YACN0rF,IAEF4Q,EAAcrgB,mBAAmBltB,EAAWoH,GAC5CmmC,EAAcxgB,YAAYp1E,EAAUD,GAEtC,IAAM61E,EAAY1tF,EAAM2oF,UACxB,GAAI+E,GAAaA,EAAU/E,UAAW,CACpC,IAAM6kB,GAAcF,GAA6BD,GAAc9T,WAC7Dv5F,EAAMoR,YACN0rF,IAEF0Q,EAAW/f,aAAaC,GACxB8f,EAAWpgB,SAASt1E,EAAUD,KA/ahC81F,WA2WF,SACEN,EACAv1F,EACA9X,EACA6X,EACAy1F,GAEA,IAGIvJ,EAHExW,EAAavtF,EAAMo+D,WACnBsvB,EAAY1tF,EAAM2oF,UAGpB2kB,IACFD,EAAeC,EACfvJ,EACExW,GAAcG,GAAaA,EAAU/E,UAAY,QAAK5/E,GAE1D,GAAIwkF,EAAY,CACd,GAAIA,EAAWnK,iBAAmB9kB,GAChC,OAEF,IAAMivC,EAAcF,EAAa9T,WAC/Bv5F,EAAMoR,YACN0rF,IAEFyQ,EAAYjgB,cAAcC,EAAYwW,GACtCwJ,EAAY3gB,eAAe90E,EAAUD,GAEvC,GAAI61E,GAAaA,EAAU/E,UAAW,CACpC,IAAM6kB,GAAcF,GAA6BD,GAAc9T,WAC7Dv5F,EAAMoR,YACN0rF,IAEF0Q,EAAW/f,aAAaC,EAAWqW,GACnCyJ,EAAWpgB,SAASt1E,EAAUD,KA3YhCm4C,gBAyPF,SACEq9C,EACAv1F,EACA9X,EACA6X,EACAy1F,GAEA,IAAM/lC,EAAcvnE,EAAM6kF,YAC1B,GAAItd,EAAa,CACf,IAAMkmC,EAAmBJ,EAAa9T,WACpCv5F,EAAMoR,YACN0rF,IAEF2Q,EAAiBpgB,mBAAmB,KAAM9lB,GAC1CkmC,EAAiB/gB,oBAAoB50E,EAAUD,GAEjD,IAAM61E,EAAY1tF,EAAM2oF,UACxB,GAAI+E,GAAaA,EAAU/E,UAAW,CACpC,IAAM6kB,GAAcF,GAA6BD,GAAc9T,WAC7Dv5F,EAAMoR,YACN0rF,IAEF0Q,EAAW/f,aAAaC,GACxB8f,EAAWpgB,SAASt1E,EAAUD,KA/QhC+1F,aA0RF,SACEP,EACAv1F,EACA9X,EACA6X,EACAy1F,GAEA,IAAMntC,EAAYngE,EAAM0kF,UAClBnd,EAAcvnE,EAAM6kF,YAC1B,GAAItd,GAAepH,EAAW,CAC5B,IAAMutC,EAAgBL,EAAa9T,WACjCv5F,EAAMoR,YACN0rF,IAEF4Q,EAAcrgB,mBAAmBltB,EAAWoH,GAC5CmmC,EAAc5gB,iBAAiBh1E,EAAUD,GAE3C,IAAM61E,EAAY1tF,EAAM2oF,UACxB,GAAI+E,GAAaA,EAAU/E,UAAW,CACpC,IAAM6kB,GAAcF,GAA6BD,GAAc9T,WAC7Dv5F,EAAMoR,YACN0rF,IAEF0Q,EAAW/f,aAAaC,GACxB8f,EAAWpgB,SAASt1E,EAAUD,KAjThCg2F,mBAyLF,SACEC,EACAh2F,EACA9X,EACA6X,EACAy1F,GAEA,IACIvzG,EAAGwG,EADDkpG,EAAa3xF,EAAS4xF,qBAE5B,IAAK3vG,EAAI,EAAGwG,EAAKkpG,EAAW3vG,OAAQC,EAAIwG,IAAMxG,EAAG,EAE/Cg0G,EADyBX,GAAmB3D,EAAW1vG,GAAG0gC,YAExDqzE,EACArE,EAAW1vG,GACXiG,EACA6X,EACAy1F,KAxMJjV,OAsCF,SACEgV,EACAv1F,EACA9X,EACA6X,EACAy1F,GAEA,IAAMntC,EAAYngE,EAAM0kF,UAClBnd,EAAcvnE,EAAM6kF,YAC1B,GAAI1kB,GAAaoH,EAAa,CAC5B,IAAMymC,EAAeX,EAAa9T,WAChCv5F,EAAMoR,YACN0rF,IAEFkR,EAAa3gB,mBAAmBltB,EAAWoH,GAC3CymC,EAAa7hB,WAAWr0E,EAAUD,GAEpC,IAAM61E,EAAY1tF,EAAM2oF,UACxB,GAAI+E,GAAaA,EAAU/E,UAAW,CACpC,IAAM6kB,GAAcF,GAA6BD,GAAc9T,WAC7Dv5F,EAAMoR,YACN0rF,IAEF0Q,EAAW/f,aAAaC,GACxB8f,EAAWpgB,SAASt1E,EAAUD,MAtD5B,SAAUo2F,GAAaC,EAAUC,GACrC,OAAO3lG,SAASrN,EAAO+yG,GAAW,IAAM1lG,SAASrN,EAAOgzG,GAAW,IAkB/D,SAAUC,GAAa5qG,EAAY+uC,GACvC,MA5CyB,GA4CI/uC,EAAc+uC,EAgDvC,SAAU87D,GACdP,EACAj2F,EACA7X,EACAi5B,EACAptB,EACAqtB,EACAo0E,GAEA,IAAIr2D,GAAU,EACRs2C,EAAavtF,EAAMo+D,WACzB,GAAImvB,EAAY,CACd,IAAImN,EAAanN,EAAWnK,gBACxBsX,GAAcp8B,IAAqBo8B,GAAcp8B,GACnDivB,EAAW7J,oBAAoB73E,IAE3B6uF,GAAcp8B,IAChBivB,EAAWphE,OAEbuuE,EAAanN,EAAWnK,gBACxBmK,EAAW9J,kBAAkB53E,GAC7BorC,GAAU,GAYd,OAWF,SACE62D,EACAj2F,EACA7X,EACAi5B,EACAC,EACAo0E,GAEA,IAAMx1F,EAAW9X,EAAM+oF,qBAAN/oF,CAA4B6X,GAC7C,IAAKC,EACH,OAEF,IAAMgkB,EAAqBhkB,EAAS0hB,oBAClCP,EACAC,GAGF,GADiBl5B,EAAM6U,cAErBy5F,GAAeR,EAAahyE,EAAoB97B,EAAO6X,OAClD,EAELk2F,EADyBX,GAAmBtxE,EAAmBrB,YAE7DqzE,EACAhyE,EACA97B,EACA6X,EACAy1F,IA9CJiB,CACET,EACAj2F,EACA7X,EACAi5B,EACAC,EACAo0E,GAGKr2D,EAgDT,SAASq3D,GAAeR,EAAah2F,EAAU9X,EAAO6X,GACpD,GAAIC,EAAS2iB,WAAa7N,GAUXkhF,EAAYvU,WAAWv5F,EAAMoR,YAAa0rF,IAClD7Q,WACuDn0E,EAC5DD,EACA7X,EAAM6U,cACN7U,EAAM8oF,gCAVN,IAJA,IAAM2gB,EAEF3xF,EACA02F,gBACKz0G,EAAI,EAAGwG,EAAKkpG,EAAW3vG,OAAQC,EAAIwG,IAAMxG,EAChDu0G,GAAeR,EAAarE,EAAW1vG,GAAIiG,EAAO6X,ieCzJxD42F,GAAA,SAAAvxG,GAIE,SAAAwxG,EAAYC,GAAZ,IAAAtxG,EACEH,EAAAM,KAAA1E,KAAM61G,IAAY71G,YAGlBuE,EAAKuxG,6BAA+BvxG,EAAKwxG,wBAAwB3hG,KAAK7P,GAKtEA,EAAKyxG,wBAMLzxG,EAAK0xG,QAAS,EAKd1xG,EAAK2xG,uBAAyB,KAK9B3xG,EAAK4xG,kBAAoB,KAMzB5xG,EAAK6xG,mBAAoB,EAMzB7xG,EAAK8xG,oBAAsBn1E,IAM3B38B,EAAK+xG,gB3KmGA,CAACxtG,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,G2K7FrCvE,EAAKgyG,uB3K6FA,CAACztG,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,G2KvFrCvE,EAAKiyG,kBAMLjyG,EAAKkyG,gBAAkB,KAMvBlyG,EAAKmyG,oBAAsB,KAM3BnyG,EAAKoyG,qBAAuB,KAM5BpyG,EAAKqyG,aAAe,KAMpBryG,EAAKsyG,oBAAqB,EAK1BtyG,EAAK68F,uBAAyB,KAM9B78F,EAAKuyG,UAAW,IA8mBpB,OAltBwCC,GAAAnB,EAAAxxG,GA4GtCwxG,EAAA11G,UAAA82G,aAAA,SAAaC,EAAep7F,EAAYmuF,GACtC,IAAMziG,EAASsU,EAAWtU,OACpB4S,EAAY0B,EAAW1B,UACvB1P,EAAS0P,EAAU1P,OACnBC,EAAayP,EAAUzP,WACvB8S,EAAarD,EAAUqD,WACvB7S,EAAWwP,EAAUxP,SACrBmT,EAAmBN,EAAW/E,YAC9By+F,EAAel3G,KAAKyhG,WAAWrmF,YAC/Bq+B,EAAa59B,EAAW49B,WACxB8F,EAAY1jC,EAAW0jC,UACvBkpD,IACJlpD,EAAU9qB,KAAuB8qB,EAAU9qB,KAEvCzT,EAAUhhB,KAAKghB,QACf/U,EAAQ3F,KAAK0H,MAAM6N,EAAWjR,KAAK,GAAK6uC,GACxCvtC,EAAS5F,KAAK0H,MAAM6N,EAAWjR,KAAK,GAAK6uC,GAEzC3C,EAAaogE,EAAat3F,YAAcpC,EAAWC,WACnDC,EAAao5B,EAAa3sC,GAAS2T,GAAoB,KACvDq5F,EAAWrgE,EACbxwC,KAAK8H,MAAM7G,EAAO,GAAKuW,EAAiB,IAAMJ,GAAc,EAC5D,EACA05F,EAAQtgE,EACRxwC,KAAK4H,OAAO3G,EAAO,GAAKuW,EAAiB,IAAMJ,GAC/C,EACJ,EAAG,CACD,IAAMtY,EAAYpF,KAAKyjG,mBACrBh5F,EACAC,EACAC,EACA8uC,EACAxtC,EACAC,EACAkrG,EAAQ15F,GAEVu5F,EAAchL,QACZjrF,EACA,EACA5b,EACAuF,EACA89F,OACAx4F,EACA+5F,WAEOoN,EAAQD,IAOrBvB,EAAA11G,UAAA0nB,gBAAA,SAAgB/L,GACV7b,KAAKohG,wBACPphG,KAAKg3G,aACHh3G,KAAKohG,uBACLvlF,EACAA,EAAW4kC,gBAWjBm1D,EAAA11G,UAAA+b,YAAA,SAAYJ,EAAYhb,GACtB,IAAM44C,EAAa59B,EAAW49B,WACxBv/B,EAAa2B,EAAWQ,iBAAiBR,EAAW4L,a9KhExD,SAAoB5mB,EAAQ8E,EAAGC,GAC5BT,EAAItE,EAAQ8E,EAAG,EAAG,EAAGC,EAAG,EAAG,G8KkEhCyxG,CAAUr3G,KAAKkiG,eAAgB,EAAIzoD,EAAY,EAAIA,GACnDjzC,EAAYxG,KAAK+gB,sBAAuB/gB,KAAKkiG,gBAE7C,IAAMiH,EAAkBviG,EAAkB5G,KAAKkiG,gBAE/CliG,KAAK0iG,aACH7hG,EACAsoG,EACAjvF,EAAW9C,QACXpX,KAAK+X,cAAc8D,IAErB,IAAMmF,EAAUhhB,KAAKghB,QACfkB,EAASlB,EAAQkB,OAEjB8yF,EAAch1G,KAAK42G,aACnBxV,EAAyBphG,KAAKohG,uBACpC,KACI4T,GAAeA,EAAYzjF,cAC3B6vE,GAA0BA,EAAuB7vE,WAEnD,OAAO,KAIT,IAAMtlB,EAAQ3F,KAAK0H,MAAM6N,EAAWjR,KAAK,GAAK6uC,GACxCvtC,EAAS5F,KAAK0H,MAAM6N,EAAWjR,KAAK,GAAK6uC,GAC3Cv3B,EAAOjW,OAASA,GAASiW,EAAOhW,QAAUA,GAC5CgW,EAAOjW,MAAQA,EACfiW,EAAOhW,OAASA,EACZgW,EAAOhb,MAAM9B,YAAc+jG,IAC7BjnF,EAAOhb,MAAM9B,UAAY+jG,IAEjBnpG,KAAKmiG,iBACfnhF,EAAQwhF,UAAU,EAAG,EAAGv2F,EAAOC,GAGjClM,KAAKujG,UAAUviF,EAASnF,GAExB,IAAM1B,EAAY0B,EAAW1B,UACvBqD,EAAarD,EAAUqD,WAGzB85F,GAAU,EACVz8F,GAAS,EACb,GAAIX,EAAW3S,QAAUvH,KAAK82G,SAAU,CACtC,IAAMnT,EAAcpnE,GAAeriB,EAAW3S,OAAQiW,IAEtD85F,GADAz8F,EAAShP,GAAiB83F,EAAa9nF,EAAWtU,WAC7Bc,EAAes7F,EAAa9nF,EAAWtU,UAE1DvH,KAAKgjG,cAAchiF,EAASnF,EAAY8nF,GAIxC9oF,GACF7a,KAAKg3G,aAAahC,EAAan5F,GAG7By7F,GACFt2F,EAAQuF,UAGVvmB,KAAKwjG,WAAWxiF,EAASnF,GAEzB,IAAMzE,EAAUwK,GAAW1H,EAAW9C,SAChC0P,EAAY9mB,KAAK8mB,UASvB,OARI1P,IAAY0P,EAAU5f,MAAMkQ,UAC9B0P,EAAU5f,MAAMkQ,QAAUA,GAGxBpX,KAAKw2G,oBAAsBr8F,EAAUxP,WACvC3K,KAAKw2G,kBAAoBr8F,EAAUxP,SACnC3K,KAAKk2G,uBAAyB,MAEzBl2G,KAAK8mB,WAQd8uF,EAAA11G,UAAAsb,YAAA,SAAYC,GACV,OAAO,IAAIC,QAKT,SAAUC,GACR,IAAK3b,KAAKk2G,yBAA2Bl2G,KAAKg2G,wBAAyB,CACjE,IAAMprG,EAAO,CAAC5K,KAAKghB,QAAQkB,OAAOjW,MAAOjM,KAAKghB,QAAQkB,OAAOhW,QAC7DzG,EAAMzF,KAAKkiG,eAAgBt3F,GAC3B,IAAMH,EAASzK,KAAKy2G,gBACd/rG,EAAa1K,KAAKq2G,oBAClB1rG,EAAW3K,KAAKw2G,kBAChBh5F,EAAaxd,KAAK02G,oBAClBnvG,EAASvH,KAAKu2G,uBACdn+F,EAAQpY,KAAKyhG,WACb8V,EAAa,GACbtrG,EC3TqB,GD2TbrB,EAAK,GACbsB,EC5TqB,GD4TZtB,EAAK,GACpB2sG,EAAWprG,KACTnM,KAAKyjG,mBACHh5F,EACAC,EACAC,ECjUuB,GDmUvBsB,EACAC,EACA,GACAnE,SAEJ,IAAMtB,EAAS2R,EAAMgD,YACf0C,EAAmBN,EAAW/E,YACpC,GACEhS,EAAOmZ,YACPpC,EAAWC,aACVpV,EAAeyV,EAAkBvW,GAClC,CAKA,IAJA,IAAIihC,EAASjhC,EAAO,GACdmW,EAAavT,GAAS2T,GACxBs5F,EAAQ,EACR/oE,OAAO,EACJ7F,EAAS1qB,EAAiB,IAE/BuwB,EAAU3wB,IADR05F,EAEFG,EAAWprG,KACTnM,KAAKyjG,mBACHh5F,EACAC,EACAC,EC1VmB,GD4VnBsB,EACAC,EACAmiC,GACAtmC,SAEJygC,GAAU9qB,EAIZ,IAFA05F,EAAQ,EACR5uE,EAASjhC,EAAO,GACTihC,EAAS1qB,EAAiB,IAE/BuwB,EAAU3wB,IADR05F,EAEFG,EAAWprG,KACTnM,KAAKyjG,mBACHh5F,EACAC,EACAC,EC5WmB,GD8WnBsB,EACAC,EACAmiC,GACAtmC,SAEJygC,GAAU9qB,EAId1d,KAAKk2G,uBCvWT,SACJtrG,EACA2sG,EACAv6D,EACA40C,EACArqF,EACAmD,EACAC,GAEA,IAEMqW,EAAUa,GA3BmB,GAyBrBjX,EAAK,GAzBgB,GA0BpBA,EAAK,IAEpBoW,EAAQqqD,uBAAwB,EAahC,IAZA,IAAMnpD,EAASlB,EAAQkB,OACjB+7B,EAAW,IAAIu5D,GAAAvyG,QACnB+b,EA/BiC,GAiCjCzZ,EACA,KACAoD,GAEI8sG,EAAez6D,EAASh8C,OAExB02G,EAAcpxG,KAAK4H,MAAO,SAAuBupG,GACjDE,EAAmB,GAChB12G,EAAI,EAAGA,GAAKw2G,IAAgBx2G,EAAG,CACtC,IAAM8d,EAAUi+B,EAAS/7C,EAAI,GACvB22G,EAAuB74F,EAAQ61C,oBAAsBg9B,EAC3D,GAAKA,EAAL,CAGA,IAAIimB,EAASD,EAAqB74F,EAASrU,GAC3C,GAAKmtG,EAAL,CAGKp2G,MAAMC,QAAQm2G,KACjBA,EAAS,CAACA,IAIZ,IAFA,IACMrpG,EAAQ,KAAO,UADPvN,EAAIy2G,GACoB57D,SAAS,KAAK/zC,OAAM,GACjDyX,EAAI,EAAGqlB,EAAKgzE,EAAO72G,OAAQwe,EAAIqlB,IAAMrlB,EAAG,CAC/C,IAAMs4F,EAAgBD,EAAOr4F,GACvBR,EAAW84F,EAAc7nB,qBAAd6nB,CAAoC/4F,GACrD,GAAKC,GAAanT,GAAWtE,EAAQyX,EAASvG,aAA9C,CAGA,IAAMvR,EAAQ4wG,EAAcx3E,QACtB4qD,EAAOhkF,EAAM0kF,UACfV,GACFA,EAAKmD,SAAS7/E,GAEhB,IAAMmgE,EAASznE,EAAM6kF,YACjBpd,IACFA,EAAO0f,SAAS7/E,GAChBmgE,EAAO6e,YAAY,OAErBtmF,EAAMkpF,aAAQngF,GACd,IAAMy1D,EAAQoyC,EAAcxyC,WAC5B,GAAII,GAAgC,IAAvBA,EAAMntD,aAAoB,CACrC,IAAMs7F,EAAUnuC,EAAM6kB,eACtB,IAAKspB,EACH,SAGF,IAAMkE,EAAal2F,GACjBgyF,EAAQ,GACRA,EAAQ,QACR5jG,EACA,CAACs8E,OAAO,IAEJ1mB,EAAMkyC,EAAW71F,OACvB61F,EAAW1wC,UAAY74D,EACvBupG,EAAWzwC,SAAS,EAAG,EAAGzB,EAAI55D,MAAO45D,EAAI35D,QACzChF,EAAM0/D,SACJ,IAAIoxC,GAAA/yG,QAAK,CACP4gE,IAAKA,EACLguC,QAASA,EACT30E,OAAQwmC,EAAM0kB,YACdqpB,aAAcrB,GACduB,aAAcvB,GACdhpG,OAAQs8D,EAAMyQ,YACd/+D,QAAS,EACTxM,KAAM86D,EAAMnnB,UACZz4B,MAAO4/C,EAAMskB,WACbr/E,SAAU+6D,EAAM/2B,cAChBg7C,eAAgBjkB,EAAMukB,uBAI5B,IAAM3yE,EAASpQ,EAAMoR,aAAe,GAChC2/F,EAAiBN,EAAiBrgG,MAEpC2gG,EAAiB,GACjBN,EAAiBrgG,GAAU2gG,EAC3BA,EAAenkF,IAAwB,GACvCmkF,EAAenkF,IAAuB,GACtCmkF,EAAenkF,IAA4B,GAC3CmkF,EAAenkF,IAAsB,IAEvCmkF,EAAej5F,EAAS2iB,UAAUrH,QAAQ,QAAS,KAAKnuB,KACtD6S,EACA9X,OAQN,IAHA,IAAMgxG,EAAat0G,OAAOiQ,KAAK8jG,GAC5B9nG,IAAIC,QACJoQ,KAAK7f,GACQoH,GAAPxG,EAAI,EAAQi3G,EAAWl3G,QAAQC,EAAIwG,IAAMxG,EAAG,CACnD,IAAMg3G,EAAiBN,EAAiBO,EAAWj3G,IACnD,IAAK,IAAMoQ,KAAQ4mG,EACjB,CAAA,IAAME,EAAeF,EAAe5mG,GACpC,IAASmO,EAAI,EAAGqlB,EAAKszE,EAAan3G,OAAQwe,EAAIqlB,EAAIrlB,GAAK,EAAG,CACxDy+B,EAAS0W,SAASwjD,EAAa34F,EAAI,IACnC,IAAK,IAAI6f,EAAI,EAAG+4E,EAAKb,EAAWv2G,OAAQq+B,EAAI+4E,IAAM/4E,EAChD4e,EAASh4B,aAAasxF,EAAWl4E,IACjC4e,EAASm1C,aAAa+kB,EAAa34F,MAK3C,OAAOwB,EAAQmtD,aAAa,EAAG,EAAGjsD,EAAOjW,MAAOiW,EAAOhW,QD6OjBmsG,CAC5BztG,EACA2sG,EACAv3G,KAAKm2G,kBACL/9F,EAAMw8C,mBACNrtD,EACAmD,EACAC,GAGJgR,EC3OF,SAAoBF,EAAOuhC,EAAU6wD,GACzC,IAAMyK,EAAiB,GACvB,GAAIzK,EAAW,CACb,IAAMloG,EAAIW,KAAK4H,MAzJkB,GAyJZ5H,KAAK0H,MAAMyN,EAAM,KAChC7V,EAAIU,KAAK4H,MA1JkB,GA0JZ5H,KAAK0H,MAAMyN,EAAM,KAIhC3H,EAGJ,GAFCrH,GAAM9G,EAAG,EAAGkoG,EAAU5hG,MAAQ,GAC7BQ,GAAM7G,EAAG,EAAGioG,EAAU3hG,OAAS,GAAK2hG,EAAU5hG,OAE5CyB,EAAImgG,EAAUtsG,KAAKuS,GACnBvE,EAAIs+F,EAAUtsG,KAAKuS,EAAQ,GAE3B7S,EADI4sG,EAAUtsG,KAAKuS,EAAQ,GACnB,KAAOvE,EAAI,IAAM7B,GACzBgqG,EAAcpxG,KAAK4H,MAAO,SAAuB8uC,EAASh8C,QAC5DC,GAAKA,EAAIy2G,GAAgB,GAC3BY,EAAensG,KAAK6wC,EAAS/7C,EAAIy2G,EAAc,IAGnD,OAAOY,EDuNCC,CAAU98F,EAAOzb,KAAKm2G,kBAAmBn2G,KAAKk2G,0BAEhD9hG,KAAKpU,QAaX41G,EAAA11G,UAAAse,2BAAA,SACE9Y,EACAmW,EACA4C,EACA/U,EACA2V,GALF,IAAA9a,EAAAvE,KAOE,GAAKA,KAAK42G,aAAV,CAGA,IA0CI93F,EA1CEpU,EAAamR,EAAW1B,UAAUzP,WAClCC,EAAWkR,EAAW1B,UAAUxP,SAChCyN,EAAQpY,KAAKyhG,WAGbzkD,EAAW,GAQX4wD,EAAkB,SAAU7uF,EAASC,EAAUiB,GACnD,IAAM3Q,EAAMjN,EAAO0c,GACbjc,EAAQk6C,EAAS1tC,GACvB,GAAKxM,GAcE,IAAc,IAAVA,GAAkBmd,EAAand,EAAMmd,WAAY,CAC1D,GAAmB,IAAfA,EAGF,OAFA+8B,EAAS1tC,IAAO,EAChB+P,EAAQtL,OAAOsL,EAAQm5F,YAAY11G,GAAQ,GACpC4G,EAASqV,EAAS3G,EAAO4G,GAElClc,EAAMkc,SAAWA,EACjBlc,EAAMmd,WAAaA,OArBT,CACV,GAAmB,IAAfA,EAEF,OADA+8B,EAAS1tC,IAAO,EACT5F,EAASqV,EAAS3G,EAAO4G,GAElCK,EAAQlT,KACL6wC,EAAS1tC,GAAO,CACfyP,QAASA,EACT3G,MAAOA,EACP4G,SAAUA,EACViB,WAAYA,EACZvW,SAAUA,MAgBZ+uG,EAAiB,CAACz4G,KAAK42G,cAkB7B,OAjBI52G,KAAKohG,wBACPqX,EAAetsG,KAAKnM,KAAKohG,wBAE3BqX,EAAen8F,MAAK,SAAC26F,GACnB,OAAQn4F,EAASm4F,EAAcz4F,2BAC7B9Y,EACAgF,EACAC,EACA8T,EACAmvF,EACAqJ,IAAkB1yG,EAAK68F,wBACrBvlF,EAAW4kC,cACT5kC,EAAW4kC,cAAc4gC,MAAMxxE,KAAI,SAAC0Z,GAAS,OAAAA,EAAK3hB,SAClD,SAIDkX,IAMT82F,EAAA11G,UAAAigD,mBAAA,WACE,IAAM/nC,EAAQpY,KAAKyhG,WACfrpF,EAAMI,cAAgBxY,KAAK42G,cAC7Bx+F,EAAMjD,WASVygG,EAAA11G,UAAA61G,wBAAA,SAAwB5iG,GACtBnT,KAAK0hG,2BAQPkU,EAAA11G,UAAA8b,aAAA,SAAaH,GACX,IAAMg6F,EAAc71G,KAAKyhG,WACnByV,EAAerB,EAAYz6F,YACjC,IAAK87F,EACH,OAAO,EAGT,IAAMwB,EAAY78F,EAAW0jC,UAAU9qB,IACjCkkF,EAAc98F,EAAW0jC,UAAU9qB,IACnCo8D,EAAuBglB,EAAYrkB,0BACnCV,EAAyB+kB,EAAYpkB,4BAE3C,IACIzxF,KAAKi2G,SAAWplB,GAAwB6nB,IACxC5nB,GAA0B6nB,EAG5B,OADA34G,KAAKg2G,yBAA0B,GACxB,EAETh2G,KAAKg2G,yBAA0B,EAE/B,IAAM4C,EAAmB/8F,EAAWtU,OAC9B4S,EAAY0B,EAAW1B,UACvBqD,EAAarD,EAAUqD,WACvB9S,EAAayP,EAAUzP,WACvB+uC,EAAa59B,EAAW49B,WACxBo/D,EAAsBhD,EAAYzgG,cAClC0jG,EAA0BjD,EAAYvkB,kBACxCynB,EAAyBlD,EAAYtkB,sBAEVthF,IAA3B8oG,IACFA,EAAyB5D,IAG3B,IAAM1qG,EAAS0P,EAAU1P,OAAO1C,QAC1BR,EAASI,EACbixG,EACAE,EAA0BpuG,GAEtBsuG,EAAiBzxG,EAAOQ,QACxBkxG,EAAc,CAAC1xG,EAAOQ,SACtB+V,EAAmBN,EAAW/E,YAEpC,GACEy+F,EAAat3F,YACbpC,EAAWC,aACVpV,EAAeyV,EAAkBjC,EAAWtU,QAC7C,CAMA,IAAMmW,EAAavT,GAAS2T,GACtB6uD,EAASrmE,KAAKkD,IAAIW,GAAS5C,GAAU,EAAGmW,GAC9CnW,EAAO,GAAKuW,EAAiB,GAAK6uD,EAClCplE,EAAO,GAAKuW,EAAiB,GAAK6uD,EAClCpvD,GAAgB9S,EAAQ+S,GACxB,IAAM07F,E3KiRN,SAAgB3xG,EAAQiW,GAC5B,IAAMM,EAAmBN,EAAW/E,YAC9BhO,EAASJ,GAAU9C,GACzB,GACEiW,EAAWC,aACVhT,EAAO,GAAKqT,EAAiB,IAAMrT,EAAO,IAAMqT,EAAiB,IAClE,CACA,IAAMJ,EAAavT,GAAS2T,GAItB1U,EAHa9C,KAAK4H,OACrBzD,EAAO,GAAKqT,EAAiB,IAAMJ,GAEVA,EAC5BnW,EAAO,IAAM6B,EACb7B,EAAO,IAAM6B,EAEf,OAAO7B,E2KhSgB4xG,CAAYF,EAAY,GAAIz7F,GAG7C07F,EAAW,GAAKp7F,EAAiB,IACjCo7F,EAAW,GAAKp7F,EAAiB,GAEjCm7F,EAAY9sG,KAAK,CACf+sG,EAAW,GAAKx7F,EAChBw7F,EAAW,GACXA,EAAW,GAAKx7F,EAChBw7F,EAAW,KAGbA,EAAW,GAAKp7F,EAAiB,IACjCo7F,EAAW,GAAKp7F,EAAiB,IAEjCm7F,EAAY9sG,KAAK,CACf+sG,EAAW,GAAKx7F,EAChBw7F,EAAW,GACXA,EAAW,GAAKx7F,EAChBw7F,EAAW,KAKjB,IACGl5G,KAAKi2G,QACNj2G,KAAKq2G,qBAAuB3rG,GAC5B1K,KAAKo2G,mBAAqByC,GAC1B74G,KAAK22G,sBAAwBoC,GAC7B1wG,EAAerI,KAAKu2G,uBAAwBhvG,GAQ5C,OANK5F,EAAO3B,KAAKs2G,gBAAiB0C,KAChCh5G,KAAKk2G,uBAAyB,KAC9Bl2G,KAAKs2G,gBAAkB0C,GAEzBh5G,KAAKy2G,gBAAkBhsG,EACvBzK,KAAK62G,oBAAqB,GACnB,EAGT72G,KAAK42G,aAAe,KAEpB52G,KAAKi2G,QAAS,EAEd,IAOImD,EAPEpE,EAAc,IAAIlV,GACtBwV,GAAmB5qG,EAAY+uC,GAC/BlyC,EACAmD,EACA+uC,GAIEz5C,KAAKyhG,WAAWpQ,iBAClB+nB,EAAwB,IAAItZ,GAC1BwV,GAAmB5qG,EAAY+uC,GAC/BlyC,EACAmD,EACA+uC,IAIJ,IACI4/D,EADExlE,EAAiB3X,KAEvB,GAAI2X,EAAgB,CAClB,IAAK,IAAI5yC,EAAI,EAAGwG,EAAKwxG,EAAYj4G,OAAQC,EAAIwG,IAAMxG,EAAG,CACpD,IACMq4G,EAAah9E,GADJ28E,EAAYh4G,GACauc,GACxC05F,EAAatuB,aACX0wB,EACA98E,GAAiB9xB,EAAY8S,GAC7Bq2B,GAGJwlE,EAAgBz+E,GAA4BiZ,EAAgBr2B,QAE5D,IAASvc,EAAI,EAAGwG,EAAKwxG,EAAYj4G,OAAQC,EAAIwG,IAAMxG,EACjDi2G,EAAatuB,aAAaqwB,EAAYh4G,GAAIyJ,EAAY8S,GAI1D,IAAM2iB,EDplBJ,SAA8Bz1B,EAAY+uC,GAC9C,IAAM/X,EAAY4zE,GAAa5qG,EAAY+uC,GAC3C,OAAO/X,EAAYA,ECklBQ63E,CAA0B7uG,EAAY+uC,GAEzD5+B,EAKJ,SAAUkE,GACR,IAAI84F,EACEjmB,EACJ7yE,EAAQ61C,oBAAsBihD,EAAYjhD,mBAI5C,GAHIg9B,IACFimB,EAASjmB,EAAc7yE,EAASrU,IAE9BmtG,EAAQ,CACV,IAAM2B,EAAQx5G,KAAKy5G,cACjB16F,EACAohB,EACA03E,EACA7C,EACAqE,EACAD,GAEFp5G,KAAKi2G,OAASj2G,KAAKi2G,QAAUuD,IAE/BplG,KAAKpU,MAEH05G,EAAap9E,GAAa/0B,EAAQiW,GAElCw/B,EAAWk6D,EAAapvB,oBAAoB4xB,GAC9CX,GACF/7D,EAAS98B,KAAK64F,GAEhB,IAAS93G,EAAI,EAAGwG,EAAKu1C,EAASh8C,OAAQC,EAAIwG,IAAMxG,EAC9C4Z,EAAOmiC,EAAS/7C,IAElBjB,KAAKm2G,kBAAoBn5D,EAEzB,IAAM28D,EAA0B3E,EAAYje,SACtCkgB,EAAgB,IAAI7I,GACxB7mG,EACAmD,EACA+uC,EACAy9D,EAAa3uB,cACboxB,EACA9D,EAAYvkB,mBAyBd,OAtBI8nB,IACFp5G,KAAKohG,uBAAyB,IAAIgN,GAChC7mG,EACAmD,EACA+uC,EACAy9D,EAAa3uB,cACb6wB,EAAsBriB,SACtB8e,EAAYvkB,oBAIhBtxF,KAAKq2G,oBAAsB3rG,EAC3B1K,KAAKo2G,kBAAoByC,EACzB74G,KAAK22G,qBAAuBoC,EAC5B/4G,KAAKs2G,gBAAkB0C,EACvBh5G,KAAKu2G,uBAAyBhvG,EAC9BvH,KAAKy2G,gBAAkBhsG,EACvBzK,KAAK02G,oBAAsBl5F,EAC3Bxd,KAAK42G,aAAeK,EACpBj3G,KAAKk2G,uBAAyB,KAE9Bl2G,KAAK62G,oBAAqB,GACnB,GAYTjB,EAAA11G,UAAAu5G,cAAA,SACE16F,EACAohB,EACA03E,EACAtD,EACAn0E,EACAo0E,GAEA,IAAKqD,EACH,OAAO,EAET,IAAI15D,GAAU,EACd,GAAI18C,MAAMC,QAAQm2G,GAChB,IAAK,IAAI52G,EAAI,EAAGwG,EAAKowG,EAAO72G,OAAQC,EAAIwG,IAAMxG,EAC5Ck9C,EACEo3D,GACEhB,EACAx1F,EACA84F,EAAO52G,GACPk/B,EACAngC,KAAK81G,6BACL11E,EACAo0E,IACGr2D,OAGTA,EAAUo3D,GACRhB,EACAx1F,EACA84F,EACA13E,EACAngC,KAAK81G,6BACL11E,EACAo0E,GAGJ,OAAOr2D,GAEXy3D,EAltBA,CAAwCgE,GAAA30G,SAotBxC40G,GAAelE,6dEnuBfmE,GAbA,SAAA11G,GAIE,SAAA21G,EAAYlxF,GACV,OAAAzkB,EAAAM,KAAA1E,KAAM6oB,IAAN7oB,KAMJ,OAX0Bg6G,GAAAD,EAAA31G,GAQxB21G,EAAA75G,UAAAsc,eAAA,WACE,OAAO,IAAIy9F,GAAAh1G,QAA0BjF,OAEzC+5G,EAXA,CAA0BG,GAAAj1G,+FCd1B,IAAAk1G,GACW,UADXA,GAE8B,mfCuJ9BC,GAnGA,SAAAh2G,GAIE,SAAAi2G,EAAYxxF,GAAZ,IAAAtkB,EAAAvE,KACQ2D,EAAUklB,GAA4B,GAEtCtO,EAAc5I,GAAO,GAAIhO,iBAExB4W,EAAY+/F,eACZ//F,EAAYggG,wBACnBh2G,EAAAH,EAAAM,KAAA1E,KAAMua,IAANva,MAKK2U,GAKLpQ,EAAKsQ,KAKLtQ,EAAKwQ,GAELxQ,EAAKi2G,gBAA+BvqG,IAApBtM,EAAQ22G,QAAwB32G,EAAQ22G,QAAU,GAClE/1G,EAAKk2G,+BACgCxqG,IAAnCtM,EAAQ42G,wBACJ52G,EAAQ42G,0BAkElB,OAjG4BG,GAAAL,EAAAj2G,GA0C1Bi2G,EAAAn6G,UAAAy6G,WAAA,WACE,OAA8B36G,KAAK8D,IAAIq2G,KASzCE,EAAAn6G,UAAAs6G,WAAA,SAAWF,GACTt6G,KAAK+Q,IAAIopG,GAAsBG,IASjCD,EAAAn6G,UAAA06G,0BAAA,WACE,OACE56G,KAAK8D,IAAIq2G,KAUbE,EAAAn6G,UAAAu6G,0BAAA,SAA0BF,GACxBv6G,KAAK+Q,IAAIopG,GAAyCI,IAmBpDF,EAAAn6G,UAAA0b,QAAA,SAAQH,GACN,OAAOrX,EAAAlE,UAAM0b,QAAOlX,KAAA1E,KAACyb,IAEzB4+F,EAjGA,CAA4B36F,GAAAza,ghBCxB5B41G,GAAA,SAAAz2G,GAIE,SAAA02G,EAAYC,GAAZ,IAAAx2G,EACEH,EAAAM,KAAA1E,KAAM+6G,IAAU/6G,YAMhBuE,EAAKy2G,eAAgB,EAMrBz2G,EAAK+xG,gBAAkB,KAMvB/xG,EAAK02G,mBAML12G,EAAK22G,mBAAqB,KAM1B32G,EAAK42G,iBAML52G,EAAK62G,cAAgB,GAMrB72G,EAAK82G,WAAY,EAMjB92G,EAAK+2G,UhLyGA,CAACxyG,EAAAA,EAAUA,EAAAA,GAAU,EAAA,GAAW,EAAA,GgLnGrCvE,EAAKg3G,cAAgB,IAAI/mC,GAAU,EAAG,EAAG,EAAG,KAqoBhD,OAhsBsCgnC,GAAAV,EAAA12G,GAmEpC02G,EAAA56G,UAAAu7G,eAAA,SAAe1oF,GACb,IAAMgoF,EAAY/6G,KAAKyhG,WACjB9lB,EAAY5oD,EAAKzX,WACjBi/F,EAAyBQ,EAAUH,4BACzC,OACEj/B,GAAa1pD,IACb0pD,GAAa1pD,IACZ0pD,GAAa1pD,KAAoBsoF,GAWtCO,EAAA56G,UAAA+4E,QAAA,SAAQ/hC,EAAGvxC,EAAGC,EAAGiW,GACf,IAAM49B,EAAa59B,EAAW49B,WACxBj8B,EAAa3B,EAAW1B,UAAUqD,WAClCu9F,EAAY/6G,KAAKyhG,WAEnB1uE,EADegoF,EAAU3/F,YACP69D,QAAQ/hC,EAAGvxC,EAAGC,EAAG6zC,EAAYj8B,GAanD,OAZIuV,EAAKzX,YAAc2W,KAChB8oF,EAAUH,4BAGJG,EAAUJ,aAAe,IAElC36G,KAAKq7G,WAAY,GAHjBtoF,EAAKgyC,SAAS9yC,KAMbjyB,KAAKy7G,eAAe1oF,KACvBA,EAAOA,EAAK6xC,kBAEP7xC,GAOT+nF,EAAA56G,UAAA0b,QAAA,SAAQH,GACN,IAAMI,EAAa7b,KAAK6b,WACxB,IAAKA,EACH,OAAO,KAGT,IAAMzD,EAAQpY,KAAKyhG,WACb/7F,EAAaD,EACjBoW,EAAW0C,2BACX9C,EAAM1T,SAGF47F,EAAcvrF,EAAMK,YAC1B,GAAIkrF,IACGx7F,EAAmBw7F,EAAaj+F,GACnC,OAAO,KAWX,IAPA,IAAM+zC,EAAa59B,EAAW49B,WACxBj8B,EAAa3B,EAAW1B,UAAUqD,WAClCrD,EAAY0B,EAAW1B,UACvB1T,EAAS2R,EAAMiD,kBACfob,EAAWhwB,EAAO0yE,yBAAyBh/D,EAAUqD,YACrD26D,EAAiB1xE,EAAO2yE,kBAAkBv9D,EAAW49B,YAGrDvC,EAAIzgB,EAAS05C,kBAAkBh2D,EAAUzP,YAC7CwsC,GAAKzgB,EAAS7d,eACZs+B,EACF,CACA,IAAMmtB,EAAY5tC,EAASsgD,yBAAyBrxE,EAAYwxC,GAC1DnkB,EAAOtsB,EAAOwyE,QAClB/hC,EACAmtB,EAAU,GACVA,EAAU,GACV5qB,EACAj8B,GAEF,KAAMuV,aAAgB2pD,GAAAz3E,SAAa8tB,aAAgB4qD,GAAA14E,SACjD,OAAO,KAGT,GAAI8tB,EAAKzX,aAAe2W,GAAxB,CAIA,IAAMypF,EAAajlF,EAAS0/C,UAAUj/B,GAChCs+B,EAAWt9B,GAAOzhB,EAASi6C,YAAYx5B,IACvCzjB,EAAiBgD,EAAS2X,cAAc8I,GAExCorD,EAAMh8F,KAAK4H,MACfiqE,IACIzyE,EAAW,GAAKg2G,EAAW,IAAMjoF,EACjC4wC,EAAU,GAAKmR,EAAS,KAGxB+sB,EAAMj8F,KAAK4H,MACfiqE,IACIujC,EAAW,GAAKh2G,EAAW,IAAM+tB,EACjC4wC,EAAU,GAAKmR,EAAS,KAG9B,OAAOx1E,KAAKmuE,aAAap7C,EAAKuyC,WAAYg9B,EAAKC,IAGjD,OAAO,MASTuY,EAAA56G,UAAAohG,mBAAA,SAAmBC,EAAOnnF,EAAM2Y,GAC9B,QAAI/yB,KAAKy7G,eAAe1oF,IACf3uB,EAAAlE,UAAMohG,mBAAkB58F,KAAA1E,KAACuhG,EAAOnnF,EAAM2Y,IAUjD+nF,EAAA56G,UAAA8b,aAAA,SAAaH,GACX,QAAS7b,KAAKyhG,WAAWrmF,aAS3B0/F,EAAA56G,UAAA+b,YAAA,SAAYJ,EAAYhb,GACtB,IAAMqZ,EAAa2B,EAAWQ,iBAAiBR,EAAW4L,YACpDtN,EAAY0B,EAAW1B,UACvBqD,EAAarD,EAAUqD,WACvBm+F,EAAiBxhG,EAAUzP,WAC3BkxG,EAAazhG,EAAU1P,OACvBE,EAAWwP,EAAUxP,SACrB8uC,EAAa59B,EAAW49B,WAExBshE,EAAY/6G,KAAKyhG,WACjBoa,EAAad,EAAU3/F,YACvB0gG,EAAiBD,EAAWzmG,cAC5BqhB,EAAWolF,EAAW1iC,yBAAyB37D,GAC/C05B,EAAIzgB,EAAS05C,kBAAkBwrC,EAAgBE,EAAWrjC,YAC1D/kD,EAAiBgD,EAAS2X,cAAc8I,GAE1C3vC,EAASsU,EAAWtU,OAClBo8F,EACJzpF,EAAW3S,QAAUg1B,GAAeriB,EAAW3S,OAAQiW,GACrDmmF,IACFp8F,EAASoE,GACPpE,EACAg1B,GAAeriB,EAAW3S,OAAQiW,KAItC,IAAM26D,EAAiB0jC,EAAWziC,kBAAkB3/B,GAGhDxtC,EAAQ3F,KAAK0H,MAAM6N,EAAWjR,KAAK,GAAKutE,GACxCjsE,EAAS5F,KAAK0H,MAAM6N,EAAWjR,KAAK,GAAKutE,GAE7C,GAAIxtE,EAAU,CACZ,IAAMC,EAAOtE,KAAK0H,MAAM1H,KAAKutB,KAAK5nB,EAAQA,EAAQC,EAASA,IAC3DD,EAAQrB,EACRsB,EAAStB,EAGX,IAAM3C,EAAMwrB,EAAiBxnB,EAAS,EAAIksE,EACpCjwE,EAAMurB,EAAiBvnB,EAAU,EAAIisE,EACrC4jC,EAAe,CACnBH,EAAW,GAAK3zG,EAChB2zG,EAAW,GAAK1zG,EAChB0zG,EAAW,GAAK3zG,EAChB2zG,EAAW,GAAK1zG,GAGZgsE,EAAYz9C,EAAS45C,0BAA0B9oE,EAAQ2vC,GAKvD8kE,EAAiB,GACvBA,EAAe9kE,GAAK,GAEpB,IAAM+kE,EAAkBj8G,KAAKwhG,uBAC3Bqa,EACAr+F,EACAw+F,GAGIV,EAAYt7G,KAAKs7G,UACjBY,EAAel8G,KAAKu7G,cAC1Bv7G,KAAKq7G,WAAY,EACjB,IAAK,IAAI11G,EAAIuuE,EAAUzrE,KAAM9C,GAAKuuE,EAAUvrE,OAAQhD,EAClD,IAAK,IAAIC,EAAIsuE,EAAUxrE,KAAM9C,GAAKsuE,EAAUtrE,OAAQhD,EAAG,CACrD,IAAMmtB,EAAO/yB,KAAKi5E,QAAQ/hC,EAAGvxC,EAAGC,EAAGiW,GACnC,GAAI7b,KAAKy7G,eAAe1oF,GAAO,CAC7B,IAAM2oD,EAAMr5E,EAAOrC,MACnB,GAAI+yB,EAAKzX,YAAc2W,GAAkB,CACvC+pF,EAAe9kE,GAAGnkB,EAAKsxC,UAAUvoB,YAAc/oB,EAC/C,IAAMkyC,EAAelyC,EAAKkyC,aAAayW,GAEpC17E,KAAKq7G,YACLp2C,IAAqD,IAArCjlE,KAAKo7G,cAAcz6G,QAAQoyB,KAE5C/yB,KAAKq7G,WAAY,GAGrB,GAA4C,IAAxCtoF,EAAKiyC,SAAS0W,EAAK7/D,EAAW4jC,MAEhC,SAIJ,IAAM08D,EAAiB1lF,EAAS2/C,2BAC9BrjD,EAAKsxC,UACL63C,EACAZ,GAGEziC,GAAU,EACVsjC,IACFtjC,EAAUojC,EAAgB/kE,EAAI,EAAGilE,IAE9BtjC,GACHpiD,EAASu/C,gCACPjjD,EAAKsxC,UACL43C,EACAC,EACAZ,GAMR,IAAMc,EAAc3oF,EAAiBkoF,EAGrC91G,EACE7F,KAAKkiG,eACLrmF,EAAWjR,KAAK,GAAK,EACrBiR,EAAWjR,KAAK,GAAK,EACrB,EAAIutE,EACJ,EAAIA,EACJxtE,GACCsB,EAAQ,GACRC,EAAS,GAGZ,IAAMi9F,EAAkBviG,EAAkB5G,KAAKkiG,gBAE/CliG,KAAK0iG,aACH7hG,EACAsoG,EACAjvF,EAAW9C,QACXpX,KAAK+X,cAAc8D,IAErB,IAAMmF,EAAUhhB,KAAKghB,QACfkB,EAASlB,EAAQkB,OAEvB1b,EAAYxG,KAAK+gB,sBAAuB/gB,KAAKkiG,gBAG7Cr8F,EACE7F,KAAKiiG,cACLh2F,EAAQ,EACRC,EAAS,EACTkwG,EACAA,EACA,GACCnwG,EAAQ,GACRC,EAAS,GAGRgW,EAAOjW,OAASA,GAASiW,EAAOhW,QAAUA,GAC5CgW,EAAOjW,MAAQA,EACfiW,EAAOhW,OAASA,GACNlM,KAAKmiG,iBACfnhF,EAAQwhF,UAAU,EAAG,EAAGv2F,EAAOC,GAG7By3F,GACF3jG,KAAKgjG,cAAchiF,EAASnF,EAAY8nF,GAGrCkY,EAAWjoC,kBACdjiE,GAAOqP,EAASoqD,IAGlBprE,KAAKujG,UAAUviF,EAASnF,GAExB7b,KAAKo7G,cAAcp6G,OAAS,EAE5B,IAGIq7G,EAAOC,EAAQC,EAHftO,EAAKrqG,OAAOiQ,KAAKmoG,GAAgBnsG,IAAIC,QACzCm+F,EAAG/tF,KAAK7f,GAIiB,IAAvB6Z,EAAW9C,SACTpX,KAAKmiG,kBACL0Z,EAAW7iC,UAAUn9D,EAAW1B,UAAUqD,aAI5C6+F,EAAQ,GACRC,EAAS,IAHTrO,EAAKA,EAAGhX,UAKV,IAAK,IAAIh2F,EAAIgtG,EAAGjtG,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACvC,IAAMu7G,EAAWvO,EAAGhtG,GACdw7G,EAAuBZ,EAAWxiC,iBACtCmjC,EACA/iE,EACAj8B,GAGIk/F,EADoBjmF,EAAS2X,cAAcouE,GACR/oF,EACnCkpF,GAAKF,EAAqB,GAAKC,EAAeN,EAC9CQ,GAAKH,EAAqB,GAAKC,EAAeN,EAC9CS,GAAkBpmF,EAASsgD,yBAC/BhtE,GAAWgyG,GACXS,GAEIM,GAAmBrmF,EAASm5C,mBAAmBitC,IAC/CnT,GAASjkG,EAAezF,KAAKiiG,cAAe,CAC/C9pB,GAAkB2kC,GAAiB,GAAKf,EAAa,IACpDtoF,EACD0kD,GAAkB4jC,EAAa,GAAKe,GAAiB,IACpDrpF,IAEEspF,GACJ5kC,EAAiB0jC,EAAW/iC,uBAAuBt7D,GAC/Cw/F,GAAchB,EAAeQ,GACnC,IAAK,IAAM5jC,MAAgBokC,GAAa,CACtC,IAGM34C,IAHAtxC,EACJiqF,GAAYpkC,KAESvU,UAGjB44C,GAASJ,GAAgB,GAAKx4C,GAAU,GACxC64C,GAAQ52G,KAAK0H,MAAM07F,GAAO,IAAMuT,GAAS,GAAKN,IAC9CQ,GAASN,GAAgB,GAAKx4C,GAAU,GACxC+4C,GAAQ92G,KAAK0H,MAAM07F,GAAO,IAAMyT,GAAS,GAAKP,IAG9Ch3F,GAAIs3F,IAFJv3G,EAAIW,KAAK0H,MAAM07F,GAAO,GAAKuT,GAASN,KAGpC92F,GAAIu3F,IAFJx3G,EAAIU,KAAK0H,MAAM07F,GAAO,GAAKyT,GAASP,KAGpCp4C,GAAattB,IAAMslE,EAIrBa,IAAe,EACnB,KAHMp4C,EACJT,IAA+D,IAAjDzxC,EAAKiyC,SAAS3iE,EAAOrC,MAAO6b,EAAW4jC,OAGrD,GAAI48D,EAAO,CAETE,EAAc,CAAC52G,EAAGC,EAAGD,EAAIigB,GAAGhgB,EAAGD,EAAIigB,GAAGhgB,EAAIigB,GAAGlgB,EAAGC,EAAIigB,IACpD,IAAK,IAAIkmF,GAAI,EAAGtkG,GAAK40G,EAAMr7G,OAAQ+qG,GAAItkG,KAAMskG,GAC3C,GAAI70D,IAAMslE,GAAYA,EAAWF,EAAOvQ,IAAI,CAC1C,IAAM9/B,GAAOowC,EAAMtQ,IAEjBlgG,GACE,CAAClG,EAAGC,EAAGD,EAAIigB,GAAGhgB,EAAIigB,IAClB,CAAComD,GAAK,GAAIA,GAAK,GAAIA,GAAK,GAAIA,GAAK,OAG9BoxC,KACHr8F,EAAQ+E,OACRs3F,IAAe,GAEjBr8F,EAAQ6qD,YAER7qD,EAAQ8qD,OAAOywC,EAAY,GAAIA,EAAY,IAC3Cv7F,EAAQ+qD,OAAOwwC,EAAY,GAAIA,EAAY,IAC3Cv7F,EAAQ+qD,OAAOwwC,EAAY,GAAIA,EAAY,IAC3Cv7F,EAAQ+qD,OAAOwwC,EAAY,GAAIA,EAAY,IAE3Cv7F,EAAQ8qD,OAAOG,GAAK,GAAIA,GAAK,IAC7BjrD,EAAQ+qD,OAAOE,GAAK,GAAIA,GAAK,IAC7BjrD,EAAQ+qD,OAAOE,GAAK,GAAIA,GAAK,IAC7BjrD,EAAQ+qD,OAAOE,GAAK,GAAIA,GAAK,IAC7BjrD,EAAQirD,QAIdowC,EAAMlwG,KAAKowG,GACXD,EAAOnwG,KAAKqwG,QAEZx7F,EAAQwhF,UAAU78F,EAAGC,EAAGggB,GAAGC,IAG/B7lB,KAAKs9G,cACHvqF,EACAlX,EACAlW,EACAC,EACAggB,GACAC,GACAk3F,GACAv4C,IAEE63C,IAAUp3C,GACRo4C,IACFr8F,EAAQuF,UAEVvmB,KAAKo7G,cAAcmC,QAAQxqF,IAE3B/yB,KAAKo7G,cAAcjvG,KAAK4mB,GAE1B/yB,KAAKw9G,gBAAgB3hG,EAAW6kC,UAAWm7D,EAAY9oF,IAI3D/yB,KAAKm7G,iBAAmBW,EACxB97G,KAAKgiG,mBAAqBvuE,EAC1BzzB,KAAKg7G,eACFh7G,KAAKs2G,kBAAoBrtG,GAAOjJ,KAAKs2G,gBAAiByF,GACzD/7G,KAAKs2G,gBAAkByF,EACvB/7G,KAAKi7G,mBAAqBxhE,EAC1Bz5C,KAAKk7G,mBAAqB19F,EAE1Bxd,KAAKy9G,kBACH5hG,EACAggG,EACAplF,EACAgjB,EACAj8B,EACAjW,EACA2vC,EACA6jE,EAAUJ,cAEZ36G,KAAK09G,oBAAoB7hG,EAAYggG,GAErC77G,KAAKwjG,WAAWxiF,EAASnF,GAErB3B,EAAW3S,QACbyZ,EAAQuF,UAEV5U,GAAOqP,EAASuqD,IAEZ49B,IAAoBjnF,EAAOhb,MAAM9B,YACnC8c,EAAOhb,MAAM9B,UAAY+jG,GAE3B,IAAM/xF,GAAUwK,GAAW1H,EAAW9C,SAChC0P,GAAY9mB,KAAK8mB,UAKvB,OAJI1P,KAAY0P,GAAU5f,MAAMkQ,UAC9B0P,GAAU5f,MAAMkQ,QAAUA,IAGrBpX,KAAK8mB,WAadg0F,EAAA56G,UAAAo9G,cAAA,SAAcvqF,EAAMlX,EAAYlW,EAAGC,EAAGggB,EAAGC,EAAG8mD,EAAQnI,GAClD,IAAMkB,EAAQ1lE,KAAK29G,aAAa5qF,GAChC,GAAK2yC,EAAL,CAGA,IAAMgW,EAAMr5E,EAAOrC,MACbusF,EAAQ/nB,EAAazxC,EAAKiyC,SAAS0W,EAAK7/D,EAAW4jC,MAAQ,EAC3Dm+D,EAAerxB,IAAUvsF,KAAKghB,QAAQgF,YACxC43F,IACF59G,KAAKghB,QAAQ+E,OACb/lB,KAAKghB,QAAQgF,YAAcumE,GAE7BvsF,KAAKghB,QAAQsF,UACXo/C,EACAiH,EACAA,EACAjH,EAAMz5D,MAAQ,EAAI0gE,EAClBjH,EAAMx5D,OAAS,EAAIygE,EACnBhnE,EACAC,EACAggB,EACAC,GAGE+3F,GACF59G,KAAKghB,QAAQuF,UAED,IAAVgmE,EACF1wE,EAAW+yB,SAAU,EACZ41B,GACTzxC,EAAKmyC,cAAcwW,KAOvBo/B,EAAA56G,UAAAolE,SAAA,WACE,IAAMtkD,EAAUhhB,KAAKghB,QACrB,OAAOA,EAAUA,EAAQkB,OAAS,MASpC44F,EAAA56G,UAAAy9G,aAAA,SAAa5qF,GACX,OAAOA,EAAKuyC,YAQdw1C,EAAA56G,UAAAw9G,oBAAA,SAAoBG,EAAYC,GAC9B,GAAIA,EAAWttG,iBAAkB,CAM/B,IAAMutG,EAAqB,SAAUlC,EAAYhsG,EAAKgM,GACpD,IAAM0X,EAAgBlxB,EAAOw5G,GACzBtoF,KAAiB1X,EAAW6kC,WAC9Bm7D,EAAWtqC,YACT11D,EAAW1B,UAAUqD,WACrB3B,EAAW6kC,UAAUntB,KAGzBnf,KAAK,KAAM0pG,GAEbD,EAAWt9F,oBAAoBpU,KAE3B4xG,KAYRjD,EAAA56G,UAAAs9G,gBAAA,SAAgB98D,EAAWm7D,EAAY9oF,GAErC,IAAMQ,EAAgBlxB,EAAOw5G,GACvBtoF,KAAiBmtB,IACrBA,EAAUntB,GAAiB,IAE7BmtB,EAAUntB,GAAeR,EAAKT,WAAY,GAqB5CwoF,EAAA56G,UAAAu9G,kBAAA,SACE5hG,EACAggG,EACAplF,EACAgjB,EACAj8B,EACAjW,EACAi1G,EACAlC,EACA0D,GAEA,IAAMzqF,EAAgBlxB,EAAOw5G,GACvBtoF,KAAiB1X,EAAW6X,cAChC7X,EAAW6X,YAAYH,GAAiB,IAE1C,IAIIR,EAAMmhD,EAAWzgD,EAAgB9tB,EAAGC,EAAGsxC,EAJrCxjB,EAAc7X,EAAW6X,YAAYH,GACrC8rB,EAAYxjC,EAAWwjC,UAEzBs6B,EAAY,EAEhB,IAAKziC,EAHWzgB,EAAS7d,aAGPs+B,GAAKslE,IAAYtlE,EAGjC,IAFAg9B,EAAYz9C,EAAS45C,0BAA0B9oE,EAAQ2vC,EAAGg9B,GAC1DzgD,EAAiBgD,EAAS2X,cAAc8I,GACnCvxC,EAAIuuE,EAAUzrE,KAAM9C,GAAKuuE,EAAUvrE,OAAQhD,EAC9C,IAAKC,EAAIsuE,EAAUxrE,KAAM9C,GAAKsuE,EAAUtrE,OAAQhD,EAC1C42G,EAAWtlE,GAAKojE,KAChB3gC,GACF5mD,EAAO8oF,EAAW5iC,QAAQ/hC,EAAGvxC,EAAGC,EAAG6zC,EAAYj8B,IACtClC,YAAc2W,KACrByB,EAAYX,EAAKT,WAAY,EACxB+sB,EAAU7tB,YAAYuB,EAAKT,WAC9B+sB,EAAUtuB,QAAQ,CAChBgC,EACAQ,EACAkD,EAASkgD,mBAAmB5jD,EAAKsxC,WACjC5wC,UAImBxjB,IAArB+tG,GACFA,EAAiBjrF,IAGnB8oF,EAAWjiC,QAAQ1iC,EAAGvxC,EAAGC,EAAG4X,GAKpCq+F,EAAWniC,gBAAgBC,EAAWn8D,IAE1Cs9F,EAhsBA,CAAsClB,GAAA30G,SAksBtCg5G,GAAepD,6dCxsBfqD,GAbA,SAAA95G,GAIE,SAAA+5G,EAAYt1F,GACV,OAAAzkB,EAAAM,KAAA1E,KAAM6oB,IAAN7oB,KAMJ,OAXwBo+G,GAAAD,EAAA/5G,GAQtB+5G,EAAAj+G,UAAAsc,eAAA,WACE,OAAO,IAAI6hG,GAAAp5G,QAAwBjF,OAEvCm+G,EAXA,CAAwBG,GAAAr5G,SCPxB,MAAMs5G,GAAQ,CACZloD,WAAc,IAAIm6B,GAAM,CACtB7hB,OAAQ,IAAI2f,GAAO,CACjB9/E,MAAO,UACPvC,MAAO,MAGXirD,gBAAmB,IAAIs5B,GAAM,CAC3B7hB,OAAQ,IAAI2f,GAAO,CACjB9/E,MAAO,UACPvC,MAAO,OAKD,IAAIuyG,EAAAv5G,QAAI,CAChBpE,OAAQ,MACRupB,OAAQ,CACR,IAAIq0F,GAAAx5G,QAAU,CACZwB,OAAQ,IAAIi4G,GAAAz5G,QAAO,CACjBmT,MAAO,yBAGX,IAAIumG,GAAA15G,QAAY,CACdwB,OAAQ,IAAIm4G,GAAA35G,QAAa,CACvBi2E,IAAK,oCACL2I,OAAQ,IAAIg7B,GAAA55G,UAEdiC,MAAO,SAAU6X,GACf,OAAOw/F,GAAMx/F,EAAQ0sC,cAAc9pB,cAGvC,IAAIg9E,GAAA15G,QAAY,CACdwB,OAAQ,IAAIm4G,GAAA35G,QAAa,CACvBi2E,IAAK,gCACL2I,OAAQ,IAAIg7B,GAAA55G,UAEdiC,MAAO,SAAU6X,GACf,OAAOw/F,GAAMx/F,EAAQ0sC,cAAc9pB,cAGvC,IAAIg9E,GAAA15G,QAAY,CACdwB,OAAQ,IAAIm4G,GAAA35G,QAAa,CACvBi2E,IAAK,wBACL2I,OAAQ,IAAIg7B,GAAA55G,UAEdiC,MAAO,SAAU6X,GACf,OAAOw/F,GAAMx/F,EAAQ0sC,cAAc9pB,cAGvC,IAAIg9E,GAAA15G,QAAY,CACdwB,OAAQ,IAAIm4G,GAAA35G,QAAa,CACvBi2E,IAAK,sBACL2I,OAAQ,IAAIg7B,GAAA55G,UAEdiC,MAAO,SAAU6X,GACf,OAAOw/F,GAAMx/F,EAAQ0sC,cAAc9pB,eAIvCoX,KAAM,IAAIC,GAAA/zC,QAAK,CACbwF,QlIqUqB/E,GkIrUF,EAAC,OAAS,SlIsUjCo0B,KACO8B,GACLl2B,GACA,iBACmBuK,IAAnBspE,GAA+BA,GAAiB,ckIzU9Cn/D,KAAM,OlIoUN,IAAqB1U,GAAY6zE","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/string.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XMLFeature.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/GPX.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/source/Stamen.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","run_map.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {includes} from '../array.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [opt_options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/GeometryLayout.js\").default} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = horizontalTextAlign(\n      textIsArray ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport GPX from 'ol/format/GPX';\nimport Stamen from 'ol/source/Stamen';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport {Vector as VectorLayer} from 'ol/layer';\nimport TileLayer from 'ol/layer/Tile';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from 'ol/style';\nimport {fromLonLat} from 'ol/proj'\n\nconst style = {\n  'LineString': new Style({\n    stroke: new Stroke({\n      color: '#FAA500',\n      width: 2,\n    }),\n  }),\n  'MultiLineString': new Style({\n    stroke: new Stroke({\n      color: '#FAA500',\n      width: 2,\n    }),\n  }),\n};\n\nconst map = new Map({\n    target: 'map',\n    layers: [\n    new TileLayer({\n      source: new Stamen({\n        layer: 'terrain-background',\n      }),\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'cleaned_threlkeld_old_railway.gpx',\n        format: new GPX(),\n      }),\n      style: function (feature) {\n        return style[feature.getGeometry().getType()];\n      },\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'cleaned_derwentwater_loop.gpx',\n        format: new GPX(),\n      }),\n      style: function (feature) {\n        return style[feature.getGeometry().getType()];\n      },\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'cleaned_blaeberry.gpx',\n        format: new GPX(),\n      }),\n      style: function (feature) {\n        return style[feature.getGeometry().getType()];\n      },\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'cleaned_la_trig.gpx',\n        format: new GPX(),\n      }),\n      style: function (feature) {\n        return style[feature.getGeometry().getType()];\n      },\n  })\n    ],\n    view: new View({\n      center: fromLonLat([-3.0068, 54.4792]),\n      zoom: 11\n    })\n  });"],"names":["$3273ed08087da3da$export$2e2bcd8739ae039","Disposable","this","disposed","prototype","dispose","disposeInternal","$b998d41b678ed5d1$export$4e734a3b32fb971b","a","b","$b998d41b678ed5d1$export$ee2e0f811dca1807","arr","obj","indexOf","$b998d41b678ed5d1$export$8a3786cc03fdb777","target","direction","n","length","i","$b998d41b678ed5d1$export$292cfa960964f0e0","begin","end","tmp","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","Array","isArray","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","ol_uid","String","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","$67c66761d21428d0$export$39dfd62a25e0fe93","match","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$40658b5e833b516b$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","call","name","$40658b5e833b516b$var$__extends","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$exports","default","$e22e7611e69f42a9$var$transformStringDiv","$e22e7611e69f42a9$export$adaa4cf7ef1b65be","transform","c","d","e","f","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","coordinate","x","y","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","source","mat","det","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$2f35615121725455$export$2e2bcd8739ae039","$dab4245bc22b806c$export$2e2bcd8739ae039","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","extent","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","ii","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$ab1029bcae9ddb4a","value","opt_extent","$6da4c8ed3074c92b$export$9cd59f9826255e47","slice","$6da4c8ed3074c92b$export$cbe64c389534206f","dx","dy","$6da4c8ed3074c92b$export$ac68c24d37ca240f","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$30570204156ffd18","flatCoordinates","offset","stride","$6da4c8ed3074c92b$export$f1dab130b92b85a9","min","max","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","$6da4c8ed3074c92b$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","exp","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","log","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","PI","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","r","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$6b000a049d919fe5$export$a81f732198733497","decimals","factor","pow","round","$6b000a049d919fe5$export$a3fe094919f356fd","floor","$6b000a049d919fe5$export$803ce6b71a0a94b2","ceil","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$322346e1ff7894ca$export$3004f64547af360e","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$322346e1ff7894ca$export$a3295358bff77e","map","Number","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","undefined","$f351daabfe6e2d22$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$f351daabfe6e2d22$var$getKey","set","setSize","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$e881b5dca21eb5d4$export$2e2bcd8739ae039","$beaefe87199bb537$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","$beaefe87199bb537$export$dd1bc94b04021eeb","$08c28d22c0cb5a39$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$294047c5e65f31a3$export$2e2bcd8739ae039","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$1f093ab5083c8a1f$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","changed","getRevision","len","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","$08c28d22c0cb5a39$exports","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$1f093ab5083c8a1f$exports","$f6d1853b3fcae320$export$2e2bcd8739ae039","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer","background_","background","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$57c5f0299cb9b82f$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$b68b3d6e32e3074a$exports","$f5e92a4d985a2824$export$2e2bcd8739ae039","$98f5bfe3c4864f05$export$2e2bcd8739ae039","$534f30fce11effcd$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$57c5f0299cb9b82f$exports","$ff7180bdd45ebb19$export$24be126cb0a7bbeb","number","opt_precision","numberString","toFixed","decimal","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","$1bd0a226f9a16141$export$bb628a54ab399bc9","cosAngle","sinAngle","$1bd0a226f9a16141$export$39a9ce3624977b84","projection","canWrapX","worldWidth","worldsAway","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","$b370ab32454a96fd$var$MapRenderer","MapRenderer","map_","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","j","layer1","$534f30fce11effcd$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$ce07df6d5d4656f1$export$52ec625a6a53b6a6","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","$d4aabc5c971073f1$export$e21b4112fdc612fc","$d4aabc5c971073f1$export$40a9eeef55665a40","$d4aabc5c971073f1$export$1d36981fcadac93b","console","warn","$d4aabc5c971073f1$var$measureFont","measureElement","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","$d4aabc5c971073f1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$d4aabc5c971073f1$export$4feaf6852ff92513","metrics","$d4aabc5c971073f1$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d4aabc5c971073f1$export$915c7ba51467308f","$d4aabc5c971073f1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$d4aabc5c971073f1$var$executeLabelInstructions","drawImage","restore","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$ce07df6d5d4656f1$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","event_1","$b80dddceb0c42ad4$exports","declutterLayers","previousElement","layerIndex","sourceState","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$075f937d7366f1a2$export$caeacfe04f52533a","getDataAtPixel","$b370ab32454a96fd$exports","$161dd067fe2d672c$export$2e2bcd8739ae039","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$0b703156bb914e6f$export$2f5ff21d758d25a7","$0b703156bb914e6f$var$__extends","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$931ffc4e747c14db$exports","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$var$MapBrowserEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$a1b91f073c6a6c43$export$2e2bcd8739ae039","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent1","$a1b91f073c6a6c43$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","$07fa325567004bb7$export$2e2bcd8739ae039","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b8291d9739c3c64e$export$2e2bcd8739ae039","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$419865bd7211e6e7$export$2e2bcd8739ae039","$03edbd434a9e6608$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","$03edbd434a9e6608$export$2e2bcd8739ae039","$7d362782b4ccb93d$export$2e2bcd8739ae039","$d35baefbe89be4c5$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$9c4744460e43e41b$var$showCoordinateWarning","$9c4744460e43e41b$export$ed949affbc7c4223","opt_disable","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$f5ec5c943d804ecb$export$e16d8520af44a096","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$9c4744460e43e41b$export$eeb8392580a05a37","projections","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$11b5dd198626e1de$export$3988ae62b71be9a3","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$3973b77d5f6f2790","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","$9c4744460e43e41b$export$96bfd09e2cffb006","$9c4744460e43e41b$export$494be3a3a25689ca","$9c4744460e43e41b$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$c7ccf7e681a9b333$export$929e5a82286172a6","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$42282ac5c8474df1$export$2e2bcd8739ae039","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","$14c6e714516e527b$export$bb628a54ab399bc9","anchor","anchorX","anchorY","k","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$var$Geometry","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$6da4c8ed3074c92b$export$6a4fe494c558c238","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$50db89a00eb954f6$export$2e2bcd8739ae039","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry","$c76e993e57efc8c4$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$50db89a00eb954f6$exports","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$8780aae6970f5f65$export$cedb9900c0b225c2","simplifiedEnds","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$5454470599558ddd$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$548636579b4087f2$var$__extends","getArea","$c76e993e57efc8c4$exports","$6eced4c969949f6b$var$Point","Point","$6eced4c969949f6b$var$__extends","$6b086aa46281540d$export$60815ead40ec79ab","$6eced4c969949f6b$export$2e2bcd8739ae039","$239aa88e7a573859$export$cedabedc7ac0e138","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$3e64078bffae1cbd$export$4b80e395e36b5a56","ret","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$a6a5a7a461419425","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$155dc783a4ec227e$export$741858880c96b18c","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$40aa8d43bbe572bf$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$6eced4c969949f6b$exports","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","getRadius","startAngle","$70364d0195659942$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","$70364d0195659942$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$70364d0195659942$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$70364d0195659942$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$70364d0195659942$export$ee75376562060184","setHint","updateAnimations_","$70364d0195659942$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$70364d0195659942$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$40aa8d43bbe572bf$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$bac43a1f4a628548$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$2e2bcd8739ae039","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$a71a825ff42fb8e1","$cceb59c4bc2a46b0$var$removeLayerMapProperty","$0b703156bb914e6f$exports","$cceb59c4bc2a46b0$var$setLayerMapProperty","$cceb59c4bc2a46b0$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$6085d006f9d0efe2$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control","target_","$b978dafe8f7d27ff$var$__extends","mapEvent","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$b978dafe8f7d27ff$exports","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$cf1eb502962d87a8$var$isPointerDraggingEvent","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","centroid","$cf1eb502962d87a8$exports","update","$1bd0a226f9a16141$export$dcdf75081b88279d","getDistance","getAngle","centerpx","$c11585da26a016db$export$2e2bcd8739ae039","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom","out_","out","$afc7f51010a5b660$var$__extends","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$b4471d80e1d69273$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$fdc8b40501c0cf45$export$ebe90cb607ad99e","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$9fd014ab6df63665$export$bb06ddfd5d66e02e","styles_1","$9fd014ab6df63665$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","$9fd014ab6df63665$var$__extends","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","$43ed5485a1d0c509$export$687ff82efd78795b","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$b998d41b678ed5d1$export$2e0ae67339d5f1ac","$43ed5485a1d0c509$export$8f44c3c220ef6f09","extrapolate","lo","hi","m0","$bf04349d827c1d16$export$153f8c6b4d8caebc","$292e4002746c8223$var$LineString","LineString","flatMidpoint_","flatMidpointRevision_","$292e4002746c8223$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$292e4002746c8223$export$2e2bcd8739ae039","$b4c0e2e13beea46e$var$MultiLineString","MultiLineString","lineStrings","$b4c0e2e13beea46e$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$43ed5485a1d0c509$export$6a3300857e9ef453","getLineString","$292e4002746c8223$exports","getLineStrings","getFlatMidpoints","midpoints","$acee589e5b390c5c$export$fdb1d8e850bf7937","$b4c0e2e13beea46e$export$2e2bcd8739ae039","$ec084d0ff9c13a22$export$2e2bcd8739ae039","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$ec084d0ff9c13a22$export$7beeea566b560d4","write","transformed","power_1","$fdcc6dd70a9488b9$export$2e2bcd8739ae039","$a4f89edd2ef65182$export$7094a064528c7fee","namespaceURI","qualifiedName","$a4f89edd2ef65182$export$f65ca476c09acec0","createElementNS","$a4f89edd2ef65182$export$b089dda0fde13047","normalizeWhitespace","$a4f89edd2ef65182$export$caa0047a9c11e135","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","$a4f89edd2ef65182$export$62858bae88b53fd0","$a4f89edd2ef65182$export$98e6a39c04603d36","xml","DOMParser","parseFromString","$a4f89edd2ef65182$export$18ed2f5932a1b385","valueReader","objectStack","$a4f89edd2ef65182$export$b69a91976ee81208","opt_property","localName","$a4f89edd2ef65182$export$77b73fc7f982cc07","nodeWriter","$a4f89edd2ef65182$export$fa227189764d6986","serializersNS","nodeFactory","serializers","$a4f89edd2ef65182$export$7989129829daaabf","$a4f89edd2ef65182$export$dfdc1655ccc5b9cb","opt_nodeName1","opt_namespaceURI","fixedNodeName","opt_nodeName","nodeName","$a4f89edd2ef65182$export$d91b08b611cef144","$a4f89edd2ef65182$export$939885a13683f4dc","orderedKeys","sequence","$a4f89edd2ef65182$export$c6eb0402f939765f","namespaceURIs","structure","opt_structureNS","structureNS","$a4f89edd2ef65182$export$dc8ce45ce1679f4f","parsersNS","firstElementChild","nextElementSibling","parsers","parser","$a4f89edd2ef65182$export$5c934df85741dbd1","opt_keys","$a4f89edd2ef65182$export$a79a01f4edad8da8","$a4f89edd2ef65182$var$xmlSerializer_","$a4f89edd2ef65182$var$document_","implementation","createDocument","$ce16c3ce3167dc37$export$2e2bcd8739ae039","XMLFeature","xmlSerializer_","XMLSerializer","$ce16c3ce3167dc37$var$__extends","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","$d5e0fde316cac971$export$5079def2140fe6f2","dateTime","parse","$d5e0fde316cac971$export$5be9c99d34ad295b","$d5e0fde316cac971$export$6161a72ab5b6b722","$d5e0fde316cac971$export$dda73877cb166cd3","trim","$d5e0fde316cac971$export$f8009f9ca036d7d1","string","toPrecision","$d5e0fde316cac971$export$b6c828910b813a07","nonNegativeInteger","$d5e0fde316cac971$export$3255ca5635e70aed","$c7152e7ae8968a6e$var$NAMESPACE_URIS","$c7152e7ae8968a6e$var$FEATURE_READER","rte","$c7152e7ae8968a6e$var$readRte","trk","$c7152e7ae8968a6e$var$readTrk","wpt","$c7152e7ae8968a6e$var$readWpt","$c7152e7ae8968a6e$var$GPX_PARSERS","$c7152e7ae8968a6e$var$LINK_PARSERS","$c7152e7ae8968a6e$var$GPX_SERIALIZERS","$c7152e7ae8968a6e$var$RTE_SEQUENCE","$c7152e7ae8968a6e$var$RTE_SERIALIZERS","$c7152e7ae8968a6e$var$TRK_SEQUENCE","$c7152e7ae8968a6e$var$TRK_SERIALIZERS","$c7152e7ae8968a6e$var$writeWptType","$c7152e7ae8968a6e$var$GPX","GPX","readExtensions_","readExtensions","$c7152e7ae8968a6e$var$__extends","handleReadExtensions_","extensionsNode","featureReader","gpx","setAttributeNS","$c7152e7ae8968a6e$var$GPX_NODE_FACTORY","$ce16c3ce3167dc37$exports","$c7152e7ae8968a6e$var$RTE_PARSERS","cmt","desc","link","$c7152e7ae8968a6e$var$parseLink","extensions","$c7152e7ae8968a6e$var$parseExtensions","rtept","$c7152e7ae8968a6e$var$RTEPT_PARSERS","rteValues","layoutOptions","$c7152e7ae8968a6e$var$appendCoordinate","ele","$c7152e7ae8968a6e$var$TRK_PARSERS","trkseg","$c7152e7ae8968a6e$var$TRKSEG_PARSERS","trkpt","$c7152e7ae8968a6e$var$TRKPT_PARSERS","trkValues","$c7152e7ae8968a6e$var$WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","$c7152e7ae8968a6e$var$LINK_SEQUENCE","$c7152e7ae8968a6e$var$LINK_SERIALIZERS","$c7152e7ae8968a6e$var$writeLink","$c7152e7ae8968a6e$var$RTEPT_TYPE_SEQUENCE","$c7152e7ae8968a6e$var$TRKSEG_SERIALIZERS","$c7152e7ae8968a6e$var$TRKSEG_NODE_FACTORY","$c7152e7ae8968a6e$var$WPT_TYPE_SEQUENCE","$c7152e7ae8968a6e$var$WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","$c7152e7ae8968a6e$var$GEOMETRY_TYPE_TO_NODENAME","getAttribute","hasZ","hasM","$c7152e7ae8968a6e$var$applyLayoutOptions","href","$9fd014ab6df63665$exports","$b4c0e2e13beea46e$exports","$c7152e7ae8968a6e$export$2e2bcd8739ae039","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","$0f235d2d04095c6e$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase","$5edd00bd92be9cf8$var$__extends","getImage","getPixelRatio","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$b54439be79d4619a$export$bc96ecc7c2a50764","image","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5edd00bd92be9cf8$exports","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$cd3bc8d185522361$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$b54439be79d4619a$exports","listenImage","$0f235d2d04095c6e$exports","$2b0a118af78fb031$var$brokenDiagonalRendering_","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$fa21ebc07613627d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$fa21ebc07613627d$export$75f39f0ce198f93f","$2b0a118af78fb031$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","clip","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$6b000a049d919fe5$export$8240f01c446270e6","getImageData","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$2b0a118af78fb031$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$398e350e33050c07$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$a12e09565a34db59$export$2e2bcd8739ae039","TileCache","$a12e09565a34db59$var$__extends","pruneExceptNewestZ","$bf2a04496fadabc6$export$a807b7874eb66454","$7e3d7a0f8b272861$export$2e2bcd8739ae039","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$ed6dc99f268f3882$var$__extends","getInterpolate","refresh","setAttributions","$550e524b0d1b61d4$var$TileRange","TileRange","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$bb602a307ef98bb5$export$2e2bcd8739ae039","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$var$resolutionsFromExtent","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$export$a251b12f5601c16f","opt_maxResolution","half","$988a11d09320f6a8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$a12e09565a34db59$exports","tmpSize","tileOptions","zDirection","$988a11d09320f6a8$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$5779655d81caea04$export$39a9ce3624977b84","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","updateCacheSize","tileCount","useTile","$ed6dc99f268f3882$exports","$988a11d09320f6a8$export$c571855c51e6c4b6","$988a11d09320f6a8$export$2e2bcd8739ae039","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","$bf2a04496fadabc6$export$d6af199866bfb566","$91dd08a0f5859882$export$4229b1d9af69b3be","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$988a11d09320f6a8$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$91dd08a0f5859882$export$2a1fa079bfd73dde","$51d055913ca55b5e$var$TileImage","TileImage","imageSmoothing","$51d055913ca55b5e$var$defaultTileLoadFunction","tileClass","$cd3bc8d185522361$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$398e350e33050c07$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$e6408236331c2614$exports","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","$963a7ef65488964c$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$5779655d81caea04$export$38500bbeccc864ff","$963a7ef65488964c$var$__extends","$51d055913ca55b5e$exports","$6c8498cc816f2362$export$4de8a5e77eb994ad","OSM","$6c8498cc816f2362$var$__extends","$963a7ef65488964c$exports","$2f0127a7d7474f3e$var$ATTRIBUTIONS","$6c8498cc816f2362$exports","ATTRIBUTION","$2f0127a7d7474f3e$var$LayerConfig","terrain","toner","watercolor","$2f0127a7d7474f3e$var$ProviderConfig","$2f0127a7d7474f3e$export$2e2bcd8739ae039","Stamen","provider","providerConfig","layerConfig","$2f0127a7d7474f3e$var$__extends","$176ca75ee9f69668$exports","t1","t2","r2","e2","a2","h2","u","p","n1","r1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","s1","l1","f1","m1","d1","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","$34c742891733e7a4$export$2e2bcd8739ae039","RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$ccc4e6f11f11978f$export$2e2bcd8739ae039","$eb51d0a16123ee90$export$84bf76cd7afc7469","$588823c001569193$var$withCredentials","$588823c001569193$export$14cc81df70b6707e","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","response","onerror","send","$588823c001569193$export$441d7b57adab24d0","addFeatures","$84888e4daf3fdf44$export$d402fd02dc2b661c","opt_feature","opt_features","$84888e4daf3fdf44$var$__extends","$84888e4daf3fdf44$var$VectorSource","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","$84888e4daf3fdf44$export$2e2bcd8739ae039","$e60011aea38e6239$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$e0807f400ec9a0a9$export$dc5b1400ac3a10a8","$3e99c452138b2224$export$2e2bcd8739ae039","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","$3e99c452138b2224$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$06150d8570b7481b$export$2e2bcd8739ae039","CircleStyle","$06150d8570b7481b$var$__extends","setRadius","$3e99c452138b2224$exports","$d61d1dcaf3c44610$export$2e2bcd8739ae039","Fill","color_","setColor","$f9d0329c5c745263$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$8c7f6dda98e8cb9c$var$Style","Style","geometryFunction_","$8c7f6dda98e8cb9c$var$defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setStroke","setText","$8c7f6dda98e8cb9c$var$defaultStyles","$8c7f6dda98e8cb9c$export$6865c5ac2f5ce8b6","$06150d8570b7481b$exports","$8c7f6dda98e8cb9c$export$2e2bcd8739ae039","$c8d6dc4c09ed9916$var$Property","$c8d6dc4c09ed9916$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$c8d6dc4c09ed9916$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$8c7f6dda98e8cb9c$export$c314ea3f6b164147","$cf547866e052f25b$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$cf547866e052f25b$export$f21891651e408226","$cf547866e052f25b$export$7a98aa5364d62ba8","$cf547866e052f25b$export$9f746cc58a899a00","$cf547866e052f25b$export$89b10f327e413e71","$cf547866e052f25b$export$2e2bcd8739ae039","$eb0e5c3938110b4c$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$2bb20f8873deb436$export$2e2bcd8739ae039","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$2bb20f8873deb436$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$b652f9dd73b29cfe$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$b652f9dd73b29cfe$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$2bb20f8873deb436$exports","$a207f23baa5aa2c5$export$2e2bcd8739ae039","CanvasLineStringBuilder","$a207f23baa5aa2c5$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$7d2e8ba11a45ae8a$export$2e2bcd8739ae039","CanvasPolygonBuilder","$7d2e8ba11a45ae8a$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$27569314e3df91c2$export$2e2bcd8739ae039","$79529ab61b92f869$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$8243e906fae47bbe$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$8243e906fae47bbe$export$2e2bcd8739ae039","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$8243e906fae47bbe$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","interiorPoints","getFlatInteriorPoints","beg_1","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$e22658f4b743550b$var$BATCH_CONSTRUCTORS","Circle","$7d2e8ba11a45ae8a$exports","Default","$b652f9dd73b29cfe$exports","$a207f23baa5aa2c5$exports","Text","$8243e906fae47bbe$exports","$e22658f4b743550b$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","imageState","$42152f52b26b6ca7$var$pixelContext","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$42152f52b26b6ca7$var$__extends","col","row","clearRect","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext","pixelCanvas","Uint8Array","$cb18cdefd702a327$exports","$e74ccf0666398498$export$2e2bcd8739ae039","$f6421f31729929e6$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$6526fa4ee42dc39d$var$tmpExtent","$6526fa4ee42dc39d$var$p1","$6526fa4ee42dc39d$var$p2","$6526fa4ee42dc39d$var$p3","$6526fa4ee42dc39d$var$p4","$6526fa4ee42dc39d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6526fa4ee42dc39d$var$rtlRegEx","$6526fa4ee42dc39d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6526fa4ee42dc39d$var$createTextChunks","acc","line","$6526fa4ee42dc39d$export$2e2bcd8739ae039","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","reduce","_a","baseStyle","widths","heights","lineWidths","currentWidth","currentHeight","$d4aabc5c971073f1$export$7d7c13020df1e791","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$a34a824d875e4ea1$var$ORDER","$a34a824d875e4ea1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$a34a824d875e4ea1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$a34a824d875e4ea1$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$a34a824d875e4ea1$export$2e2bcd8739ae039","$7b0c2128a27f5020$export$2e2bcd8739ae039","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$7b0c2128a27f5020$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$61c65c2463af340d$export$2e2bcd8739ae039","$546509bca2d85ec0$export$2e2bcd8739ae039","$0e5ad1d3b638689e$var$taintedTestContext","$0e5ad1d3b638689e$var$IconImage","IconImage","imageState_","tainted_","$0e5ad1d3b638689e$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$0e5ad1d3b638689e$export$3988ae62b71be9a3","$8463d325b53eeb0c$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","$0e5ad1d3b638689e$exports","offset_","offsetOrigin_","offsetOrigin","$8463d325b53eeb0c$var$__extends","setAnchor","iconImageSize","$4b9ac454600c05d2$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$4b9ac454600c05d2$export$531ddd8416d52dfc","feature1","feature2","$4b9ac454600c05d2$export$bdacc5b475012edb","$4b9ac454600c05d2$export$36f470a33a42f413","$4b9ac454600c05d2$var$renderGeometry","$4b9ac454600c05d2$var$renderFeatureInternal","getGeometries","$659e0e97392a5f5e$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$659e0e97392a5f5e$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$e22e7611e69f42a9$export$3e4e33ea14aeb531","clipped","transforms","$7b0c2128a27f5020$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$8463d325b53eeb0c$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$13dfa0283bf5c35f$export$bd05e394339d469","resultFeatures","$13dfa0283bf5c35f$export$6d4d555ddbfffa32","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","$6da4c8ed3074c92b$export$39a9ce3624977b84","declutterBuilderGroup","userTransform","userExtent_1","$4b9ac454600c05d2$export$75084a70d324c1e6","dirty","renderFeature","userExtent","replayGroupInstructions","$42152f52b26b6ca7$exports","$659e0e97392a5f5e$export$2e2bcd8739ae039","$82a68515bd6ef378$export$2e2bcd8739ae039","VectorLayer","$82a68515bd6ef378$var$__extends","$659e0e97392a5f5e$exports","$c8d6dc4c09ed9916$exports","$e4c61536de922b84$export$2e2bcd8739ae039","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","getUseInterimTilesOnError","$02fffef185f4339b$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$02fffef185f4339b$var$__extends","isDrawableTile","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","frameState1","tileSource1","postRenderFunction","opt_tileCallback","$02fffef185f4339b$export$2e2bcd8739ae039","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer","$32e67a4d3559554a$var$__extends","$02fffef185f4339b$exports","$93be2de6a052f587$exports","$83a6830a1d4437d2$var$style","$41aa29ae0c4b607a$exports","$32e67a4d3559554a$exports","$2f0127a7d7474f3e$exports","$82a68515bd6ef378$exports","$84888e4daf3fdf44$exports","$c7152e7ae8968a6e$exports"],"version":3,"file":"index.73d87553.js.map"}